<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CREDITLINEACCEPTEDEMAIL" xml:space="preserve">
    <value>Dear customer,&lt;br&gt;&lt;br&gt;Your request to borrow {0} via Credit Line has been accepted. &lt;br&gt;&lt;br&gt;Regards, {1} team.</value>
  </data>
  <data name="CREDITLINEMAILTITLE" xml:space="preserve">
    <value>Credit Line request status</value>
  </data>
  <data name="MARKETPLACEBALANCE" xml:space="preserve">
    <value>Marketplace Balance</value>
  </data>
  <data name="MAXCREDITLINEREQUEST" xml:space="preserve">
    <value>Maximum Credit Line request</value>
  </data>
  <data name="NOTENOUGHDAYS" xml:space="preserve">
    <value>To use Credit Line you must be our Member for at least {0} days.</value>
  </data>
  <data name="EARNINGDELAY" xml:space="preserve">
    <value>Earning delay</value>
  </data>
  <data name="INVESTMENTCALCULATORDESCRIPTION" xml:space="preserve">
    <value>Investment Platform calculator helps you calculate income base on Investment Plan type</value>
  </data>
  <data name="INVESTMENTPLAN" xml:space="preserve">
    <value>Investment Plan</value>
  </data>
  <data name="MONTHLY" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="OTHER" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="REPAYCREDITLINETOWITHDRAW" xml:space="preserve">
    <value>You must repay your Credit Line debt before you can withdraw any money.</value>
  </data>
  <data name="MONTHS" xml:space="preserve">
    <value>months</value>
  </data>
  <data name="PROFITABILITY" xml:space="preserve">
    <value>Profitability</value>
  </data>
  <data name="NOREFS" xml:space="preserve">
    <value>You currently do not have any referrals. Refer people to get more earnings.</value>
  </data>
  <data name="CANTOPENNEWTICKET" xml:space="preserve">
    <value>You can't open new ticket. Please wait to resolve your other tickets.</value>
  </data>
  <data name="LASTJACKPOTWINNERSCONGRATULATIONS" xml:space="preserve">
    <value>Congratulations to last Jackpot winners!</value>
  </data>
  <data name="BANNERFROM" xml:space="preserve">
    <value>Banner from</value>
  </data>
  <data name="WEBSITEFROM" xml:space="preserve">
    <value>Website from</value>
  </data>
  <data name="DEPARTMENT" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="YOURTRAFFICBALANCE" xml:space="preserve">
    <value>(Your Traffic Balance is {0})</value>
  </data>
  <data name="CASHBALANCEBONUSFROMUPGRADE" xml:space="preserve">
    <value>Cash Balance bonus from upgrade</value>
  </data>
  <data name="TRAFFICBALANCEBONUSFROMUPGRADE" xml:space="preserve">
    <value>Traffic Balance bonus from upgrade</value>
  </data>
  <data name="OFFERLEVEL" xml:space="preserve">
    <value>Offer Level</value>
  </data>
  <data name="MINIVIDEOUPLOADPRICE" xml:space="preserve">
    <value>Mini Video upload price</value>
  </data>
  <data name="MINIVIDEOWATCHPRICE" xml:space="preserve">
    <value>Mini Video watch price</value>
  </data>
  <data name="MINIVIDEO" xml:space="preserve">
    <value>Mini Video</value>
  </data>
  <data name="MINIVIDEOCREATED" xml:space="preserve">
    <value>Mini Video successfully added</value>
  </data>
  <data name="MUSTUPLOADVIDEO" xml:space="preserve">
    <value>Please upload a video.</value>
  </data>
  <data name="VIDEO" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="AVAIBLEVIDEOS" xml:space="preserve">
    <value>Available videos</value>
  </data>
  <data name="MINIVIDEODESCRIPTION" xml:space="preserve">
    <value>Here you can upload Mini Videos, or manage your current ones.</value>
  </data>
  <data name="SIZECANBEUPTO" xml:space="preserve">
    <value>Size can be up to {0} MB</value>
  </data>
  <data name="WRONGFILEEXTENSION" xml:space="preserve">
    <value>Wrong file extension. Please use one of supported extensions: {0}</value>
  </data>
  <data name="YOUDONTHAVEANYVIDEOUPLOADED" xml:space="preserve">
    <value>You don't have any video uploaded</value>
  </data>
  <data name="YOURVIDEOS" xml:space="preserve">
    <value>Your videos</value>
  </data>
  <data name="MINIVIDEOBOUGHTDESCRIPTION" xml:space="preserve">
    <value>Browse our advertisers videos. Buy the ones you like and watch them.</value>
  </data>
  <data name="NOVIDEOS" xml:space="preserve">
    <value>There are no available Mini Videos right now.</value>
  </data>
  <data name="VIDEOWITHTITLEEXIST" xml:space="preserve">
    <value>Video with that title already exist. Please set different title for your Video.</value>
  </data>
  <data name="YOUDONTHAVEANYVIDEOBOUGHT" xml:space="preserve">
    <value>You don't have any video bought.</value>
  </data>
  <data name="EMAIL" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="ADDEDAS" xml:space="preserve">
    <value>Added as</value>
  </data>
  <data name="TARGETURL" xml:space="preserve">
    <value>Target Url</value>
  </data>
</root>