/****** Object:  Table [dbo].[Achievements]    Script Date: 06.02.2016 16:30:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Achievements](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Type] [int] NOT NULL,
	[Quantity] [int] NOT NULL,
	[Name] [varchar](50) NOT NULL,
	[ImageId] [int] NOT NULL,
	[Points] [int] NOT NULL,
	[AchievementStatus] [int] NOT NULL,
 CONSTRAINT [PK_Achievements] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AllContestLatestWinners2]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AllContestLatestWinners2](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ContestId] [int] NOT NULL,
	[Winner1] [varchar](120) NOT NULL,
	[Winner2] [varchar](120) NOT NULL,
	[Winner3] [varchar](120) NOT NULL,
	[NumberOfParticipants] [int] NOT NULL,
	[Participants] [text] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ApplicationSettings]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ApplicationSettings](
	[ApplicationSettingsId] [int] NOT NULL,
	[SiteName] [varchar](30) NOT NULL,
	[SiteUrl] [varchar](50) NOT NULL,
	[AdminName] [varchar](50) NOT NULL,
	[NoReplyEmail] [varchar](320) NOT NULL,
	[ForwardEmail] [varchar](320) NOT NULL,
	[TransactionNote] [varchar](1000) NOT NULL,
	[IsInstantPayout] [bit] NOT NULL,
	[CashoutLimit1] [smallmoney] NOT NULL,
	[CashoutLimit2] [smallmoney] NOT NULL,
	[CashoutLimit3] [smallmoney] NOT NULL,
	[CashoutLimitRest] [smallmoney] NOT NULL,
	[IsFacebookAuth] [bit] NOT NULL,
	[FacebookAppId] [varchar](30) NULL,
	[PointsBalanceName] [varchar](20) NOT NULL,
	[SiteSlogan] [varchar](50) NOT NULL,
	[DirectRefsUsernamesEncrypted] [bit] NOT NULL,
	[DirectRefsDeleting] [bit] NOT NULL,
	[RentedRefsDeleting] [bit] NOT NULL,
	[RentedRefsRecycling] [bit] NOT NULL,
	[RentedRefsMinPackage] [int] NOT NULL,
	[RentedRefsPackagesCount] [int] NOT NULL,
	[RentedRefsPackageMultipler] [int] NULL,
	[RentedRefsRentalTimeDays] [int] NOT NULL,
	[RentedRefsMinLastDaysClickingActivity] [int] NOT NULL,
	[RentedRefsMinDaysToAutoPay] [int] NOT NULL,
	[DefaultAvatarUrl] [varchar](200) NOT NULL,
	[RefferalsRentingOption] [int] NOT NULL,
	[MinTotalClicksToRentRefs] [int] NOT NULL,
	[MinDailyClicksToEarnFromRefs] [int] NOT NULL,
	[BotRefsInactiveBotPercentage] [int] NOT NULL,
	[BotRefsBotQualityIndex] [int] NOT NULL,
	[AdvertRejectionMessage] [nvarchar](max) NOT NULL,
	[AdvertStartMessage] [nvarchar](max) NULL,
	[AccountActivationMessage] [nvarchar](max) NOT NULL,
	[ResetPasswordMessage] [nvarchar](max) NOT NULL,
	[PtcAdvertDescriptionCost] [smallmoney] NOT NULL,
	[PtcAdvertFontBoldCost] [smallmoney] NOT NULL,
	[PtcAdvertGeolocationCost] [smallmoney] NOT NULL,
	[BannerAdvertConstantBannerEnabled] [bit] NOT NULL,
	[BannerAdvertConstantBannerWidth] [int] NOT NULL,
	[BannerAdvertConstantBannerHeight] [int] NOT NULL,
	[MembershipTenPointsValue] [smallmoney] NOT NULL,
	[MembershipUpgradePointsDiscount] [int] NOT NULL,
	[FbPointsPerLike] [int] NOT NULL,
	[FbFriendsRestrictionsCost] [smallmoney] NOT NULL,
	[FbProfilePicRestrictionsCost] [smallmoney] NOT NULL,
	[IsInstantlyActivated] [bit] NOT NULL,
	[EmailHost] [varchar](100) NOT NULL,
	[EmailUsername] [varchar](100) NOT NULL,
	[EmailPassword] [varchar](100) NOT NULL,
	[EmailPort] [int] NOT NULL,
	[LastCRONRun] [datetime] NOT NULL,
	[DaysToInactivity] [int] NOT NULL,
	[PlannedCronRun] [datetime] NOT NULL,
	[SSLType] [int] NOT NULL,
	[FreeField1] [varchar](50) NOT NULL,
	[FreeField2] [varchar](50) NOT NULL,
	[CrowdFlower1] [varchar](50) NULL,
	[CrowdFlower2] [varchar](50) NULL,
	[BannerLoc1] [varchar](50) NOT NULL,
	[BannerLoc2] [varchar](50) NOT NULL,
	[Games1] [varchar](50) NULL,
	[Games2] [bit] NOT NULL,
	[TrafficGridLimit] [smallmoney] NOT NULL,
	[TrafficGridPrize1] [int] NOT NULL,
	[TrafficGridPrize2] [int] NOT NULL,
	[TrafficGridPrize3] [int] NOT NULL,
	[TrafficGridPrize4] [int] NOT NULL,
	[TrafficGridPrize5] [int] NOT NULL,
	[TrafficGridPrize6] [int] NOT NULL,
	[TrafficGridDailyMoneyLeft] [smallmoney] NOT NULL,
	[TrafficGridImage1] [varchar](50) NOT NULL,
	[TrafficGridImage2] [varchar](50) NOT NULL,
	[TrafficGridImage3] [varchar](50) NOT NULL,
	[TrafficGridImage4] [varchar](50) NOT NULL,
	[ProxStopApiKey] [varchar](50) NULL,
	[BlockScriptApiKey] [varchar](80) NULL,
	[BlockScriptURL] [varchar](140) NULL,
	[IPPolicy] [int] NOT NULL,
	[ProxySMSType] [int] NOT NULL,
	[IsTransferPointsToMainBalanceEnabled] [bit] NOT NULL,
	[ExposureCategoriesEnabled] [bit] NOT NULL,
	[ExposureRefEarningsEnabled] [bit] NOT NULL,
	[AreContestsEnabled] [bit] NOT NULL,
	[AreCPAOffersEnabled] [bit] NOT NULL,
	[AreBannerImpressionsEnabled] [bit] NOT NULL,
	[BannerGeolocationCost] [money] NOT NULL,
	[DetailedRegisterFields] [bit] NOT NULL,
	[TrafficExchangeMod] [bit] NOT NULL,
	[GlobalCashoutLimitPerDay] [money] NOT NULL,
	[GlobalCashoutsToday] [money] NOT NULL,
	[MemberMaxCashoutLimit] [money] NOT NULL,
	[MoneyTakenFromCPAOffersPercent] [int] NOT NULL,
	[SiteDescription1] [varchar](300) NULL,
	[IsEUCookieEnabled1] [bit] NOT NULL,
	[MinCPAPrice1] [money] NOT NULL,
	[AdExposureProfitsEnabled] [bit] NOT NULL,
	[CurrencySign] [nvarchar](4) NOT NULL,
	[CurrencyCode] [varchar](3) NOT NULL,
	[IsCurrencySignBefore] [bit] NOT NULL,
	[PureGPTMode] [bit] NOT NULL,
	[UniversalHandlerPassword] [varchar](max) NOT NULL,
	[IsSecureMail] [bit] NOT NULL,
	[MinimumTransferAmount] [money] NOT NULL,
	[ReferralEarningsUpToTier] [int] NOT NULL,
	[ReferralEarningsFromTier2] [int] NOT NULL,
	[ReferralEarningsFromTier3] [int] NOT NULL,
	[ReferralEarningsFromTier4] [int] NOT NULL,
	[ReferralEarningsFromTier5] [int] NOT NULL,
	[ReferralEarningsFromTier6] [int] NOT NULL,
	[ReferralEarningsFromTier7] [int] NOT NULL,
	[ReferralEarningsFromTier8] [int] NOT NULL,
	[ReferralEarningsFromTier9] [int] NOT NULL,
	[ReferralEarningsFromTier10] [int] NOT NULL,
	[EnableRefCommissionFromUpgrades] [bit] NOT NULL,
	[ShoutboxDisplayMode] [int] NOT NULL,
	[ShoutboxDisplayContent] [int] NOT NULL,
	[TransferFundsMode] [int] NOT NULL,
	[ShoutboxIconsEnabled] [bit] NOT NULL,
	[TransferSlidebarEnabled] [bit] NOT NULL,
	[WebsiteMode] [int] NOT NULL,
	[CustomFieldsAsSurvey] [bit] NOT NULL,
	[ProfilingSurveyReward] [int] NOT NULL,
	[CaptchaType] [int] NOT NULL,
	[ReCAPTCHASiteKey] [varchar](max) NULL,
	[ReCAPTCHASecretKey] [varchar](max) NULL,
	[SolveMediaVKey] [varchar](max) NULL,
	[SolveMediaCKey] [varchar](max) NULL,
	[LoginUsingEmail] [bit] NOT NULL,
	[EnableSecondaryPassword] [bit] NOT NULL,
	[AllowMembersToChooseCaptcha] [bit] NOT NULL,
	[IsVacationModeEnabled] [bit] NOT NULL,
	[VacationModeCostPerDay] [money] NOT NULL,
	[DaysToInactivityCharge] [int] NOT NULL,
	[InactivityChargePerDay] [money] NOT NULL,
	[NormalBannerWidth] [int] NOT NULL,
	[NormalBannerHeight] [int] NOT NULL,
	[BannerAdvertisingPolicy] [int] NOT NULL,
	[BidAmount] [money] NOT NULL,
	[StartingAmount] [money] NOT NULL,
	[StartingAmountConstant] [money] NOT NULL,
	[LostBidReturnPercent] [int] NOT NULL,
	[InstantPayoutMinOffersCompleted] [int] NOT NULL,
	[InstantPayoutMinRegisteredDays] [int] NOT NULL,
	[InstantPayoutMinCashoutsNumber] [int] NOT NULL,
	[PorftolioSharesPolicy] [int] NOT NULL,
	[SharesMarketSaleCommission] [int] NOT NULL,
	[GiftCardMode] [int] NOT NULL,
	[GiftCodeEmailDraft] [nvarchar](max) NOT NULL,
	[CreditVideoPolicy] [int] NOT NULL,
	[YahooSearchAPI] [varchar](max) NULL,
	[VideoMode] [int] NOT NULL,
	[SearchMode] [int] NOT NULL,
	[CurrencyPointsName] [nvarchar](100) NOT NULL,
	[TotalPointsExchangedForGiftCards] [int] NOT NULL,
	[TotalPointsGenerated] [int] NOT NULL,
	[SearchTimerMinutes] [int] NOT NULL,
	[MaxPointsDailyForSearch] [int] NOT NULL,
	[ShowDetailedBanInformation] [bit] NOT NULL,
	[ResetPasswordIndirectLinkEnabled] [bit] NOT NULL,
	[ResetPasswordLink] [varchar](max) NOT NULL,
	[ConvertCrowdflowerToMainBalance] [bit] NOT NULL,
	[ShoutboxShowCountry] [bit] NOT NULL,
	[EnableKeyboard] [bit] NOT NULL,
	[BidAmountConstant] [money] NOT NULL,
	[LockDays] [int] NOT NULL,
	[LockPoints] [int] NOT NULL,
	[IsLock] [bit] NOT NULL,
	[FamobiGameUserId] [varchar](30) NULL,
 CONSTRAINT [PK_ApplicationSettings] PRIMARY KEY CLUSTERED 
(
	[ApplicationSettingsId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BalanceLogs]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BalanceLogs](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[DateOccured] [datetime] NULL,
	[Note] [nvarchar](200) NULL,
	[Amount] [money] NOT NULL,
	[Balance] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[BannerAdvertGeolocations]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BannerAdvertGeolocations](
	[BannerAdvertGeolocationId] [int] IDENTITY(1,1) NOT NULL,
	[BannerAdvertId] [int] NOT NULL,
	[BannedCountry] [varchar](50) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[BannerAdvertGeolocationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BannerAdvertPacks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BannerAdvertPacks](
	[BannerAdvertPackId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[IsVisibleByMembers] [bit] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[Price] [smallmoney] NOT NULL,
 CONSTRAINT [PK_BannerAdvertPacks] PRIMARY KEY CLUSTERED 
(
	[BannerAdvertPackId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[BannerAdverts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BannerAdverts](
	[BannerAdvertId] [int] IDENTITY(1,1) NOT NULL,
	[BannerAdvertPackId] [int] NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[ImagePath] [nvarchar](256) NOT NULL,
	[Type] [int] NOT NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatorUsername] [nvarchar](50) NULL,
	[CreatorEmail] [nvarchar](80) NULL,
	[CreationDate] [datetime] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[TotalSecsActive] [int] NOT NULL,
	[Clicks] [int] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[Status] [int] NOT NULL,
	[StatusLastChangedDate] [datetime] NULL,
	[Price] [smallmoney] NULL,
 CONSTRAINT [PK_BannerAdverts] PRIMARY KEY CLUSTERED 
(
	[BannerAdvertId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[BannerAuctions]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BannerAuctions](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DateStart] [datetime] NULL,
	[BannerType] [int] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[BannerBids]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BannerBids](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[BannerAuctionId] [int] NOT NULL,
	[BidValue] [smallmoney] NOT NULL,
	[BannerAdvertId] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Banners]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Banners](
	[BannerId] [int] IDENTITY(1,1) NOT NULL,
	[Image] [nvarchar](256) NOT NULL,
 CONSTRAINT [PK_Banners] PRIMARY KEY CLUSTERED 
(
	[BannerId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[CharityDontations]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CharityDontations](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[DateWhen] [datetime] NOT NULL,
	[Amount] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CoAdministrators]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CoAdministrators](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[Password] [nvarchar](128) NOT NULL,
	[Status] [int] NOT NULL,
	[Privileges] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CompletedTransactions]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CompletedTransactions](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[WhenMade] [datetime] NULL,
	[TransactionId] [varchar](100) NULL,
	[Username] [varchar](100) NULL,
	[PaidFor] [varchar](100) NULL,
	[Amount] [smallmoney] NULL,
	[PaymentProcessor] [int] NULL,
	[IsGuest] [bit] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ContestLatestWinners]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ContestLatestWinners](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Type] [int] NOT NULL,
	[Winner1] [varchar](120) NULL,
	[Winner2] [varchar](120) NULL,
	[Winner3] [varchar](120) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ContestParticipants]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ContestParticipants](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ContestId] [int] NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[LatestAction] [datetime] NULL,
	[Points] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Contests]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Contests](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Type] [int] NOT NULL,
	[Name] [varchar](50) NOT NULL,
	[DateStart] [datetime] NOT NULL,
	[DateEnd] [datetime] NOT NULL,
	[Status] [int] NOT NULL,
	[PrizeType] [int] NOT NULL,
	[Prize1Value] [money] NOT NULL,
	[Prize2Value] [money] NOT NULL,
	[Prize3Value] [money] NOT NULL,
	[ClicksRestriction] [int] NULL,
	[RegisteredDaysRestriction] [int] NULL,
	[DirectRefRestriction] [int] NULL,
	[RentedRefRestriction] [int] NULL,
	[Autoparticipate] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ContestsBlocked]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContestsBlocked](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[ContestId] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[CPACategories]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CPACategories](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CategoryName] [varchar](max) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CPACategoriesBlocked]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CPACategoriesBlocked](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[CPACategoryId] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[CPAOffers]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CPAOffers](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DateAdded] [datetime] NULL,
	[BaseValue] [money] NULL,
	[CategoryId] [int] NULL,
	[Title] [nvarchar](50) NULL,
	[Description] [nvarchar](4000) NULL,
	[LastCredited] [datetime] NULL,
	[IsDaily] [bit] NULL,
	[Status] [int] NULL,
	[ImageURL] [varchar](150) NULL,
	[LoginBoxRequired] [bit] NULL,
	[EmailBoxRequired] [bit] NULL,
	[AdvertiserUsername] [varchar](50) NULL,
	[CreditsBought] [int] NULL,
	[TargetURL] [varchar](200) NULL,
	[IsFromAutomaticNetwork] [bit] NOT NULL,
	[NetworkName] [varchar](80) NULL,
	[NetworkOfferId] [varchar](30) NULL,
	[NetworkRate] [varchar](10) NULL,
	[IsSyncWithNetwork] [bit] NOT NULL,
	[NetworkOfferIdInt] [varchar](20) NULL,
	[IsIgnored] [bit] NOT NULL,
	[CreditOfferAs] [int] NOT NULL,
	[MaxDailyCredits] [int] NOT NULL,
	[GeolocatedCC] [varchar](max) NULL,
	[GeolocatedCities] [varchar](max) NULL,
	[GeolocatedAgeMin] [int] NULL,
	[GeolocatedAgeMax] [int] NULL,
	[GeolocatedGender] [int] NULL,
	[GeolocationProfile] [varchar](max) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CPAOffersOnHold]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CPAOffersOnHold](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DateAdded] [datetime] NULL,
	[BaseValue] [money] NULL,
	[CategoryId] [int] NULL,
	[Title] [nvarchar](50) NULL,
	[Description] [nvarchar](4000) NULL,
	[LastCredited] [datetime] NULL,
	[IsDaily] [bit] NULL,
	[Status] [int] NULL,
	[ImageURL] [varchar](150) NULL,
	[LoginBoxRequired] [bit] NULL,
	[EmailBoxRequired] [bit] NULL,
	[AdvertiserUsername] [varchar](50) NULL,
	[CreditsBought] [int] NULL,
	[TargetURL] [varchar](200) NULL,
	[IsFromAutomaticNetwork] [bit] NOT NULL,
	[NetworkName] [varchar](80) NULL,
	[NetworkOfferId] [varchar](30) NULL,
	[NetworkRate] [varchar](10) NULL,
	[IsSyncWithNetwork] [bit] NOT NULL,
	[NetworkOfferIdInt] [varchar](20) NULL,
	[IsIgnored] [bit] NOT NULL,
	[CreditOfferAs] [int] NOT NULL,
	[MaxDailyCredits] [int] NOT NULL,
	[GeolocatedCC] [varchar](max) NULL,
	[GeolocatedCities] [varchar](max) NULL,
	[GeolocatedAgeMin] [int] NULL,
	[GeolocatedAgeMax] [int] NULL,
	[GeolocatedGender] [int] NULL,
	[GeolocationProfile] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CPAPostBackLogs]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CPAPostBackLogs](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[NetworkName] [varchar](50) NOT NULL,
	[DateHappened] [datetime] NULL,
	[Username] [varchar](50) NULL,
	[WebsiteId] [varchar](10) NULL,
	[CampaignId] [varchar](10) NULL,
	[IPFrom] [varchar](50) NULL,
	[OfferTitle] [varchar](50) NULL,
	[Rate] [varchar](50) NULL,
	[CreditType] [varchar](5) NULL,
	[UserCreditedMoney] [varchar](10) NULL,
	[SentBalance] [varchar](10) NULL,
	[CalculatedBalance] [varchar](10) NULL,
	[Statusek] [int] NULL,
	[CalculatedBalanceMoney] [smallmoney] NULL,
	[IsDeleted] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CPAReports]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CPAReports](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DateReported] [datetime] NULL,
	[ReportText] [varchar](600) NULL,
	[ReportingUsername] [varchar](50) NOT NULL,
	[OfferId] [int] NULL,
	[IsDeleted] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CronEntries]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CronEntries](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Date1] [datetime] NOT NULL,
	[Type1] [int] NOT NULL,
	[Text1] [varchar](300) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CrowdflowerTasks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CrowdflowerTasks](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[Points] [int] NULL,
	[Date] [datetime] NOT NULL,
	[Title] [varchar](80) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CustomPayoutProcessors]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CustomPayoutProcessors](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[StatusInt] [int] NOT NULL,
	[Name] [nvarchar](20) NULL,
	[Description] [nvarchar](200) NULL,
	[MoneyFee] [money] NULL,
	[PercentFee] [money] NULL,
	[ImageURL] [varchar](300) NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CustomRegistrationFields]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CustomRegistrationFields](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[StringID] [varchar](50) NOT NULL,
	[FieldType] [int] NOT NULL,
	[IsRequired] [bit] NOT NULL,
	[IsHidden] [bit] NOT NULL,
	[Label] [nvarchar](100) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DailyEarnings]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DailyEarnings](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[EarningsType] [int] NOT NULL,
	[DateDay] [datetime] NOT NULL,
	[SumAmount] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[DailyPools]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DailyPools](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DailyPoolType] [int] NOT NULL,
	[DateDay] [datetime] NOT NULL,
	[SumAmount] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[EgoPayGateways]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EgoPayGateways](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Emails]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Emails](
	[EmailId] [int] IDENTITY(1,1) NOT NULL,
	[FromName] [nvarchar](50) NULL,
	[FromEmail] [nvarchar](30) NULL,
	[ToName] [nvarchar](50) NULL,
	[ToEmail] [nvarchar](30) NULL,
	[Subject] [nvarchar](64) NULL,
	[Body] [nvarchar](4000) NULL,
	[SentDate] [datetime] NULL,
	[IsSingleRecipient] [bit] NOT NULL,
	[RecipientUsername] [nvarchar](50) NULL,
	[IsGeolocated] [bit] NOT NULL,
 CONSTRAINT [PK_Emails] PRIMARY KEY CLUSTERED 
(
	[EmailId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[FacebookAdvertPacks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FacebookAdvertPacks](
	[FbAdvertPackId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[IsVisibleByMembers] [bit] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[Price] [smallmoney] NOT NULL,
 CONSTRAINT [PK_FacebookAdvertPacks] PRIMARY KEY CLUSTERED 
(
	[FbAdvertPackId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[FacebookAdverts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[FacebookAdverts](
	[FbAdvertId] [int] IDENTITY(1,1) NOT NULL,
	[FbAdvertPackId] [int] NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[MinFriends] [int] NOT NULL,
	[HasProfilePicRestrictions] [bit] NOT NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatorUsername] [nvarchar](50) NULL,
	[CreatorEmail] [nvarchar](80) NULL,
	[CreationDate] [datetime] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[TotalSecsActive] [int] NOT NULL,
	[Clicks] [int] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[Status] [int] NOT NULL,
	[StatusLastChangedDate] [datetime] NULL,
	[Price] [smallmoney] NULL,
 CONSTRAINT [PK_FacebookAdverts] PRIMARY KEY CLUSTERED 
(
	[FbAdvertId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[FamobiGames]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FamobiGames](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Url] [nvarchar](256) NOT NULL,
	[Name] [varchar](50) NOT NULL,
	[ThumbUrl] [nvarchar](256) NULL,
	[Description] [nvarchar](max) NULL,
	[AspectRatio] [varchar](5) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Friends]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Friends](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Who1] [varchar](50) NOT NULL,
	[Who2] [varchar](50) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[GeolocatedFeatures]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GeolocatedFeatures](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CC] [varchar](2) NOT NULL,
	[FeatureId] [int] NOT NULL,
	[Points] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[GiftCards]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GiftCards](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Title] [nvarchar](100) NULL,
	[Description] [nvarchar](max) NULL,
	[ImageUrl] [varchar](max) NULL,
	[Status] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[GiftCodeExchangeRates]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GiftCodeExchangeRates](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CC] [varchar](2) NOT NULL,
	[Points] [int] NOT NULL,
	[GiftCodeId] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[GiftCodeRequests]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GiftCodeRequests](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[GiftCodeId] [int] NOT NULL,
	[DateRequested] [datetime] NOT NULL,
	[DateSent] [datetime] NULL,
	[StatusInt] [int] NOT NULL,
	[CodeSent] [nvarchar](200) NULL,
	[PointsPaid] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[GiftCodes]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GiftCodes](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Value] [nvarchar](100) NULL,
	[GiftCardId] [int] NOT NULL,
	[Status] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[GlobalPools]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GlobalPools](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[GlobalPoolType] [int] NOT NULL,
	[SumAmount] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[History]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[History](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[AssignedUsername] [varchar](50) NOT NULL,
	[Type] [int] NOT NULL,
	[Date] [datetime] NOT NULL,
	[IsRead] [bit] NOT NULL,
	[Text] [nvarchar](300) NULL,
 CONSTRAINT [PK_History] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IncomingPayments]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IncomingPayments](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Status] [int] NOT NULL,
	[Username] [varchar](80) NOT NULL,
	[WhenMade] [datetime] NULL,
	[Amount] [money] NOT NULL,
	[PaymentProcessor] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPHistoryLogs]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPHistoryLogs](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IP] [varchar](39) NULL,
	[ISP] [varchar](50) NULL,
	[Username] [varchar](50) NOT NULL,
	[LoginDate] [datetime] NOT NULL,
	[IsMasterLogin] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MembershipPacks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MembershipPacks](
	[MembershipPackId] [int] IDENTITY(1,1) NOT NULL,
	[MembershipId] [int] NOT NULL,
	[TimeDays] [int] NOT NULL,
	[Price] [smallmoney] NULL,
	[CopiesBought] [int] NOT NULL,
 CONSTRAINT [PK_UpgradePacks] PRIMARY KEY CLUSTERED 
(
	[MembershipPackId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[Memberships]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Memberships](
	[MembershipId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[Status] [int] NOT NULL,
	[DisplayOrder] [int] NOT NULL,
	[AdvertClickEarnings] [smallmoney] NULL,
	[DirectReferralAdvertClickEarnings] [smallmoney] NULL,
	[RentedReferralAdvertClickEarnings] [smallmoney] NULL,
	[DirectReferralsLimit] [int] NULL,
	[RentedReferralsLimit] [int] NULL,
	[ReferralRentCost] [smallmoney] NULL,
	[RenewalDiscount] [int] NULL,
	[AdvertPointsEarnings] [int] NOT NULL,
	[Color] [nvarchar](10) NULL,
	[RentedReferralRecycleCost] [smallmoney] NOT NULL,
	[CanAutoPay] [bit] NOT NULL,
	[DailyAutoPayCost] [smallmoney] NOT NULL,
	[MinRentingIntervalSecs] [int] NOT NULL,
	[TrafficGridTrials] [int] NOT NULL,
	[TrafficGridChances] [int] NOT NULL,
	[TrafficGridShorterAd] [int] NOT NULL,
	[OfferwallsProfitPercent] [int] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
	[CashoutLimitIcreased] [money] NOT NULL,
	[CPAProfitPercent] [int] NOT NULL,
	[RefPercentEarningsOfferwalls1] [int] NOT NULL,
	[MaxRefPackageCount] [int] NOT NULL,
	[RefPercentEarningsCPA] [int] NOT NULL,
	[HasInstantPayout] [bit] NOT NULL,
 CONSTRAINT [PK_Upgrades] PRIMARY KEY CLUSTERED 
(
	[MembershipId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[Messages]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Messages](
	[MessageId] [int] IDENTITY(1,1) NOT NULL,
	[FromUsername] [varchar](50) NOT NULL,
	[ToUsername] [varchar](50) NOT NULL,
	[SentDate] [datetime] NOT NULL,
	[Text] [nvarchar](300) NOT NULL,
	[IsRead] [bit] NOT NULL,
	[PreviousMessageId] [int] NULL,
 CONSTRAINT [PK_Messages] PRIMARY KEY CLUSTERED 
(
	[MessageId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[NetellerGateways]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[NetellerGateways](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NOT NULL,
	[ClientId] [varchar](max) NULL,
	[ClientSecret] [varchar](max) NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[NewAffiliateNetworks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[NewAffiliateNetworks](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DisplayName] [varchar](50) NULL,
	[Status] [int] NOT NULL,
	[Hash] [varchar](max) NOT NULL,
	[CreditAs] [int] NOT NULL,
	[RequiresConversion] [bit] NOT NULL,
	[HasRestrictedIPs] [bit] NOT NULL,
	[IsPostbackMode] [bit] NOT NULL,
	[RestrictedIPs] [varchar](max) NULL,
	[PublisherUsername] [varchar](70) NULL,
	[PublisherPassword] [varchar](70) NULL,
	[WebsiteID] [varchar](70) NULL,
	[PercentForMembers] [int] NULL,
	[AffiliateNetworkSoftwareTypeInt] [int] NOT NULL,
	[LastSyncDate] [datetime] NULL,
	[VarUsername] [varchar](20) NULL,
	[VarBalance] [varchar](50) NULL,
	[VarTrackingNo] [varchar](20) NULL,
	[VarOfferId] [varchar](20) NULL,
	[VarWebsiteId] [varchar](20) NULL,
	[VarMemberIP] [varchar](20) NULL,
	[OKResponse] [varchar](20) NULL,
	[VarType] [varchar](20) NULL,
	[VarTypeCredit] [varchar](20) NULL,
	[VarTypeReverse] [varchar](20) NULL,
	[VarSignature] [varchar](20) NULL,
	[SignatureCondition] [varchar](150) NULL,
	[IsPerforma] [bit] NULL,
	[WhatIsSent] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OfferRegisterEntries]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OfferRegisterEntries](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[OfferId] [int] NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[OfferStatus] [int] NOT NULL,
	[CompletedDate] [datetime] NULL,
	[PostDate] [datetime] NOT NULL,
	[LoginID] [varchar](80) NULL,
	[EmailID] [varchar](400) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Offerwalls]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Offerwalls](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DisplayName] [varchar](20) NOT NULL,
	[Status] [int] NOT NULL,
	[Hash] [varchar](max) NOT NULL,
	[ClientHTML] [varchar](max) NOT NULL,
	[CreditAs] [int] NOT NULL,
	[RequiresConversion] [bit] NOT NULL,
	[HasRestrictedIPs] [bit] NOT NULL,
	[RestrictedIPs] [varchar](max) NULL,
	[VarUsername] [varchar](20) NULL,
	[VarBalance] [varchar](50) NULL,
	[VarTrackingNo] [varchar](20) NULL,
	[OKResponse] [varchar](20) NULL,
	[VarType] [varchar](20) NULL,
	[VarTypeCredit] [varchar](20) NULL,
	[VarTypeReverse] [varchar](20) NULL,
	[VarSignature] [varchar](20) NULL,
	[SignatureCondition] [varchar](150) NULL,
	[WhatIsSent] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OfferwallsBlocked]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OfferwallsBlocked](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[OfferwallId] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[OfferwallsLogs]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OfferwallsLogs](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[DateAdded] [datetime] NOT NULL,
	[OfferStatus] [int] NOT NULL,
	[NetworkName] [varchar](20) NOT NULL,
	[Points] [int] NOT NULL,
	[ConvertedPoints] [int] NOT NULL,
	[TrackingID] [varchar](50) NULL,
	[RewardInUSD] [varchar](10) NULL,
	[SentBalance] [varchar](10) NULL,
	[CalculatedBalance] [varchar](10) NULL,
	[CalculatedBalanceMoney] [smallmoney] NULL,
	[IsDeleted] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OKpayGateways]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OKpayGateways](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PaymentProofs]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PaymentProofs](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Type] [int] NOT NULL,
	[Amount] [smallmoney] NOT NULL,
	[Date] [datetime] NOT NULL,
	[UserId] [int] NOT NULL,
	[Processor] [int] NOT NULL,
	[ProcessorName] [nvarchar](30) NULL,
 CONSTRAINT [PK_PaymentProofs] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PayoutRequests]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PayoutRequests](
	[PayoutRequestId] [int] IDENTITY(1,1) NOT NULL,
	[Username] [nvarchar](50) NOT NULL,
	[RequestDate] [datetime] NOT NULL,
	[IsPaid] [bit] NOT NULL,
	[PaymentProcessor] [nvarchar](50) NOT NULL,
	[Amount] [smallmoney] NOT NULL,
	[PaymentAddress] [nvarchar](200) NOT NULL,
	[IsRequest] [bit] NOT NULL,
 CONSTRAINT [PK_PayoutRequests] PRIMARY KEY CLUSTERED 
(
	[PayoutRequestId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PayPalGateways]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PayPalGateways](
	[PayPalGatewayId] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [nvarchar](200) NOT NULL,
	[ApiUsername] [nvarchar](200) NOT NULL,
	[ApiPassword] [nvarchar](50) NOT NULL,
	[ApiSignature] [nvarchar](200) NOT NULL,
	[AppId] [nvarchar](200) NOT NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
 CONSTRAINT [PK_PayPalGateways] PRIMARY KEY CLUSTERED 
(
	[PayPalGatewayId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PayzaGateways]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PayzaGateways](
	[PayzaGatewayId] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [nvarchar](320) NOT NULL,
	[APIPassword] [nvarchar](max) NULL,
	[SenderEmail] [nvarchar](320) NOT NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
 CONSTRAINT [PK_PayzaGateways] PRIMARY KEY CLUSTERED 
(
	[PayzaGatewayId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PerfectMoneyGateways]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PerfectMoneyGateways](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NULL,
	[Number] [varchar](30) NULL,
	[Name] [varchar](300) NULL,
	[AlternateMerchantPassphrase] [varchar](max) NULL,
	[Password] [varchar](100) NULL,
	[LoginPassword] [varchar](100) NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PortfolioProducts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PortfolioProducts](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DateStarted] [datetime] NULL,
	[Name] [nvarchar](100) NULL,
	[Description] [nvarchar](max) NULL,
	[Risks] [nvarchar](max) NULL,
	[CostToBuild] [money] NULL,
	[TotalShares] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PortfolioShares]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PortfolioShares](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[OwnerUsername] [varchar](50) NOT NULL,
	[PortfolioProductId] [int] NOT NULL,
	[Shares] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PortfolioShareTransations]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PortfolioShareTransations](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[SellerUsername] [varchar](50) NOT NULL,
	[BuyerUsername] [varchar](50) NOT NULL,
	[PortfolioProductId] [int] NOT NULL,
	[Units] [int] NOT NULL,
	[DateSold] [datetime] NOT NULL,
	[SoldAmount] [money] NOT NULL,
	[SoldFee] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PromotionSites]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PromotionSites](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[WebsiteType] [int] NOT NULL,
	[WebsiteCategory] [int] NOT NULL,
	[CreatorUserId] [int] NOT NULL,
	[DateAdded] [datetime] NOT NULL,
	[IsTop] [bit] NOT NULL,
	[Title] [nvarchar](100) NOT NULL,
	[Description] [nvarchar](300) NULL,
	[ConstantImagePath] [varchar](max) NULL,
	[PremiumUntil] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PtcAdvertCategories]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PtcAdvertCategories](
	[PtcAdvertCategoryId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](30) NOT NULL,
	[IsActive] [bit] NOT NULL,
 CONSTRAINT [PK_AdvertsCategories] PRIMARY KEY CLUSTERED 
(
	[PtcAdvertCategoryId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PtcAdvertGeolocations]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PtcAdvertGeolocations](
	[PtcAdvertGeolocationId] [int] IDENTITY(1,1) NOT NULL,
	[AdvertId] [int] NOT NULL,
	[BannedCountry] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_AdvertGeolocations] PRIMARY KEY CLUSTERED 
(
	[PtcAdvertGeolocationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PtcAdvertPacks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PtcAdvertPacks](
	[PtcAdvertPackId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[IsVisibleByMembers] [bit] NOT NULL,
	[Price] [smallmoney] NOT NULL,
	[DisplayTimeSeconds] [int] NOT NULL,
 CONSTRAINT [PK_AdvertPacks] PRIMARY KEY CLUSTERED 
(
	[PtcAdvertPackId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[PtcAdverts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PtcAdverts](
	[PtcAdvertId] [int] IDENTITY(1,1) NOT NULL,
	[PtcCategoryId] [int] NOT NULL,
	[PtcAdvertPackId] [int] NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[Title] [nvarchar](100) NOT NULL,
	[Description] [nvarchar](200) NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatorUsername] [nvarchar](50) NULL,
	[CreatorEmail] [nvarchar](80) NULL,
	[CreationDate] [datetime] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[TotalSecsActive] [int] NOT NULL,
	[Clicks] [int] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[DisplayTimeSeconds] [int] NOT NULL,
	[ClickValue] [int] NOT NULL,
	[DirectReferralClickValue] [int] NOT NULL,
	[RentedReferralClickValue] [int] NOT NULL,
	[MinMembershipId] [int] NOT NULL,
	[IsGeolocated] [bit] NOT NULL,
	[Status] [int] NOT NULL,
	[StatusLastChangedDate] [datetime] NULL,
	[Price] [smallmoney] NULL,
	[HasBoldTitle] [bit] NOT NULL,
 CONSTRAINT [PK_AdvertClasses] PRIMARY KEY CLUSTERED 
(
	[PtcAdvertId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[RefbackDeclarations]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RefbackDeclarations](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[RefbackSiteId] [int] NOT NULL,
	[Username] [varchar](50) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RefbackSites]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RefbackSites](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[SiteName] [varchar](50) NOT NULL,
	[ReferralLink] [varchar](100) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UsersDeclatered] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ReferralPackages]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ReferralPackages](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PercentValue] [int] NOT NULL,
	[RefsInPackage] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[RentedReferrals]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RentedReferrals](
	[RefId] [int] IDENTITY(1,1) NOT NULL,
	[OwnerUsername] [varchar](50) NOT NULL,
	[FiredBy] [varchar](50) NOT NULL,
	[BotClass] [int] NOT NULL,
	[ReferralSince] [datetime] NOT NULL,
	[HasAutoPay] [bit] NOT NULL,
	[ExpireDate] [datetime] NOT NULL,
	[LastClick] [datetime] NULL,
	[TotalClicks] [int] NOT NULL,
	[ClicksStats] [text] NOT NULL,
	[PointsEarnedToReferer] [int] NOT NULL,
	[LastPointableActivity] [datetime] NULL,
 CONSTRAINT [PK_RentedReferrals] PRIMARY KEY CLUSTERED 
(
	[RefId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Reports]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Reports](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[DateDay] [datetime] NOT NULL,
	[Report1] [varchar](max) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ResetPasswordRequests]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ResetPasswordRequests](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[SecretCode] [varchar](500) NOT NULL,
	[ExpiresOn] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RevenueShareAdverts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RevenueShareAdverts](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Status] [int] NOT NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[ConstantImagePath] [varchar](max) NULL,
	[NormalImagePath] [nvarchar](max) NULL,
	[CreatorUserId] [int] NOT NULL,
	[Title] [nvarchar](100) NOT NULL,
	[Description] [nvarchar](200) NULL,
	[PTCAdTime] [int] NULL,
	[TotalClicks] [int] NOT NULL,
	[TotalNormalBannerImpressions] [int] NOT NULL,
	[TotalConstantBannerImpressions] [int] NOT NULL,
	[ClicksLeft] [int] NOT NULL,
	[NormalBannerImpressionsLeft] [int] NOT NULL,
	[ConstantBannerImpressionsLeft] [int] NOT NULL,
	[Packages] [int] NOT NULL,
	[MoneyReturned] [money] NOT NULL,
	[ClicksPurchased] [int] NOT NULL,
	[NormalBannerImpressionsPurchased] [int] NOT NULL,
	[ConstantBannerImpressionsPurchased] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SecurityRules]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SecurityRules](
	[SecurityRuleId] [int] IDENTITY(1,1) NOT NULL,
	[Type] [nvarchar](8) NOT NULL,
	[Value] [nvarchar](50) NOT NULL,
	[Date] [datetime] NOT NULL,
	[Comment] [nvarchar](140) NULL,
 CONSTRAINT [PK_SecurityRules] PRIMARY KEY CLUSTERED 
(
	[SecurityRuleId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[SharesOnMarket]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SharesOnMarket](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[PortfolioShareId] [int] NOT NULL,
	[PortfolioProductId] [int] NOT NULL,
	[SharesToSell] [int] NOT NULL,
	[Price] [money] NOT NULL,
	[DateStarted] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ShoutboxBannedUsernames]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ShoutboxBannedUsernames](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[BannedSince] [datetime] NULL,
	[BannedUntil] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ShoutboxBannedWords]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ShoutboxBannedWords](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[WordName] [nvarchar](max) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[ShoutboxMessages]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ShoutboxMessages](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[Message] [nvarchar](max) NOT NULL,
	[SentDate] [datetime] NULL,
	[IsDeleted] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Statistics]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Statistics](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Data1] [varchar](150) NOT NULL,
	[NumberOfDays] [int] NOT NULL,
	[Type] [int] NOT NULL,
	[Data2] [varchar](150) NULL,
 CONSTRAINT [PK_Statistics] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SupportTicketReplies]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SupportTicketReplies](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Body] [nvarchar](max) NOT NULL,
	[Date] [datetime] NOT NULL,
	[TicketId] [int] NULL,
	[IsMember] [bit] NOT NULL,
	[AdminName] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SupportTickets]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SupportTickets](
	[SupportTicketId] [int] IDENTITY(1,1) NOT NULL,
	[FromUsername] [nvarchar](50) NOT NULL,
	[Subject] [nvarchar](64) NULL,
	[Body] [nvarchar](max) NULL,
	[Date] [datetime] NOT NULL,
	[IsRead] [bit] NOT NULL,
	[IsReplied] [bit] NOT NULL,
	[IsSolved] [bit] NOT NULL,
	[BrowserAndSystem] [nvarchar](50) NULL,
	[ReplySubject] [nvarchar](64) NULL,
	[ReplyBody] [nvarchar](max) NULL,
	[ReplyDate] [datetime] NULL,
 CONSTRAINT [PK_SupportTickets] PRIMARY KEY CLUSTERED 
(
	[SupportTicketId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[TextFragments]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TextFragments](
	[TextFragmentId] [int] IDENTITY(1,1) NOT NULL,
	[RelatedTextId] [int] NOT NULL,
	[Ordinal] [int] NOT NULL,
	[TextContent] [nvarchar](max) NULL,
 CONSTRAINT [PK_TextFragments] PRIMARY KEY CLUSTERED 
(
	[TextFragmentId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[Texts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Texts](
	[TextId] [int] IDENTITY(1,1) NOT NULL,
	[TextType] [int] NOT NULL,
	[IsVisible] [bit] NOT NULL,
	[Title] [nvarchar](320) NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastModifiedDate] [datetime] NULL,
 CONSTRAINT [PK_WebsiteTexts] PRIMARY KEY CLUSTERED 
(
	[TextId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[TrafficExchangeAdvertPacks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrafficExchangeAdvertPacks](
	[TrafficExchangeAdvertPackId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[IsVisibleByMembers] [bit] NOT NULL,
	[Price] [smallmoney] NOT NULL,
	[DisplayTimeSeconds] [int] NOT NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[TrafficExchangeAdverts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TrafficExchangeAdverts](
	[TrafficExchangeAdvertId] [int] IDENTITY(1,1) NOT NULL,
	[TrafficExchangeAdvertPackId] [int] NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[Title] [nvarchar](100) NOT NULL,
	[Description] [nvarchar](200) NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatorUsername] [nvarchar](50) NULL,
	[CreatorEmail] [nvarchar](80) NULL,
	[CreationDate] [datetime] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[TotalSecsActive] [int] NOT NULL,
	[Clicks] [int] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[DisplayTimeSeconds] [int] NOT NULL,
	[ClickValue] [int] NOT NULL,
	[DirectReferralClickValue] [int] NOT NULL,
	[RentedReferralClickValue] [int] NOT NULL,
	[MinMembershipId] [int] NOT NULL,
	[Status] [int] NOT NULL,
	[StatusLastChangedDate] [datetime] NULL,
	[Price] [smallmoney] NULL,
	[HasBoldTitle] [bit] NOT NULL,
	[BannedCountries] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TrafficExchangeSubpages]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TrafficExchangeSubpages](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PtcAdId] [int] NOT NULL,
	[SubPage] [varchar](90) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TrafficGridAdvertPacks]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrafficGridAdvertPacks](
	[PtcAdvertPackId] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[IsVisibleByMembers] [bit] NOT NULL,
	[Price] [smallmoney] NOT NULL,
	[DisplayTimeSeconds] [int] NOT NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[TrafficGridAdverts]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrafficGridAdverts](
	[PtcAdvertId] [int] IDENTITY(1,1) NOT NULL,
	[PtcCategoryId] [int] NOT NULL,
	[PtcAdvertPackId] [int] NULL,
	[TargetUrl] [nvarchar](256) NOT NULL,
	[Title] [nvarchar](100) NOT NULL,
	[Description] [nvarchar](200) NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatorUsername] [nvarchar](50) NULL,
	[CreatorEmail] [nvarchar](80) NULL,
	[CreationDate] [datetime] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[TotalSecsActive] [int] NOT NULL,
	[Clicks] [int] NOT NULL,
	[EndValue] [int] NOT NULL,
	[EndMode] [int] NOT NULL,
	[DisplayTimeSeconds] [int] NOT NULL,
	[ClickValue] [int] NOT NULL,
	[DirectReferralClickValue] [int] NOT NULL,
	[RentedReferralClickValue] [int] NOT NULL,
	[MinMembershipId] [int] NOT NULL,
	[IsGeolocated] [bit] NOT NULL,
	[Status] [int] NOT NULL,
	[StatusLastChangedDate] [datetime] NULL,
	[Price] [smallmoney] NULL,
	[HasBoldTitle] [bit] NOT NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[TrafficGridLatestWinners]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TrafficGridLatestWinners](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Date] [datetime] NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[What] [varchar](70) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TrafficGridTopWinners]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TrafficGridTopWinners](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Date] [datetime] NOT NULL,
	[Username] [varchar](50) NOT NULL,
	[What] [varchar](70) NOT NULL,
	[Value] [smallmoney] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Users]    Script Date: 06.02.2016 16:30:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Users](
	[UserId] [int] IDENTITY(1000,1) NOT FOR REPLICATION NOT NULL,
	[Username] [nvarchar](50) NOT NULL,
	[Password1] [nvarchar](128) NOT NULL,
	[Password2] [nvarchar](128) NULL,
	[PIN] [int] NOT NULL,
	[AccountStatus] [varchar](20) NULL,
	[IsLocked] [bit] NOT NULL,
	[FailedPasswordAttemptCount] [int] NOT NULL,
	[FailedPasswordAttemptWindow] [datetime] NULL,
	[FailedPINAttemptCount] [int] NOT NULL,
	[Email] [nvarchar](60) NOT NULL,
	[Balance1] [smallmoney] NOT NULL,
	[Balance2] [smallmoney] NOT NULL,
	[Balance3] [smallmoney] NOT NULL,
	[Balance4] [int] NOT NULL,
	[Country] [nvarchar](35) NOT NULL,
	[Code] [nvarchar](2) NOT NULL,
	[BirthYear] [datetime] NOT NULL,
	[IsMale] [bit] NULL,
	[RegisterDate] [datetime] NOT NULL,
	[LastActivityDate] [datetime] NULL,
	[LastLoginDate] [datetime] NULL,
	[UpgradeId] [int] NOT NULL,
	[UpgradeName] [nvarchar](20) NULL,
	[UpgradeExpires] [datetime] NULL,
	[UpgradeWhen] [datetime] NULL,
	[ViewedAds] [text] NOT NULL,
	[DetailedBanReason] [varchar](80) NULL,
	[MessageSystemTurnedOn] [bit] NOT NULL,
	[AvatarUrl] [nvarchar](200) NOT NULL,
	[CameFromUrl] [varchar](150) NULL,
	[TotalClicks] [int] NOT NULL,
	[TotalEarned] [smallmoney] NOT NULL,
	[StatsClicks] [text] NOT NULL,
	[StatsEarned] [text] NOT NULL,
	[Referer] [varchar](50) NULL,
	[IsSpotted] [bit] NOT NULL,
	[IsRented] [bit] NOT NULL,
	[LastRentDate] [datetime] NULL,
	[Achievements] [text] NOT NULL,
	[UnspottedAchievements] [int] NOT NULL,
	[CashoutsProceed] [int] NOT NULL,
	[PayPalEmail] [varchar](50) NULL,
	[PayzaEmail] [varchar](50) NULL,
	[IsForumModerator] [bit] NOT NULL,
	[LikedAds] [text] NOT NULL,
	[UserClicksStats] [text] NOT NULL,
	[UserInfo] [text] NULL,
	[LastUsedIP] [varchar](20) NULL,
	[RegisteredWithIP] [varchar](20) NULL,
	[TrafficGridHitsToday] [int] NOT NULL,
	[TrafficGridTotalWons] [int] NOT NULL,
	[LastActivityDate2] [datetime] NULL,
	[DirectReferralLimitEnlargedBy] [int] NOT NULL,
	[PhoneCountryCode] [varchar](5) NULL,
	[PhoneNumber] [varchar](15) NULL,
	[IsRegisterIPVerified] [bit] NOT NULL,
	[UnconfirmedSMSSent] [int] NOT NULL,
	[IsPhoneVerifiedBeforeCashout] [bit] NOT NULL,
	[IsPhoneVerified] [bit] NOT NULL,
	[FacebookName] [varchar](100) NULL,
	[MoneyTransferred] [smallmoney] NOT NULL,
	[MoneyCashout] [smallmoney] NOT NULL,
	[PointsToday] [int] NOT NULL,
	[TotalCPACompleted] [int] NOT NULL,
	[FirstName] [varchar](20) NULL,
	[SecondName] [varchar](40) NULL,
	[Address] [varchar](80) NULL,
	[City] [varchar](20) NULL,
	[StateProvince] [varchar](30) NULL,
	[ZipCode] [varchar](10) NULL,
	[CompletedDailyCPAOffersToday] [varchar](1000) NULL,
	[PhoneCountryCodeE] [varchar](10) NULL,
	[PhoneNumberE] [varchar](50) NULL,
	[PointsEarnedToReferer] [int] NOT NULL,
	[LastPointableActivity] [datetime] NULL,
	[PerfectMoneyAccountNo] [varchar](20) NOT NULL,
	[BypassSecurityCheck] [int] NOT NULL,
	[CustomFields] [nvarchar](max) NULL,
	[AdminNotes] [nvarchar](max) NULL,
	[MasterPassword] [varchar](max) NULL,
	[MasterPasswordValidUntil] [datetime] NULL,
	[TransferFundsPermission] [int] NOT NULL,
	[ShoutboxPermission] [int] NOT NULL,
	[CPACompletedBehavior] [int] NOT NULL,
	[LastActivityTime] [datetime] NULL,
	[FacebookOAuthId] [varchar](20) NULL,
	[CPACompletedToday] [int] NOT NULL,
	[Temp] [varchar](100) NULL,
	[VacationModeEnds] [datetime] NULL,
	[CaptchaType] [int] NOT NULL,
	[RSAAdsViewed] [varchar](max) NOT NULL,
	[TotalPointsGenerated] [int] NOT NULL,
	[TotalPointsExchanged] [int] NOT NULL,
	[CompletedOffersFromOfferwallsToday] [int] NOT NULL,
	[CompletedOffersMoreThan100pFromOfferwallsToday] [int] NOT NULL,
	[CompletedDailyOffersFromOfferwallsToday] [int] NOT NULL,
	[TotalSearchesDone] [int] NOT NULL,
	[TotalVideosWatched] [int] NOT NULL,
	[RawDirectReferralsClicks] [varchar](max) NOT NULL,
	[RawRentedReferralsClicks] [varchar](max) NOT NULL,
	[NetellerEmail] [varchar](50) NULL,
 CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
SET IDENTITY_INSERT [dbo].[Achievements] ON 

INSERT [dbo].[Achievements] ([Id], [Type], [Quantity], [Name], [ImageId], [Points], [AchievementStatus]) VALUES (3, 1, 20, N'Captain Clicker', 7, 5, 1)
SET IDENTITY_INSERT [dbo].[Achievements] OFF
INSERT [dbo].[ApplicationSettings] ([ApplicationSettingsId], [SiteName], [SiteUrl], [AdminName], [NoReplyEmail], [ForwardEmail], [TransactionNote], [IsInstantPayout], [CashoutLimit1], [CashoutLimit2], [CashoutLimit3], [CashoutLimitRest], [IsFacebookAuth], [FacebookAppId], [PointsBalanceName], [SiteSlogan], [DirectRefsUsernamesEncrypted], [DirectRefsDeleting], [RentedRefsDeleting], [RentedRefsRecycling], [RentedRefsMinPackage], [RentedRefsPackagesCount], [RentedRefsPackageMultipler], [RentedRefsRentalTimeDays], [RentedRefsMinLastDaysClickingActivity], [RentedRefsMinDaysToAutoPay], [DefaultAvatarUrl], [RefferalsRentingOption], [MinTotalClicksToRentRefs], [MinDailyClicksToEarnFromRefs], [BotRefsInactiveBotPercentage], [BotRefsBotQualityIndex], [AdvertRejectionMessage], [AdvertStartMessage], [AccountActivationMessage], [ResetPasswordMessage], [PtcAdvertDescriptionCost], [PtcAdvertFontBoldCost], [PtcAdvertGeolocationCost], [BannerAdvertConstantBannerEnabled], [BannerAdvertConstantBannerWidth], [BannerAdvertConstantBannerHeight], [MembershipTenPointsValue], [MembershipUpgradePointsDiscount], [FbPointsPerLike], [FbFriendsRestrictionsCost], [FbProfilePicRestrictionsCost], [IsInstantlyActivated], [EmailHost], [EmailUsername], [EmailPassword], [EmailPort], [LastCRONRun], [DaysToInactivity], [PlannedCronRun], [SSLType], [FreeField1], [FreeField2], [CrowdFlower1], [CrowdFlower2], [BannerLoc1], [BannerLoc2], [Games1], [Games2], [TrafficGridLimit], [TrafficGridPrize1], [TrafficGridPrize2], [TrafficGridPrize3], [TrafficGridPrize4], [TrafficGridPrize5], [TrafficGridPrize6], [TrafficGridDailyMoneyLeft], [TrafficGridImage1], [TrafficGridImage2], [TrafficGridImage3], [TrafficGridImage4], [ProxStopApiKey], [BlockScriptApiKey], [BlockScriptURL], [IPPolicy], [ProxySMSType], [IsTransferPointsToMainBalanceEnabled], [ExposureCategoriesEnabled], [ExposureRefEarningsEnabled], [AreContestsEnabled], [AreCPAOffersEnabled], [AreBannerImpressionsEnabled], [BannerGeolocationCost], [DetailedRegisterFields], [TrafficExchangeMod], [GlobalCashoutLimitPerDay], [GlobalCashoutsToday], [MemberMaxCashoutLimit], [MoneyTakenFromCPAOffersPercent], [SiteDescription1], [IsEUCookieEnabled1], [MinCPAPrice1], [AdExposureProfitsEnabled], [CurrencySign], [CurrencyCode], [IsCurrencySignBefore], [PureGPTMode], [UniversalHandlerPassword], [IsSecureMail], [MinimumTransferAmount], [ReferralEarningsUpToTier], [ReferralEarningsFromTier2], [ReferralEarningsFromTier3], [ReferralEarningsFromTier4], [ReferralEarningsFromTier5], [ReferralEarningsFromTier6], [ReferralEarningsFromTier7], [ReferralEarningsFromTier8], [ReferralEarningsFromTier9], [ReferralEarningsFromTier10], [EnableRefCommissionFromUpgrades], [ShoutboxDisplayMode], [ShoutboxDisplayContent], [TransferFundsMode], [ShoutboxIconsEnabled], [TransferSlidebarEnabled], [WebsiteMode], [CustomFieldsAsSurvey], [ProfilingSurveyReward], [CaptchaType], [ReCAPTCHASiteKey], [ReCAPTCHASecretKey], [SolveMediaVKey], [SolveMediaCKey], [LoginUsingEmail], [EnableSecondaryPassword], [AllowMembersToChooseCaptcha], [IsVacationModeEnabled], [VacationModeCostPerDay], [DaysToInactivityCharge], [InactivityChargePerDay], [NormalBannerWidth], [NormalBannerHeight], [BannerAdvertisingPolicy], [BidAmount], [StartingAmount], [StartingAmountConstant], [LostBidReturnPercent], [InstantPayoutMinOffersCompleted], [InstantPayoutMinRegisteredDays], [InstantPayoutMinCashoutsNumber], [PorftolioSharesPolicy], [SharesMarketSaleCommission], [GiftCardMode], [GiftCodeEmailDraft], [CreditVideoPolicy], [YahooSearchAPI], [VideoMode], [SearchMode], [CurrencyPointsName], [TotalPointsExchangedForGiftCards], [TotalPointsGenerated], [SearchTimerMinutes], [MaxPointsDailyForSearch], [ShowDetailedBanInformation], [ResetPasswordIndirectLinkEnabled], [ResetPasswordLink], [ConvertCrowdflowerToMainBalance], [ShoutboxShowCountry], [EnableKeyboard], [BidAmountConstant], [LockDays], [LockPoints], [IsLock], [FamobiGameUserId]) VALUES (1, N'TITAN', N'http://dd.usetitan.com/', N'Admin', N'changeme', N'changeme', N'Thank you for your purchase.', 1, 2.0000, 5.0000, 9.0000, 15.0000, 0, N'123451234512345', N'Points', N'All-in-one script for earning money online.', 0, 0, 1, 1, 2, 10, 2, 30, 2, 20, N'~/Images/Misc/defaultavatar.png', 3, 10, 2, 30, 20, N'Dear customer!

Your advertisement campaign (%TargetURL%) has been rejected with the following reason: %Reason%

Regards, %Sitename% team', N'Dear customer!

Your advertisement campaign (%TargetURL%) has been approved and started. 

Thank you for choosing us.

Regards, %Sitename% team', N'Dear %Username%,

Please click on the following link to finish your registration process:
%ActivationLink%

Ignore this message if you don''t know why you received it.

Regards, %Sitename% team', N'Dear %Username%,

Your new password: %NewPassword%
For security reasons please set your custom password immediately after logging in.

If you did not requested this reset, contact us immediately.

Regards, %Sitename% team', 2.0000, 1.0000, 2.0000, 1, 125, 125, 0.0500, 10, 30, 2.0000, 2.0000, 0, N'changeme', N'changeme', N'changeme', 25, CAST(N'2013-07-09T18:50:02.820' AS DateTime), 100, CAST(N'2000-01-01T23:50:00.000' AS DateTime), 1, N'free', N'none', NULL, NULL, N'Images/banner1.png', N'Images/banner2.png', NULL, 1, 2.0000, 5, 10, 5, 40, 10, 30, 2.0000, N'Images/TrafficGrid/1.png', N'Images/TrafficGrid/2.png', N'Images/TrafficGrid/3.png', N'Images/TrafficGrid/4.png', NULL, NULL, NULL, 1, 1, 0, 0, 0, 0, 0, 1, 2.0000, 0, 0, 100.0000, 0.0000, 50.0000, 10, NULL, 0, 0.1000, 1, N'$', N'USD', 1, 0, N'NOTSET', 0, 5.0000, 1, 20, 10, 5, 5, 5, 5, 5, 5, 5, 0, 1, 2, 4, 1, 1, 0, 0, 0, 2, NULL, NULL, NULL, NULL, 0, 0, 0, 1, 0.0100, 150, 0.0000, 728, 80, 0, 0.3000, 1.0000, 0.2500, 101, 0, 0, 0, 0, 1, 1, N'Dear %Username%,

Your Redemption Code is: <b>%CodeSent%</b>

Input this code into %GiftCard% to claim your %GiftCode%. Thank you.

Regards, %Sitename% team', 0, NULL, 0, 0, N'Points', 0, 0, 60, 100, 1, 0, N'Dear %Username%

We received a password request for your account. To reset your password, please follow this link: %PasswordResetLink%

If you did not authorize this request and you do not know why you received this email, please contact us immediately.

Regards, %Sitename% team', 0, 1, 0, 0.2500, 30, 100, 0, NULL)
SET IDENTITY_INSERT [dbo].[BannerAdvertPacks] ON 

INSERT [dbo].[BannerAdvertPacks] ([BannerAdvertPackId], [Name], [IsVisibleByMembers], [EndValue], [EndMode], [Price]) VALUES (9, N'[Obsolete]', 1, 100, 2, 5.0000)
INSERT [dbo].[BannerAdvertPacks] ([BannerAdvertPackId], [Name], [IsVisibleByMembers], [EndValue], [EndMode], [Price]) VALUES (10, N'[Obsolete]', 1, 500, 3, 5.0000)
SET IDENTITY_INSERT [dbo].[BannerAdvertPacks] OFF
SET IDENTITY_INSERT [dbo].[CPACategories] ON 

INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (1, N'Daily surveys')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (2, N'CPC')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (3, N'Videos')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (4, N'Email submit')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (5, N'1st page submit')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (6, N'2nd page submit')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (7, N'Registration')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (8, N'Download')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (9, N'PIN submit')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (10, N'PPD')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (11, N'Trial')
INSERT [dbo].[CPACategories] ([Id], [CategoryName]) VALUES (12, N'Other')
SET IDENTITY_INSERT [dbo].[CPACategories] OFF
SET IDENTITY_INSERT [dbo].[FacebookAdvertPacks] ON 

INSERT [dbo].[FacebookAdvertPacks] ([FbAdvertPackId], [Name], [IsVisibleByMembers], [EndValue], [EndMode], [Price]) VALUES (9, N'[Obsolete]', 1, 100, 3, 3.0000)
INSERT [dbo].[FacebookAdvertPacks] ([FbAdvertPackId], [Name], [IsVisibleByMembers], [EndValue], [EndMode], [Price]) VALUES (10, N'[Obsolete]', 1, 500, 3, 6.0000)
SET IDENTITY_INSERT [dbo].[FacebookAdvertPacks] OFF
SET IDENTITY_INSERT [dbo].[GeolocatedFeatures] ON 

INSERT [dbo].[GeolocatedFeatures] ([Id], [CC], [FeatureId], [Points]) VALUES (1, N'**', 0, 0)
INSERT [dbo].[GeolocatedFeatures] ([Id], [CC], [FeatureId], [Points]) VALUES (2, N'**', 1, 0)
INSERT [dbo].[GeolocatedFeatures] ([Id], [CC], [FeatureId], [Points]) VALUES (3, N'**', 2, 0)
INSERT [dbo].[GeolocatedFeatures] ([Id], [CC], [FeatureId], [Points]) VALUES (4, N'**', 3, 0)
SET IDENTITY_INSERT [dbo].[GeolocatedFeatures] OFF
SET IDENTITY_INSERT [dbo].[History] ON 

INSERT [dbo].[History] ([Id], [AssignedUsername], [Type], [Date], [IsRead], [Text]) VALUES (2, N'admin', 1, CAST(N'2013-03-13T12:27:05.333' AS DateTime), 0, N'admin!')
SET IDENTITY_INSERT [dbo].[History] OFF
SET IDENTITY_INSERT [dbo].[MembershipPacks] ON 

INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (55, 10, 30, 9.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (56, 11, 30, 49.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (57, 12, 30, 89.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (59, 10, 90, 26.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (60, 11, 90, 145.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (61, 12, 90, 265.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (63, 10, 180, 49.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (64, 11, 180, 279.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (65, 12, 180, 789.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (67, 10, 360, 79.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (68, 11, 360, 449.0000, 0)
INSERT [dbo].[MembershipPacks] ([MembershipPackId], [MembershipId], [TimeDays], [Price], [CopiesBought]) VALUES (69, 12, 360, 869.0000, 0)
SET IDENTITY_INSERT [dbo].[MembershipPacks] OFF
SET IDENTITY_INSERT [dbo].[Memberships] ON 

INSERT [dbo].[Memberships] ([MembershipId], [Name], [Status], [DisplayOrder], [AdvertClickEarnings], [DirectReferralAdvertClickEarnings], [RentedReferralAdvertClickEarnings], [DirectReferralsLimit], [RentedReferralsLimit], [ReferralRentCost], [RenewalDiscount], [AdvertPointsEarnings], [Color], [RentedReferralRecycleCost], [CanAutoPay], [DailyAutoPayCost], [MinRentingIntervalSecs], [TrafficGridTrials], [TrafficGridChances], [TrafficGridShorterAd], [OfferwallsProfitPercent], [CashoutLimit], [CashoutLimitIcreased], [CPAProfitPercent], [RefPercentEarningsOfferwalls1], [MaxRefPackageCount], [RefPercentEarningsCPA], [HasInstantPayout]) VALUES (1, N'Standard', 1, 1, 0.0100, 0.0050, 0.0050, 10, 25, 0.2900, 0, 0, N'#000000', 0.0900, 0, 0.0000, 864000, 20, 3, 100, 100, 2.0000, 2.0000, 100, 10, 50, 0, 1)
INSERT [dbo].[Memberships] ([MembershipId], [Name], [Status], [DisplayOrder], [AdvertClickEarnings], [DirectReferralAdvertClickEarnings], [RentedReferralAdvertClickEarnings], [DirectReferralsLimit], [RentedReferralsLimit], [ReferralRentCost], [RenewalDiscount], [AdvertPointsEarnings], [Color], [RentedReferralRecycleCost], [CanAutoPay], [DailyAutoPayCost], [MinRentingIntervalSecs], [TrafficGridTrials], [TrafficGridChances], [TrafficGridShorterAd], [OfferwallsProfitPercent], [CashoutLimit], [CashoutLimitIcreased], [CPAProfitPercent], [RefPercentEarningsOfferwalls1], [MaxRefPackageCount], [RefPercentEarningsCPA], [HasInstantPayout]) VALUES (10, N'Bronze', 1, 4, 0.0100, 0.0050, 0.0050, 50, 300, 0.2900, 5, 0, N'#643EBF', 0.0800, 0, 0.0000, 604800, 20, 3, 100, 100, 2.0000, 2.0000, 100, 10, 50, 0, 1)
INSERT [dbo].[Memberships] ([MembershipId], [Name], [Status], [DisplayOrder], [AdvertClickEarnings], [DirectReferralAdvertClickEarnings], [RentedReferralAdvertClickEarnings], [DirectReferralsLimit], [RentedReferralsLimit], [ReferralRentCost], [RenewalDiscount], [AdvertPointsEarnings], [Color], [RentedReferralRecycleCost], [CanAutoPay], [DailyAutoPayCost], [MinRentingIntervalSecs], [TrafficGridTrials], [TrafficGridChances], [TrafficGridShorterAd], [OfferwallsProfitPercent], [CashoutLimit], [CashoutLimitIcreased], [CPAProfitPercent], [RefPercentEarningsOfferwalls1], [MaxRefPackageCount], [RefPercentEarningsCPA], [HasInstantPayout]) VALUES (11, N'Silver', 1, 6, 0.0120, 0.0080, 0.0080, 150, 1500, 0.0280, 10, 0, N'#2E8DEF', 0.0700, 1, 0.0100, 518400, 20, 3, 100, 100, 2.0000, 2.0000, 100, 10, 50, 0, 1)
INSERT [dbo].[Memberships] ([MembershipId], [Name], [Status], [DisplayOrder], [AdvertClickEarnings], [DirectReferralAdvertClickEarnings], [RentedReferralAdvertClickEarnings], [DirectReferralsLimit], [RentedReferralsLimit], [ReferralRentCost], [RenewalDiscount], [AdvertPointsEarnings], [Color], [RentedReferralRecycleCost], [CanAutoPay], [DailyAutoPayCost], [MinRentingIntervalSecs], [TrafficGridTrials], [TrafficGridChances], [TrafficGridShorterAd], [OfferwallsProfitPercent], [CashoutLimit], [CashoutLimitIcreased], [CPAProfitPercent], [RefPercentEarningsOfferwalls1], [MaxRefPackageCount], [RefPercentEarningsCPA], [HasInstantPayout]) VALUES (12, N'Gold', 1, 7, 0.0150, 0.0100, 0.0100, 400, 2500, 0.2700, 15, 0, N'#DC572E', 0.0500, 1, 0.0090, 345600, 20, 3, 100, 100, 2.0000, 2.0000, 100, 10, 50, 0, 1)
SET IDENTITY_INSERT [dbo].[Memberships] OFF
SET IDENTITY_INSERT [dbo].[PtcAdvertCategories] ON 

INSERT [dbo].[PtcAdvertCategories] ([PtcAdvertCategoryId], [Name], [IsActive]) VALUES (1, N'Business', 1)
INSERT [dbo].[PtcAdvertCategories] ([PtcAdvertCategoryId], [Name], [IsActive]) VALUES (2, N'Animals', 1)
INSERT [dbo].[PtcAdvertCategories] ([PtcAdvertCategoryId], [Name], [IsActive]) VALUES (3, N'PTC', 0)
SET IDENTITY_INSERT [dbo].[PtcAdvertCategories] OFF

SET IDENTITY_INSERT [dbo].[SecurityRules] ON 

INSERT [dbo].[SecurityRules] ([SecurityRuleId], [Type], [Value], [Date], [Comment]) VALUES (26, N'Username', N'administrator', CAST(N'2013-06-01T10:34:22.593' AS DateTime), N'not be confused with the admin')
INSERT [dbo].[SecurityRules] ([SecurityRuleId], [Type], [Value], [Date], [Comment]) VALUES (27, N'Username', N'Guest', CAST(N'2015-11-11T00:00:00.000' AS DateTime), N'Forum Guest account')
SET IDENTITY_INSERT [dbo].[SecurityRules] OFF
SET IDENTITY_INSERT [dbo].[Statistics] ON 

INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (1, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 1, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (2, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 2, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (3, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 3, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (4, N'0#1#0#0#0#0#0#0#0#0#0#0#0#0', 14, 4, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0')
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (5, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 6, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (6, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 10, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (7, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 9, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (8, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', 14, 13, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (9, N'0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000', 14, 11, N'0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000')
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (21, N'0#0#0#0#0#0#0', 7, 24, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (22, N'0#0#0#0#0#0#0', 7, 25, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (23, N'0#0#0#0#0#0#0', 7, 26, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (24, N'0#0#0#0#0#0#0', 7, 27, NULL)
INSERT [dbo].[Statistics] ([Id], [Data1], [NumberOfDays], [Type], [Data2]) VALUES (25, N'0#0#0#0#0#0#0', 7, 28, NULL)
SET IDENTITY_INSERT [dbo].[Statistics] OFF
SET IDENTITY_INSERT [dbo].[TextFragments] ON 

INSERT [dbo].[TextFragments] ([TextFragmentId], [RelatedTextId], [Ordinal], [TextContent]) VALUES (16, 21, 1, N'<div>We will have more soon</div><div><br></div>This FAQ can be edited via <u>admin.usetitan.com</u> panel')
INSERT [dbo].[TextFragments] ([TextFragmentId], [RelatedTextId], [Ordinal], [TextContent]) VALUES (17, 22, 1, N'<div>We will have more soon</div><div><br></div>This TOS can be edited via <u>admin.usetitan.com</u> panel<br>')
INSERT [dbo].[TextFragments] ([TextFragmentId], [RelatedTextId], [Ordinal], [TextContent]) VALUES (18, 23, 1, N'<div>We will have more soon</div><div><br></div>This Privacy Policy can be edited via <u>admin.usetitan.com</u> panel<br>')
INSERT [dbo].[TextFragments] ([TextFragmentId], [RelatedTextId], [Ordinal], [TextContent]) VALUES (19, 24, 1, N'Hello<br><div><b><br></b></div><div>This is my <font color="#660066">first </font>news, which can be edited via <i><u>admin.usetitan.com</u> </i>panel</div>')
SET IDENTITY_INSERT [dbo].[TextFragments] OFF
SET IDENTITY_INSERT [dbo].[Texts] ON 

INSERT [dbo].[Texts] ([TextId], [TextType], [IsVisible], [Title], [CreatedDate], [LastModifiedDate]) VALUES (21, 2, 0, NULL, CAST(N'2013-05-18T00:31:38.393' AS DateTime), CAST(N'2013-06-01T10:09:56.037' AS DateTime))
INSERT [dbo].[Texts] ([TextId], [TextType], [IsVisible], [Title], [CreatedDate], [LastModifiedDate]) VALUES (22, 3, 0, NULL, CAST(N'2013-05-18T00:31:46.320' AS DateTime), CAST(N'2013-06-01T10:10:06.827' AS DateTime))
INSERT [dbo].[Texts] ([TextId], [TextType], [IsVisible], [Title], [CreatedDate], [LastModifiedDate]) VALUES (23, 4, 0, NULL, CAST(N'2013-05-18T00:31:52.803' AS DateTime), CAST(N'2013-06-01T10:10:17.653' AS DateTime))
INSERT [dbo].[Texts] ([TextId], [TextType], [IsVisible], [Title], [CreatedDate], [LastModifiedDate]) VALUES (24, 1, 1, N'Welcome', CAST(N'2013-05-29T14:46:21.193' AS DateTime), CAST(N'2013-06-01T10:09:13.293' AS DateTime))
SET IDENTITY_INSERT [dbo].[Texts] OFF

SET IDENTITY_INSERT [dbo].[Users] ON 

INSERT [dbo].[Users] ([UserId], [Username], [Password1], [Password2], [PIN], [AccountStatus], [IsLocked], [FailedPasswordAttemptCount], [FailedPasswordAttemptWindow], [FailedPINAttemptCount], [Email], [Balance1], [Balance2], [Balance3], [Balance4], [Country], [Code], [BirthYear], [IsMale], [RegisterDate], [LastActivityDate], [LastLoginDate], [UpgradeId], [UpgradeName], [UpgradeExpires], [UpgradeWhen], [ViewedAds], [DetailedBanReason], [MessageSystemTurnedOn], [AvatarUrl], [CameFromUrl], [TotalClicks], [TotalEarned], [StatsClicks], [StatsEarned], [Referer], [IsSpotted], [IsRented], [LastRentDate], [Achievements], [UnspottedAchievements], [CashoutsProceed], [PayPalEmail], [PayzaEmail], [IsForumModerator], [LikedAds], [UserClicksStats], [UserInfo], [LastUsedIP], [RegisteredWithIP], [TrafficGridHitsToday], [TrafficGridTotalWons], [LastActivityDate2], [DirectReferralLimitEnlargedBy], [PhoneCountryCode], [PhoneNumber], [IsRegisterIPVerified], [UnconfirmedSMSSent], [IsPhoneVerifiedBeforeCashout], [IsPhoneVerified], [FacebookName], [MoneyTransferred], [MoneyCashout], [PointsToday], [TotalCPACompleted], [FirstName], [SecondName], [Address], [City], [StateProvince], [ZipCode], [CompletedDailyCPAOffersToday], [PhoneCountryCodeE], [PhoneNumberE], [PointsEarnedToReferer], [LastPointableActivity], [PerfectMoneyAccountNo], [BypassSecurityCheck], [CustomFields], [AdminNotes], [MasterPassword], [MasterPasswordValidUntil], [TransferFundsPermission], [ShoutboxPermission], [CPACompletedBehavior], [LastActivityTime], [FacebookOAuthId], [CPACompletedToday], [Temp], [VacationModeEnds], [CaptchaType], [RSAAdsViewed], [TotalPointsGenerated], [TotalPointsExchanged], [CompletedOffersFromOfferwallsToday], [CompletedOffersMoreThan100pFromOfferwallsToday], [CompletedDailyOffersFromOfferwallsToday], [TotalSearchesDone], [TotalVideosWatched], [RawDirectReferralsClicks], [RawRentedReferralsClicks], [NetellerEmail]) VALUES (1005, N'admin', N'ymOar4r7wJS1jt7zHgNuT5yWFNxyh0nlbJuecwbIOxXe9JRGO4iVJSaJxpWTFVhqVCdX06M+XLpSZjKfxTmNDQ==', NULL, 1234, N'Active', 0, 0, NULL, 0, N'noemail@none.com', 0.0000, 0.0000, 0.0000, 0, N'Poland', N'PL', CAST(N'1992-01-01T00:00:00.000' AS DateTime), 1, CAST(N'2011-11-11T00:00:00.000' AS DateTime), CAST(N'2013-05-29T05:07:17.310' AS DateTime), CAST(N'2013-06-01T02:42:57.887' AS DateTime), 1, N'Standard', NULL, NULL, N'-1', NULL, 1, N'~/Images/Misc/defaultavatar.png', NULL, 0, 0.0000, N'0#0#0#0#0#0#0#0#0#0#0#0#0#0', N'0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000', NULL, 0, 0, NULL, N'-1', 0, 0, N'noemail@none.com', N'noemail@none.com', 0, N'-1', N'0#0#0#0#0#0#0#0#0#0', N'Firefox21.0640x480WinNT0.00.00.01.0', N'1', N'1', 0, 0, NULL, 0, NULL, NULL, 0, 0, 0, 0, NULL, 0.0000, 0.0000, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, N'-1', NULL, NULL, 0, NULL, N'U??????', 1, NULL, NULL, NULL, NULL, 1, 1, 1, NULL, NULL, 0, NULL, NULL, 0, N'-1', 0, 0, 0, 0, 0, 0, 0, N'0#0#0#0#0#0#0#0#0#0', N'0#0#0#0#0#0#0#0#0#0', NULL)
SET IDENTITY_INSERT [dbo].[Users] OFF
SET ANSI_PADDING ON

GO
/****** Object:  Index [UQ__Users__536C85E496D457C0]    Script Date: 06.02.2016 16:31:00 ******/
ALTER TABLE [dbo].[Users] ADD UNIQUE NONCLUSTERED 
(
	[Username] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [dbo].[Achievements] ADD  CONSTRAINT [DF_Achievements_ImageId]  DEFAULT ((1)) FOR [ImageId]
GO
ALTER TABLE [dbo].[Achievements] ADD  DEFAULT ((1)) FOR [AchievementStatus]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_SiteName]  DEFAULT ('TITAN') FOR [SiteName]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_IsFacebookAuth]  DEFAULT ((0)) FOR [IsFacebookAuth]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_PointCurrencyName]  DEFAULT ('TITAN point(s)') FOR [PointsBalanceName]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_SiteDescription]  DEFAULT ('Fresh & solid PTC/GPT script') FOR [SiteSlogan]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_DefaultAvatarUrl]  DEFAULT ('~/Images/Misc/defaultavatar.png') FOR [DefaultAvatarUrl]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_IsInstantlyActivated]  DEFAULT ('false') FOR [IsInstantlyActivated]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_EmailHost]  DEFAULT ('none') FOR [EmailHost]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_EmailUsername]  DEFAULT ('none') FOR [EmailUsername]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_EmailPassword]  DEFAULT ('none') FOR [EmailPassword]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_EmailPort]  DEFAULT ((25)) FOR [EmailPort]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_LastCRONRun]  DEFAULT ('11-11-1997') FOR [LastCRONRun]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_DaysToInactivity]  DEFAULT ((60)) FOR [DaysToInactivity]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_PlannedCronRun]  DEFAULT ('11-11-1997 23:50') FOR [PlannedCronRun]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_SSLType]  DEFAULT ((1)) FOR [SSLType]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_FreeField1]  DEFAULT ('free') FOR [FreeField1]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  CONSTRAINT [DF_ApplicationSettings_FreeField2]  DEFAULT ('none') FOR [FreeField2]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Images/banner1.png') FOR [BannerLoc1]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Images/banner2.png') FOR [BannerLoc2]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [Games2]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((2)) FOR [TrafficGridLimit]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [TrafficGridPrize1]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((10)) FOR [TrafficGridPrize2]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [TrafficGridPrize3]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((40)) FOR [TrafficGridPrize4]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((10)) FOR [TrafficGridPrize5]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((30)) FOR [TrafficGridPrize6]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((2)) FOR [TrafficGridDailyMoneyLeft]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Images/TrafficGrid/1.png') FOR [TrafficGridImage1]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Images/TrafficGrid/2.png') FOR [TrafficGridImage2]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Images/TrafficGrid/3.png') FOR [TrafficGridImage3]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Images/TrafficGrid/4.png') FOR [TrafficGridImage4]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [IPPolicy]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [ProxySMSType]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [IsTransferPointsToMainBalanceEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [ExposureCategoriesEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [ExposureRefEarningsEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [AreContestsEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [AreCPAOffersEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [AreBannerImpressionsEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((2)) FOR [BannerGeolocationCost]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [DetailedRegisterFields]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [TrafficExchangeMod]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((100)) FOR [GlobalCashoutLimitPerDay]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [GlobalCashoutsToday]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((50)) FOR [MemberMaxCashoutLimit]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((10)) FOR [MoneyTakenFromCPAOffersPercent]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [IsEUCookieEnabled1]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0.1)) FOR [MinCPAPrice1]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [AdExposureProfitsEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('$') FOR [CurrencySign]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('USD') FOR [CurrencyCode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [IsCurrencySignBefore]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [PureGPTMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('NOTSET') FOR [UniversalHandlerPassword]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [IsSecureMail]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [MinimumTransferAmount]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [ReferralEarningsUpToTier]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((20)) FOR [ReferralEarningsFromTier2]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((10)) FOR [ReferralEarningsFromTier3]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier4]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier5]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier6]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier7]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier8]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier9]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((5)) FOR [ReferralEarningsFromTier10]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [EnableRefCommissionFromUpgrades]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [ShoutboxDisplayMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((2)) FOR [ShoutboxDisplayContent]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((4)) FOR [TransferFundsMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [ShoutboxIconsEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [TransferSlidebarEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [WebsiteMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [CustomFieldsAsSurvey]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [ProfilingSurveyReward]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((2)) FOR [CaptchaType]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [LoginUsingEmail]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [EnableSecondaryPassword]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [AllowMembersToChooseCaptcha]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [IsVacationModeEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0.01)) FOR [VacationModeCostPerDay]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((150)) FOR [DaysToInactivityCharge]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [InactivityChargePerDay]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((468)) FOR [NormalBannerWidth]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((60)) FOR [NormalBannerHeight]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [BannerAdvertisingPolicy]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0.3)) FOR [BidAmount]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [StartingAmount]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0.25)) FOR [StartingAmountConstant]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((101)) FOR [LostBidReturnPercent]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [InstantPayoutMinOffersCompleted]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [InstantPayoutMinRegisteredDays]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [InstantPayoutMinCashoutsNumber]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [PorftolioSharesPolicy]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [SharesMarketSaleCommission]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [GiftCardMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Dear %Username%,

Your Redemption Code is: <b>%CodeSent%</b>

Input this code into %GiftCard% to claim your %GiftCode%. Thank you.

Regards, %Sitename% team') FOR [GiftCodeEmailDraft]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [CreditVideoPolicy]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [VideoMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [SearchMode]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Points') FOR [CurrencyPointsName]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [TotalPointsExchangedForGiftCards]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [TotalPointsGenerated]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((60)) FOR [SearchTimerMinutes]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((100)) FOR [MaxPointsDailyForSearch]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [ShowDetailedBanInformation]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [ResetPasswordIndirectLinkEnabled]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ('Dear %Username%

We received a password request for your account. To reset your password, please follow this link: %PasswordResetLink%

If you did not authorize this request and you do not know why you received this email, please contact us immediately.

Regards, %Sitename% team') FOR [ResetPasswordLink]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [ConvertCrowdflowerToMainBalance]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((1)) FOR [ShoutboxShowCountry]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [EnableKeyboard]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0.25)) FOR [BidAmountConstant]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((30)) FOR [LockDays]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((100)) FOR [LockPoints]
GO
ALTER TABLE [dbo].[ApplicationSettings] ADD  DEFAULT ((0)) FOR [IsLock]
GO
ALTER TABLE [dbo].[BalanceLogs] ADD  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[BalanceLogs] ADD  DEFAULT ((1)) FOR [Balance]
GO
ALTER TABLE [dbo].[Contests] ADD  DEFAULT ((0)) FOR [Autoparticipate]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((0)) FOR [LoginBoxRequired]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((0)) FOR [EmailBoxRequired]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((0)) FOR [IsFromAutomaticNetwork]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((0)) FOR [IsSyncWithNetwork]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((0)) FOR [IsIgnored]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((3)) FOR [CreditOfferAs]
GO
ALTER TABLE [dbo].[CPAOffers] ADD  DEFAULT ((1)) FOR [MaxDailyCredits]
GO
ALTER TABLE [dbo].[CPAOffersOnHold] ADD  DEFAULT ((0)) FOR [IsIgnored]
GO
ALTER TABLE [dbo].[CPAOffersOnHold] ADD  DEFAULT ((3)) FOR [CreditOfferAs]
GO
ALTER TABLE [dbo].[CPAOffersOnHold] ADD  DEFAULT ((1)) FOR [MaxDailyCredits]
GO
ALTER TABLE [dbo].[CPAPostBackLogs] ADD  DEFAULT ((0)) FOR [Statusek]
GO
ALTER TABLE [dbo].[CPAPostBackLogs] ADD  DEFAULT ((0)) FOR [IsDeleted]
GO
ALTER TABLE [dbo].[CPAReports] ADD  DEFAULT ((0)) FOR [IsDeleted]
GO
ALTER TABLE [dbo].[CustomPayoutProcessors] ADD  DEFAULT ((2)) FOR [StatusInt]
GO
ALTER TABLE [dbo].[CustomPayoutProcessors] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[CustomPayoutProcessors] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[CustomRegistrationFields] ADD  DEFAULT ((1)) FOR [FieldType]
GO
ALTER TABLE [dbo].[CustomRegistrationFields] ADD  DEFAULT ((0)) FOR [IsRequired]
GO
ALTER TABLE [dbo].[CustomRegistrationFields] ADD  DEFAULT ((0)) FOR [IsHidden]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((0)) FOR [IsActive]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((0)) FOR [CashflowDirections]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((0)) FOR [CashoutPriority]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((0)) FOR [IsInstantCashout]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ('?') FOR [Username]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((100)) FOR [ManualCashoutAfterExceeding]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[EgoPayGateways] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[Emails] ADD  DEFAULT ((0)) FOR [IsGeolocated]
GO
ALTER TABLE [dbo].[GiftCodeRequests] ADD  DEFAULT ((0)) FOR [StatusInt]
GO
ALTER TABLE [dbo].[History] ADD  CONSTRAINT [DF_History_IsRead]  DEFAULT ('False') FOR [IsRead]
GO
ALTER TABLE [dbo].[IncomingPayments] ADD  DEFAULT ((1)) FOR [Status]
GO
ALTER TABLE [dbo].[IncomingPayments] ADD  DEFAULT ((0)) FOR [Amount]
GO
ALTER TABLE [dbo].[IncomingPayments] ADD  DEFAULT ((0)) FOR [PaymentProcessor]
GO
ALTER TABLE [dbo].[IPHistoryLogs] ADD  DEFAULT ((0)) FOR [IsMasterLogin]
GO
ALTER TABLE [dbo].[MembershipPacks] ADD  CONSTRAINT [DF_MembershipPacks_CopiesBought]  DEFAULT ((0)) FOR [CopiesBought]
GO
ALTER TABLE [dbo].[Memberships] ADD  CONSTRAINT [DF_Memberships_AdvertPointsEarnings]  DEFAULT ((0)) FOR [AdvertPointsEarnings]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((20)) FOR [TrafficGridTrials]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((3)) FOR [TrafficGridChances]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((100)) FOR [TrafficGridShorterAd]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((100)) FOR [OfferwallsProfitPercent]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((2)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((2)) FOR [CashoutLimitIcreased]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((100)) FOR [CPAProfitPercent]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((10)) FOR [RefPercentEarningsOfferwalls1]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((50)) FOR [MaxRefPackageCount]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((0)) FOR [RefPercentEarningsCPA]
GO
ALTER TABLE [dbo].[Memberships] ADD  DEFAULT ((1)) FOR [HasInstantPayout]
GO
ALTER TABLE [dbo].[Messages] ADD  CONSTRAINT [DF_Messages_IsRead]  DEFAULT ('false') FOR [IsRead]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((0)) FOR [IsActive]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((0)) FOR [CashflowDirections]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((0)) FOR [CashoutPriority]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((0)) FOR [IsInstantCashout]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((100)) FOR [ManualCashoutAfterExceeding]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[NetellerGateways] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((2)) FOR [Status]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((1)) FOR [CreditAs]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((0)) FOR [RequiresConversion]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((0)) FOR [HasRestrictedIPs]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((1)) FOR [IsPostbackMode]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [PublisherUsername]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [PublisherPassword]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [WebsiteID]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((100)) FOR [PercentForMembers]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((1)) FOR [AffiliateNetworkSoftwareTypeInt]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarUsername]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarBalance]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarTrackingNo]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarOfferId]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarWebsiteId]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarMemberIP]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [OKResponse]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarType]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarTypeCredit]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarTypeReverse]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [VarSignature]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ('?') FOR [SignatureCondition]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((0)) FOR [IsPerforma]
GO
ALTER TABLE [dbo].[NewAffiliateNetworks] ADD  DEFAULT ((1)) FOR [WhatIsSent]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ((2)) FOR [Status]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ((1)) FOR [CreditAs]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ((0)) FOR [RequiresConversion]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ((0)) FOR [HasRestrictedIPs]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarUsername]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarBalance]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarTrackingNo]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [OKResponse]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarType]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarTypeCredit]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarTypeReverse]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [VarSignature]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ('?') FOR [SignatureCondition]
GO
ALTER TABLE [dbo].[Offerwalls] ADD  DEFAULT ((1)) FOR [WhatIsSent]
GO
ALTER TABLE [dbo].[OfferwallsLogs] ADD  DEFAULT ((0)) FOR [IsDeleted]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((0)) FOR [IsActive]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((0)) FOR [CashflowDirections]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((0)) FOR [CashoutPriority]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((0)) FOR [IsInstantCashout]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ('?') FOR [Username]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((100)) FOR [ManualCashoutAfterExceeding]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[OKpayGateways] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[PayoutRequests] ADD  DEFAULT ((1)) FOR [IsRequest]
GO
ALTER TABLE [dbo].[PayPalGateways] ADD  DEFAULT ((100)) FOR [ManualCashoutAfterExceeding]
GO
ALTER TABLE [dbo].[PayPalGateways] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[PayPalGateways] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[PayzaGateways] ADD  DEFAULT ((100)) FOR [ManualCashoutAfterExceeding]
GO
ALTER TABLE [dbo].[PayzaGateways] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[PayzaGateways] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((0)) FOR [IsActive]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((0)) FOR [CashflowDirections]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((0)) FOR [CashoutPriority]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((0)) FOR [IsInstantCashout]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ('?') FOR [Username]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ('?') FOR [Number]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ('?') FOR [Name]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((100)) FOR [ManualCashoutAfterExceeding]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((0)) FOR [OverrideGlobalLimit]
GO
ALTER TABLE [dbo].[PerfectMoneyGateways] ADD  DEFAULT ((5)) FOR [CashoutLimit]
GO
ALTER TABLE [dbo].[PromotionSites] ADD  DEFAULT ((0)) FOR [IsTop]
GO
ALTER TABLE [dbo].[RefbackSites] ADD  DEFAULT ((0)) FOR [UsersDeclatered]
GO
ALTER TABLE [dbo].[ReferralPackages] ADD  DEFAULT ((100)) FOR [PercentValue]
GO
ALTER TABLE [dbo].[RentedReferrals] ADD  CONSTRAINT [DF_RentedReferrals_BotClass]  DEFAULT ((-1)) FOR [BotClass]
GO
ALTER TABLE [dbo].[RentedReferrals] ADD  CONSTRAINT [DF_RentedReferrals_HasAutoPay]  DEFAULT ('false') FOR [HasAutoPay]
GO
ALTER TABLE [dbo].[RentedReferrals] ADD  CONSTRAINT [DF_RentedReferrals_TotalClicks]  DEFAULT ((0)) FOR [TotalClicks]
GO
ALTER TABLE [dbo].[RentedReferrals] ADD  CONSTRAINT [DF_RentedReferrals_ClicksStats]  DEFAULT ('0#0#0#0#0#0#0#0#0#0#0#0#0#0') FOR [ClicksStats]
GO
ALTER TABLE [dbo].[RentedReferrals] ADD  DEFAULT ((0)) FOR [PointsEarnedToReferer]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [TotalClicks]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [TotalNormalBannerImpressions]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [TotalConstantBannerImpressions]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [ClicksLeft]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [NormalBannerImpressionsLeft]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [ConstantBannerImpressionsLeft]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [Packages]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [MoneyReturned]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [ClicksPurchased]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [NormalBannerImpressionsPurchased]
GO
ALTER TABLE [dbo].[RevenueShareAdverts] ADD  DEFAULT ((0)) FOR [ConstantBannerImpressionsPurchased]
GO
ALTER TABLE [dbo].[ShoutboxMessages] ADD  DEFAULT ((0)) FOR [IsDeleted]
GO
ALTER TABLE [dbo].[SupportTicketReplies] ADD  DEFAULT ((0)) FOR [IsMember]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_AccountStatus]  DEFAULT (N'Active') FOR [AccountStatus]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_IsLocked]  DEFAULT ('false') FOR [IsLocked]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_FailedPasswordAttemptCount]  DEFAULT ((0)) FOR [FailedPasswordAttemptCount]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_FailedPINAttemptCount]  DEFAULT ((0)) FOR [FailedPINAttemptCount]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_Balance1]  DEFAULT ((0)) FOR [Balance1]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_Balance2]  DEFAULT ((0)) FOR [Balance2]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_Balance3]  DEFAULT ((0)) FOR [Balance3]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_Balance4]  DEFAULT ((0)) FOR [Balance4]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_UpgradeId]  DEFAULT ((0)) FOR [UpgradeId]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_UpgradeName]  DEFAULT (N'Standard') FOR [UpgradeName]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_ViewedAds]  DEFAULT ('-1') FOR [ViewedAds]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_MessageSystemTurnedOn]  DEFAULT ('true') FOR [MessageSystemTurnedOn]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_AvatarUrl]  DEFAULT (N'~/Images/Misc/defaultavatar.png') FOR [AvatarUrl]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_TotalClicks]  DEFAULT ((0)) FOR [TotalClicks]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_TotalEarned]  DEFAULT ((0)) FOR [TotalEarned]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_StatsClicks]  DEFAULT ('0#0#0#0#0#0#0#0#0#0') FOR [StatsClicks]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_StatsEarned]  DEFAULT ('0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000#0.000') FOR [StatsEarned]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_IsSpotted]  DEFAULT ('false') FOR [IsSpotted]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_IsRented]  DEFAULT ('false') FOR [IsRented]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_Achievements]  DEFAULT ('-1') FOR [Achievements]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_UnspottedAchievements]  DEFAULT ((0)) FOR [UnspottedAchievements]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_CashoutsProceed]  DEFAULT ((0)) FOR [CashoutsProceed]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_IsForumModerator]  DEFAULT ('false') FOR [IsForumModerator]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_LikedAds]  DEFAULT ('-1') FOR [LikedAds]
GO
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_UserClicksStats]  DEFAULT ('0#0#0#0#0#0#0#0#0#0') FOR [UserClicksStats]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TrafficGridHitsToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TrafficGridTotalWons]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [DirectReferralLimitEnlargedBy]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [IsRegisterIPVerified]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [UnconfirmedSMSSent]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [IsPhoneVerifiedBeforeCashout]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [IsPhoneVerified]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [MoneyTransferred]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [MoneyCashout]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [PointsToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TotalCPACompleted]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ('-1') FOR [CompletedDailyCPAOffersToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [PointsEarnedToReferer]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ('U??????') FOR [PerfectMoneyAccountNo]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((1)) FOR [BypassSecurityCheck]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((1)) FOR [TransferFundsPermission]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((1)) FOR [ShoutboxPermission]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((1)) FOR [CPACompletedBehavior]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [CPACompletedToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [CaptchaType]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ('-1') FOR [RSAAdsViewed]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TotalPointsGenerated]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TotalPointsExchanged]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [CompletedOffersFromOfferwallsToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [CompletedOffersMoreThan100pFromOfferwallsToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [CompletedDailyOffersFromOfferwallsToday]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TotalSearchesDone]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ((0)) FOR [TotalVideosWatched]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ('0#0#0#0#0#0#0#0#0#0') FOR [RawDirectReferralsClicks]
GO
ALTER TABLE [dbo].[Users] ADD  DEFAULT ('0#0#0#0#0#0#0#0#0#0') FOR [RawRentedReferralsClicks]
GO
ALTER TABLE [dbo].[SupportTicketReplies]  WITH CHECK ADD FOREIGN KEY([TicketId])
REFERENCES [dbo].[SupportTickets] ([SupportTicketId])
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Banners advertising PTC (NOT banners which are adverts bought by some people because those banners are put in BannerAdverts table)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Banners'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Obsolete but created for compatibility issues.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'FacebookAdvertPacks', @level2type=N'COLUMN',@level2name=N'Name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount in percents' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Memberships', @level2type=N'COLUMN',@level2name=N'RenewalDiscount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Time of display in seconds' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'PtcAdverts', @level2type=N'COLUMN',@level2name=N'DisplayTimeSeconds'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Id of upgrade which is allowed to watch advertisement marked with this  class' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'PtcAdverts', @level2type=N'COLUMN',@level2name=N'MinMembershipId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'One of three words: "Username", "IP", "Country" to determine Value content' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SecurityRules', @level2type=N'COLUMN',@level2name=N'Type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Depeniding on type: username, IP adress, or country name' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SecurityRules', @level2type=N'COLUMN',@level2name=N'Value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains support tickets' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'SupportTickets'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'If true members can see website text, false otherwisie' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Texts', @level2type=N'COLUMN',@level2name=N'IsVisible'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Title displayed for users' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Texts', @level2type=N'COLUMN',@level2name=N'Title'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stores texts displayed to Members (welcome message, faq etc). If text is a document, check out WebsiteTextSections table' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Texts'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Format: EL#EL#EL' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Users', @level2type=N'COLUMN',@level2name=N'ViewedAds'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains user data' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Users'
GO

ALTER TABLE ApplicationSettings
Add EnablePreApproval bit NOT NULL DEFAULT 0;

ALTER TABLE [Messages]
ADD Status int NOT NULL DEFAULT 1;

ALTER TABLE OfferRegisterEntries
ADD HasBeenLocked bit not null Default 0;

ALTER TABLE Contests
ADD ClicksReferallsRestriction int not null Default 0;

ALTER TABLE ApplicationSettings
ADD ExternalLinksEnabled bit NOT NULL DEFAULT 1;

GO

ALTER TABLE Users
ADD BTCBalance decimal(16,8) NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD BitCoinValue decimal(16,8) NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD BuyBitCoinsForPointsEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD MaxBitCoinProfitPercent decimal(16,8) NOT NULL DEFAULT 0;

ALTER TABLE BalanceLogs
ADD BitCoinAmount decimal(16,8) NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD MinBitCoinBet decimal(16,8) NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD HouseEdgePercent int NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD IsDiceGameEnabled bit not null Default 0;

ALTER TABLE ApplicationSettings
ADD ShowGeolocatedCountryFlags bit not null Default 0;

CREATE TABLE [dbo].[DiceGameHashes](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NULL,
	[ClientSeedCurrent] [varchar](512) NOT NULL,
	[ClientSeedPrevious] [varchar](512) NULL,
	[ServerSeedCurrent] [varchar](512) NOT NULL,
	[ServerSeedPrevious] [varchar](512) NULL,
	[ServerHashCurrent] [varchar](512) NOT NULL,
	[ServerHashPrevious] [varchar](512) NULL,
	[CreatedDateCurrent] [DateTime] NOT NULL,
	[CreatedDatePrevious] [DateTime] NULL
	);

	GO

	CREATE TABLE [dbo].[UserBets](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NULL,
	[BetSize] [decimal](16,8) NOT NULL,
	[Profit] [decimal](16,8) NOT NULL,
	[Low] [bit] NOT NULL,
	[Chance] [decimal](16,8) NOT NULL,
	[BetDate] [DateTime] NOT NULL,
	[Roll] [decimal](16,8) NOT NULL,
	);

	GO

	ALTER TABLE USERS
	ADD IsExcludedFromInstantPayment bit NOT NULL DEFAULT 0;

	ALTER TABLE Offerwalls
	ADD IsIncludedInPTCContest bit not null DEFAULT 0;

	CREATE TABLE [dbo].[UserInvestments](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NULL,
	[Amount] [decimal](16,8) NOT NULL,
	[OperationDate] [DateTime] NOT NULL
	);

	GO

	ALTER TABLE ApplicationSettings 
	ADD AdminInvestment decimal(16,8) NOT NULL DEFAULT 0;

	CREATE TABLE [dbo].[SiteInvestments](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[Amount] [decimal](16,8) NOT NULL,
	[Kelly] [decimal](3,1) NOT NULL,
	[OperationDate] [DateTime] NOT NULL
	);

	GO

	ALTER TABLE ApplicationSettings
	ADD IsExternalIFrameEnabled bit not null DEFAULT 0;

	ALTER TABLE ApplicationSettings 
	ADD MaxChance decimal(16,8) NOT NULL DEFAULT 50;

	ALTER TABLE ApplicationSettings 
	ADD MaxKellyLevel decimal(3,1) NOT NULL DEFAULT 1;

	ALTER TABLE ApplicationSettings 
	ADD HouseProfit decimal(16,8) NOT NULL DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD XPub varchar(128) not null DEFAULT 'null';

	ALTER TABLE ApplicationSettings
	ADD ApiKey varchar(128) not null DEFAULT 'null';

	ALTER TABLE ApplicationSettings
	ADD BTCEnabled bit not null DEFAULT 0;

	ALTER TABLE Users
	ADD IsForumAdministrator bit NOT NULL DEFAULT 0;

	GO

	UPDATE Users SET IsForumAdministrator = 1 WHERE Username = 'admin';

	CREATE TABLE [dbo].[ForumContests](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ForumId] [int] NULL,
	[ContestId] [int] NULL
	);

	GO

	ALTER TABLE ApplicationSettings
	ADD CommandsEnabled bit not null DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD TipCommandEnabled bit not null DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD TransferFee int not null DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD IsBitCoinDepositEnabled bit not null DEFAULT 0;

	ALTER TABLE BalanceLogs
	ADD AccountState money NULL;

	ALTER TABLE BalanceLogs
	ADD BTCAccountState decimal(16,8) NULL;

	ALTER TABLE ApplicationSettings
	ADD AdPackName varchar(128) not null DEFAULT 'AdPack';

	ALTER TABLE ApplicationSettings
	ADD AdPackNamePlural varchar(128) not null DEFAULT 'AdPacks';

	ALTER TABLE ApplicationSettings
	ADD PackPrice money not null DEFAULT 5;

	ALTER TABLE ApplicationSettings
	ADD PackPTCs int not null DEFAULT 10;

	ALTER TABLE ApplicationSettings
	ADD PackNormalBannerImpressions int not null DEFAULT 10;

	ALTER TABLE ApplicationSettings
	ADD PackConstantBannerImpressions int not null DEFAULT 10;

	ALTER TABLE ApplicationSettings
	ADD PackPTCDurationInSeconds int not null DEFAULT 5;

	ALTER TABLE ApplicationSettings
	ADD PackReturnValuePercent int not null DEFAULT 110;

	ALTER TABLE ApplicationSettings
	ADD IsRevShareEnabled bit not null DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD AdminUsername varchar(512) null;

	ALTER TABLE ApplicationSettings
	ADD DailyPoolDurationTime int not null default 7;





	ALTER TABLE ApplicationSettings
	ADD EarnCPAGPTEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnOfferwallsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnAdsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnContestsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnAdPacksEnabled bit not null default 0;

	ALTER TABLE ApplicationSettings
	ADD EarnLikesEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnRefBackEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnTrafficExchangeEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnTrafficGridEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD EarnCrowdFlowerEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertCPAGPTEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertTrafficExchangeEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertBannersEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertFacebookEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertAdsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertTrafficGridEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD AdvertAdPacksEnabled bit not null default 0;
	
	ALTER TABLE ApplicationSettings
	ADD ReferralsDirectEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD ReferralsBannersEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD ReferralsIndirectEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD ReferralsRentedEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD ReferralsStatsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD PeopleMessagesEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD PeopleFriendsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD PeopleGamesEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD UpgradeEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD MoneyTransferEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD MoneyLogsEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD MoneyPayoutEnabled bit not null default 1;

	ALTER TABLE ApplicationSettings
	ADD TrophiesEnabled bit not null default 1;

	ALTER TABLE PtcAdverts
	ALTER COLUMN TargetUrl nvarchar(800);

	CREATE TABLE [dbo].[AdPacksAdverts](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Status] [int] NOT NULL,
	[TargetUrl] [nvarchar](800) NOT NULL,
	[ConstantImagePath] [varchar](256) NULL,
	[NormalImagePath] [varchar](256) NULL,
	[CreatorUserId] [int] NOT NULL,
	[Title] [varchar](256) NOT NULL,
	[Description] [varchar](256) NOT NULL
	);
	
	GO

	ALTER TABLE TrafficExchangeAdverts
	ALTER COLUMN TargetUrl nvarchar(800);

	ALTER TABLE TrafficGridAdverts
	ALTER COLUMN TargetUrl nvarchar(800);

	CREATE TABLE [dbo].[AdPacks](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[AdPacksAdvertId] [int] NOT NULL,
	[TotalClicks] [int] NOT NULL,
	[TotalNormalBannerImpressions] [int] NOT NULL,
	[TotalConstantBannerImpressions] [int] NOT NULL,
	[PurchaseDate] [DateTime] NOT NULL,
	[MoneyReturned] [smallmoney] NOT NULL
	);

	GO

	ALTER TABLE ApplicationSettings
	ADD PackNormalBannerHeight int NOT NULL DEFAULT 60;

	ALTER TABLE ApplicationSettings
	ADD PackNormalBannerWidth int NOT NULL DEFAULT 468;

	ALTER TABLE ApplicationSettings
	ADD PackConstantBannerHeight int NOT NULL DEFAULT 125;

	ALTER TABLE ApplicationSettings
	ADD PackConstantBannerWidth int NOT NULL DEFAULT 125;



	ALTER TABLE AdPacks
	ADD ConstantBannerImpressionsBought int NOT NULL;

	ALTER TABLE AdPacks
	ADD NormalBannerImpressionsBought int NOT NULL;

	ALTER TABLE AdPacks
	ADD ClicksBought int NOT NULL;

	ALTER TABLE AdPacks
	ADD MoneyToReturn smallmoney NOT NULL;

	GO

	ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_SiteName;

	GO

	ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_SiteDescription;

	GO

	ALTER TABLE ApplicationSettings
	ALTER COLUMN SiteName nvarchar(30);

	ALTER TABLE ApplicationSettings
	ALTER COLUMN SiteSlogan nvarchar(50);

	ALTER TABLE ApplicationSettings
	ALTER COLUMN SiteDescription1 nvarchar(300);

	ALTER TABLE ApplicationSettings
	ADD DailyRequiredAdClicks int NOT NULL DEFAULT 10;

	ALTER TABLE ApplicationSettings
	ADD RevSharePolicy int NOT NULL DEFAULT 1;

	CREATE TABLE [dbo].[CustomGroups](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Number] [int] NOT NULL,
	[AdPacksLimit] [int] NOT NULL DEFAULT 10,
	[AcceleratedProfitPercentage] [int] NOT NULL DEFAULT 110,
	[CreatorsMinNumberOfAdPacks] [int] NOT NULL DEFAULT 1,
	);

	GO

	ALTER TABLE CustomGroups ADD NumberOfGroupsLimit int NOT NULL DEFAULT 1

	CREATE TABLE [dbo].[UserCustomGroups](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CreatorUserId] [int] NOT NULL,
	[CustomGroupId] [int] NOT NULL,
	[AdPacksAdded] [int] NOT NULL,
	);

	GO

		ALTER TABLE ApplicationSettings
	ADD EarnCashLinksEnabled bit not null default 0;

		ALTER TABLE ApplicationSettings
	ADD AdvertCashLinksEnabled bit not null default 0;

			ALTER TABLE ApplicationSettings
	ADD AdBlockPolicy int not null default 1;

	ALTER TABLE AdPacks
	ADD UserCustomGroupId int NULL;

	CREATE TABLE [dbo].[ProfitPoolDistribution](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProfitSource] [int] NOT NULL,
	[Pool] [int] NOT NULL,
	[ProfitPoolPercent] [int] NOT NULL,
	);

	GO
	
	INSERT INTO ProfitPoolDistribution (ProfitSource, Pool, ProfitPoolPercent) 
	VALUES (1,0,100),(2,0,100),(4,0,100),(12,0,100);

	ALTER TABLE ApplicationSettings
	ADD MaxKellyLevelInt int NOT NULL DEFAULT 1;

	ALTER TABLE SiteInvestments
	ADD KellyInt int NOT NULL;

	ALTER TABLE UserCustomGroups
	ADD Name nvarchar(150) not null default 'ChangeMe'

	ALTER TABLE CustomGroups
	ADD Color nvarchar(50) not null default '#BD95E9'

	ALTER TABLE UserCustomGroups
	ADD Description nvarchar(2500) NULL;

	ALTER TABLE UserCustomGroups
	ADD PromoUrl nvarchar(1000) NULL;

	ALTER TABLE UserCustomGroups
	ADD Email nvarchar(100) NULL;

	ALTER TABLE UserCustomGroups
	ADD Skype nvarchar(100) NULL;

	ALTER TABLE UserCustomGroups
	ADD PhoneNumber nvarchar(50) NULL;

	ALTER TABLE UserCustomGroups
	ADD FacebookUrl nvarchar(800) NULL;

	ALTER TABLE UserCustomGroups
	ADD ImagePath nvarchar(800) NULL;

	ALTER TABLE CustomGroups
	ADD EnterLeaveAdPackMaxFillPercent int NOT NULL DEFAULT 10;

	ALTER TABLE ApplicationSettings
	ADD MainColor varchar(30) NOT NULL DEFAULT '#80982f';

	ALTER TABLE ApplicationSettings
	ADD LightColor varchar(30) NOT NULL DEFAULT '#b8d559';

	ALTER TABLE ApplicationSettings
	ADD DarkColor varchar(30) NOT NULL DEFAULT '#51611c';

	ALTER TABLE ApplicationSettings
	ADD LogoImageURL varchar(MAX) NOT NULL DEFAULT '';

	ALTER TABLE ApplicationSettings
	ADD FaviconImageURL varchar(MAX) NOT NULL DEFAULT '';

    ALTER TABLE AdPacks
	ADD UserId int NOT NULL;

	ALTER TABLE Reports
	ADD ActiveAdPacks int NOT NULL DEFAULT 0,
    AdPackTypeId int NOT NULL DEFAULT 0,
	MoneyInPool money NOT NULL DEFAULT 0,
	MoneyDistributed money NOT NULL DEFAULT 0;

	CREATE TABLE [dbo].[AntiCheatSystemRules](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[RuleText] [nvarchar](MAX) NOT NULL,
	[Enabled] bit NOT NULL DEFAULT 1,
	[RuleTypeInt] int NOT NULL
	);

	GO

	INSERT INTO [AntiCheatSystemRules]
	(RuleText, Enabled, RuleTypeInt) VALUES
	('Used the same Facebook account on multiple accounts', 1, 0),
	('Used Proxy IP during registration (ProxStop/Blocked API)', 1, 1),
	('Used Proxy IP during login (ProxStop/Blocked API)', 1, 7),
	('Used the same Last IP and similiar computer', 1, 2),
	('Registered with the same IP on the same day', 1, 3),
	('Registered with the same IP on similar computers', 1, 6),
	('Direct referral relations with the same Last/Register IP addresses', 1, 4),
	('The same payment address', 1, 5);

	ALTER TABLE BannerAdverts
	ADD BannerHTML nvarchar(MAX);

	UPDATE Users SET Balance3 += Balance2;
	UPDATE USers SET Balance2 = 0;

	ALTER TABLE AdPacks
	ADD DistributionPriority decimal(5,2) NOT NULL DEFAULT 1.00;

	ALTER TABLE Users
	ADD RevenueShareAdsWatchedYesterday int NOT NULL DEFAULT 0;

	ALTER TABLE ApplicationSettings
ADD AdvertLoginAdsEnabled BIT NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD IsLoginAdsGeolocationEnabled BIT NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD LoginAdsPrice DECIMAL(8,4) NOT NULL DEFAULT 30;

ALTER TABLE ApplicationSettings
ADD LoginAdsPerDay INTEGER NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD LoginAdsDisplayTime INTEGER NOT NULL DEFAULT 10;

	CREATE TABLE [dbo].[LoginAds](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CreatorUserId] [int] NOT NULL,
	[Status] [int] NOT NULL,
	[TargetUrl] [nvarchar](800) NOT NULL,
	[DisplayDate] [DateTime] NOT NULL,
	[PurchaseDate] [DateTime] NOT NULL,
	[GeolocatedCC] [nvarchar](max) NOT NULL,
	[GeolocatedCities] [nvarchar](max) NOT NULL,
	[GeolocatedAgeMin] [int] NOT NULL,
	[GeolocatedAgeMax] [int] NOT NULL,
	[GeolocatedGender] [int] NOT NULL,
	[GeolocationProfile] [nvarchar](max) NOT NULL,
	[TotalViews] [int] NOT NULL DEFAULT 0
	);

	GO

	ALTER TABLE ApplicationSettings
	ADD TimeBetweenTEAdsRedirectInSeconds int NOT NULL DEFAULT 4;

	ALTER TABLE TrafficExchangeAdvertPacks
	ADD TimeBetweenViewsInMinutes int NOT NULL DEFAULT 1440;



	CREATE TABLE [dbo].[TrafficExchangeViews](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[TrafficExchangeAdvertId] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[LastDisplayDate] [DateTime] NOT NULL,
	);

	GO

	ALTER TABLE ApplicationSettings
	ADD ServerTimeDifference int NOT NULL DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD DistributionTime int NOT NULL DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD HourlyDistributionsMadeToday int NOT NULL DEFAULT 0;
	
	ALTER TABLE TrafficExchangeAdverts
	ADD TimeBetweenViewsInMinutes int NOT NULL DEFAULT 1440;

	CREATE TABLE [dbo].[AutomaticGroups](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Number] [int] NOT NULL,
	[AdPacksLimit] [int] NOT NULL DEFAULT 10,
	[AcceleratedProfitPercentage] [int] NOT NULL DEFAULT 110,
	[Color] [nvarchar](50) NOT NULL DEFAULT '#FF717ACB'
	);

	GO
	ALTER TABLE ApplicationSettings
	ADD TawkChatEnabled bit NOT NULL DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD TawkLiveChatKey varchar(100);

	ALTER TABLE ApplicationSettings
	ADD EnableAdPackWithoutAnyAdvertising bit NOT NULL DEFAULT 0;

	ALTER TABLE ApplicationSettings
	ADD TimeBetweenAdPackAdsRedirectInSeconds int NOT NULL DEFAULT 4;

	ALTER TABLE ApplicationSettings
	ADD PointsEnabled bit NOT NULL DEFAULT 1;

	ALTER TABLE AutomaticGroups 
	ADD IsHighestGroup bit NOT NULL DEFAULT 'false';

GO

ALTER TABLE ApplicationSettings 
ADD CustomReturnOption INT NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD EnableAdvertChange bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings 
ADD RevShareDistributionPolicy int NOT NULL DEFAULT 2;

ALTER TABLE ApplicationSettings 
ADD RevShareFixedDistributionValue money NOT NULL DEFAULT 0.001;

ALTER TABLE ApplicationSettings
ADD AdPackDirectReferersProfitPercentage decimal(4,1) NOT NULL DEFAULT 0;

ALTER TABLE AdPacksAdverts
ADD StartPageDate DateTime NULL;

ALTER TABLE ApplicationSettings
ADD IsStartPageEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD StartPagePrice money NOT NULL DEFAULT 40;

ALTER TABLE Memberships
ADD DirectReferralAdPackPurchaseEarnings int NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD IsAdPackStartSurfingEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD IsAdPackAdListEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD BuyAdBalanceForBitcoinsEnabled bit NOT NULL DEFAULT 'false';

ALTER TABLE ApplicationSettings
ADD BitCoinInAdBalanceValue money NOT NULL DEFAULT 450;

ALTER TABLE ApplicationSettings
ADD ShoutboxShowAdminCountry bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD ShoutBoxShowCPANetworkAndLink bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD StatisticsMoneyEarnedEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD StatisticsPointsEarnedEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD StatisticsCashLinksEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD StatisticsAdPacksEnabled bit NOT NULL DEFAULT 'true';

ALTER TABLE ApplicationSettings
ADD StatisticsPTCClicksEnabled bit NOT NULL DEFAULT 'true';

CREATE TABLE [dbo].SolidTrustPayGateways
(
	Id int PRIMARY KEY IDENTITY,
	IsActive bit NOT NULL DEFAULT 0,
	CashflowDirections int NOT NULL DEFAULT 0,
	CashoutPriority int NOT NULL DEFAULT 0,
	IsInstantCashout bit NOT NULL DEFAULT 0,
	Username nvarchar(200) DEFAULT '?',
	OverrideGlobalLimit bit NOT NULL DEFAULT 0,
	CashoutLimit money NOT NULL DEFAULT 5,
	ManualCashoutAfterExceeding money NOT NULL DEFAULT 100,
	ApiUsername nvarchar(MAX),
	ApiPassword nvarchar(MAX),
	PaymentButtonsPassword nvarchar(MAX)
);

CREATE TABLE [dbo].PayeerGateways
(
	Id int PRIMARY KEY IDENTITY,
	IsActive bit NOT NULL DEFAULT 0,
	CashflowDirections int NOT NULL DEFAULT 0,
	CashoutPriority int NOT NULL DEFAULT 0,
	IsInstantCashout bit NOT NULL DEFAULT 0,
	Username nvarchar(200) DEFAULT '?',
	OverrideGlobalLimit bit NOT NULL DEFAULT 0,
	CashoutLimit money NOT NULL DEFAULT 5,
	ManualCashoutAfterExceeding money NOT NULL DEFAULT 100,
	ApiUsername nvarchar(MAX),
	AdminApiUsername nvarchar(MAX),
	ApiPassword nvarchar(MAX),
	MerchantID nvarchar(MAX),
	SecretKey nvarchar(MAX)
);

ALTER TABLE Users
ADD SolidTrustPayAccountID varchar(100);

ALTER TABLE Users
ADD PayeerAccountID varchar(100);

ALTER TABLE Users
ADD TotalPointsEarned int NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD TotalDirectReferralsEarned money NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD TotalDirectReferralsPointsEarned int NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD TotalDREarnedFromAdPacks money NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD TotalEarnedFromCashLinks money NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD StatsDirectReferralsEarned varchar(60) NOT NULL DEFAULT '0#0#0#0#0#0#0';

ALTER TABLE Users
ADD StatsPointsEarned varchar(60) NOT NULL DEFAULT '0#0#0#0#0#0#0';

ALTER TABLE Users
ADD StatsDirectReferralsPointsEarned varchar(60) NOT NULL DEFAULT '0#0#0#0#0#0#0';

ALTER TABLE Users
ADD StatsDRAdPacksEarned varchar(60) NOT NULL DEFAULT '0#0#0#0#0#0#0';

ALTER TABLE Users
ADD StatsCashLinksEarned varchar(60) NOT NULL DEFAULT '0#0#0#0#0#0#0';

ALTER TABLE Users
ADD StatsDRCashLinksEarned varchar(60) NOT NULL DEFAULT '0#0#0#0#0#0#0';

ALTER TABLE Users
ADD TotalEarnedFromDRCashLinks money NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD TotalDRPTCClicks int NOT NULL DEFAULT 0;

ALTER TABLE Users 
ADD LastDRActivity DateTime NOT NULL DEFAULT cast('1753-1-1' as datetime);

ALTER TABLE Users
ADD TotalPTCClicksToDReferer int not null default 0;

ALTER TABLE Users
ADD TotalEarnedToDReferer money not null default 0;

ALTER TABLE Users
ADD TotalPointsEarnedToDReferer int not null default 0;

ALTER TABLE Users
ADD TotalAdPacksToDReferer money not null default 0;

ALTER TABLE Users
ADD TotalCashLinksToDReferer money not null default 0;

ALTER TABLE Users 
ADD ReferralSince DateTime NOT NULL DEFAULT cast('1753-1-1' as datetime);

GO

ALTER TABLE Memberships
ADD MaxDailyCashout money NOT NULL DEFAULT 50;

GO

ALTER TABLE ApplicationSettings 
ADD BlockioApiKey varchar(512) NULL;

ALTER TABLE ApplicationSettings 
ADD APIProvider int NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings 
ADD DepositConfirmationsRequired int NOT NULL DEFAULT 3;

CREATE TABLE [dbo].BitcoinAddresses
(
	Id int PRIMARY KEY IDENTITY,
	UserId int NOT NULL,
	BlockioAddress nvarchar(512) NULL
);

GO

ALTER TABLE ApplicationSettings 
ADD MinimumWithdrawBTC decimal(16,8) NOT NULL DEFAULT 0.00002;

ALTER TABLE ApplicationSettings
ADD BlockioSecretPIN nvarchar(50) NULL;

ALTER TABLE ApplicationSettings
ADD IsBitCoinWithdrawalEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD BlockioPlan int NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD RevShareFixedDistributionValue2 money NOT NULL DEFAULT 0;

GO

UPDATE ApplicationSettings SET RevShareFixedDistributionValue2 = RevShareFixedDistributionValue;

IF OBJECT_ID('dbo.Jackpots', 'U') IS NOT NULL 
DROP TABLE dbo.Jackpots; 

IF OBJECT_ID('dbo.JackpotsParticipants', 'U') IS NOT NULL 
DROP TABLE dbo.JackpotsParticipants; 

IF OBJECT_ID('dbo.JackpotParticipants', 'U') IS NOT NULL 
DROP TABLE dbo.JackpotParticipants; 

CREATE TABLE [dbo].Jackpots
(
	Id int PRIMARY KEY IDENTITY,
	Prize money NOT NULL,
	TicketPrice money NOT NULL,
	StartDate datetime NOT NULL,
	EndDate datetime NOT NULL,
	Name nvarchar(256) NOT NULL,
	Status int NOT NULL DEFAULT 2,
	WinnerId int NULL,
	NumberOfParticipants int NULL,
	NumberOfTickets int NULL,
	WinningTicketNumber int NULL
);



CREATE TABLE[dbo].JackpotTickets
(
	Id int PRIMARY KEY IDENTITY,
	JackpotId int NOT NULL,
	UserId int NOT NULL
);

ALTER TABLE ApplicationSettings
ADD MoneyJackpotEnabled bit NOT NULL DEFAULT 0;

 CREATE TABLE[dbo].CandidatesToBan
(
	Id int PRIMARY KEY IDENTITY,
	RuleTypeInt int NOT NULL,
	UserId int NOT NULL,
	Note varchar(100)
);

GO

ALTER TABLE [dbo].CandidatesToBan
ADD DateOccured datetime NOT NULL;

  ALTER TABLE [dbo].CandidatesToBan
ADD [IsWhitelisted] bit NOT NULL;


 INSERT INTO ProfitPoolDistribution (ProfitSource, Pool, ProfitPoolPercent) 
 VALUES (13,0,100);

ALTER TABLE UserCustomGroups 
ADD Status int NOT NULL DEFAULT 1;

ALTER TABLE UserCustomGroups 
ADD GotBonus bit NOT NULL DEFAULT 0;

 INSERT INTO [Statistics](Data1, NumberOfDays, Type, Data2) VALUES ('0.0000#0.0000#0.0000#0.0000#0.0000#0.0000#0.0000', 7, 38, NULL);


ALTER TABLE ApplicationSettings
ADD BTCTargetBalance int NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD BTCValueEnlargedBy Money NOT NULL DEFAULT 0;


ALTER TABLE ApplicationSettings
ADD ShoutboxAdminColor  nvarchar(256) NOT NULL DEFAULT 'Red';

ALTER TABLE ApplicationSettings
ADD ShoutboxMorderatorColor  nvarchar(256) NOT NULL DEFAULT '#FF009DFF';

ALTER TABLE ApplicationSettings 
ADD ShowDirectReferralEmail bit NOT NULL DEFAULT 1;

GO

DELETE FROM PtcAdverts;

GO

ALTER TABLE ApplicationSettings
ADD MaximumPayoutPolicy int NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD MaximumPayoutPercentage int NOT NULL DEFAULT 50;

ALTER TABLE ApplicationSettings
ADD MaximumPayoutConstant money NOT NULL DEFAULT 999;

ALTER TABLE Memberships
ADD AdPackAdBalanceReturnPercentage int NOT NULL DEFAULT 0;

ALTER TABLE Memberships
ADD AdPackDailyRequiredClicks int NOT NULL DEFAULT 10;

GO

UPDATE Memberships SET AdPackDailyRequiredClicks = 
(SELECT DailyRequiredAdClicks FROM ApplicationSettings);

ALTER TABLE Memberships
ADD ROIEnlargedByPercentage int NOT NULL DEFAULT 0;

ALTER TABLE Users
ADD CommissionBalance money NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD CommissionBalanceEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD CommissionToMainBalanceEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE Memberships 
ADD SameUserCommissionToMainTransferFee int NOT NULL DEFAULT 0;

ALTER TABLE Memberships 
ADD OtherUserMainToCommisionTransferFee int NOT NULL DEFAULT 0;

ALTER TABLE Memberships
ADD OtherUserMainToAdTransferFee int NOT NULL DEFAULT 0;

ALTER TABLE Memberships 
ADD OtherUserMainToMainTransferFee int NOT NULL DEFAULT 0;

ALTER TABLE Memberships 
ADD OtherUserPointsToPointsTransferFee int NOT NULL DEFAULT 0;

GO

UPDATE Memberships 
SET OtherUserPointsToPointsTransferFee = (SELECT TransferFee FROM ApplicationSettings);

UPDATE Memberships 
SET OtherUserMainToMainTransferFee = (SELECT TransferFee FROM ApplicationSettings);

CREATE TABLE [dbo].CPAOfferContests
(
	Id int PRIMARY KEY IDENTITY,
	CPACategoryId int,
	ContestId int
);

GO

CREATE TABLE [dbo].PaymentProportions
(
	Id int PRIMARY KEY IDENTITY,
	UserId int NOT NULL,
	TotalIn money NOT NULL DEFAULT 0,
	TotalOut money NOT NULL DEFAULT 0,
	Processor int NOT NULL,
);

GO

ALTER TABLE CPAOffersOnHold
ALTER COLUMN TargetUrl nvarchar(500);

ALTER TABLE CPAOffers
ALTER COLUMN TargetUrl nvarchar(500);

ALTER TABLE ApplicationSettings
ADD ProportionalPayoutLimitsEnabled bit NOT NULL DEFAULT 1;

ALTER TABLE CPACategories
ALTER COLUMN CategoryName nvarchar(MAX);

ALTER TABLE [Statistics]
ALTER COLUMN Data1 varchar(MAX);

ALTER TABLE [Statistics]
ALTER COLUMN Data2 varchar(MAX);

ALTER TABLE ApplicationSettings
ADD MaxPointsDailyForVideo int NOT NULL DEFAULT 1000;

DELETE FROM PaymentProportions;

WITH CTE AS (
SELECT SUM(MoneyReturned) as amount, UserId as usid FROM AdPacks GROUP BY UserId
)
UPDATE Users SET TotalEarned = TotalEarned + (SELECT CTE.amount FROM CTE WHERE Users.UserId = CTE.usid) 
WHERE Users.UserId IN (SELECT CTE.usid FROM CTE);

WITH CTE AS (
                SELECT 
	                CT.Username AS username, 
                    SUM(CT.Amount) AS amount,
					CT.PaymentProcessor AS processor
                FROM CompletedTransactions CT 
                WHERE 
                    Username <> '' AND IsGuest = 0          
                GROUP BY Username, PaymentProcessor
            )
			INSERT INTO PaymentProportions (UserId, TotalIn, TotalOut, Processor) 
			SELECT (SELECT UserId FROM Users WHERE Username = CTE.Username) as UserId, CTE.amount, 0, CTE.processor FROM CTE;
			
			
			
WITH CTE AS (
select SUM(Amount) as amount, (SELECT UserId FROM Users WHERE Users.Username = PayoutRequests.Username) as usid, PaymentProcessor from PayoutRequests where PaymentProcessor = 'PayPal' group by Username, PaymentProcessor
)
UPDATE PaymentProportions SET TotalOut = TotalOut + (SELECT CTE.amount FROM CTE WHERE PaymentProportions.UserId = CTE.usid)
WHERE PaymentProportions.UserId IN (SELECT CTE.usid FROM CTE) AND PaymentProportions.Processor = 1;	

WITH CTE AS (
select SUM(Amount) as amount, (SELECT UserId FROM Users WHERE Users.Username = PayoutRequests.Username) as usid, PaymentProcessor from PayoutRequests where PaymentProcessor = 'Payza' group by Username, PaymentProcessor
)
UPDATE PaymentProportions SET TotalOut = TotalOut + (SELECT CTE.amount FROM CTE WHERE PaymentProportions.UserId = CTE.usid)
WHERE PaymentProportions.UserId IN (SELECT CTE.usid FROM CTE) AND PaymentProportions.Processor = 2;	

WITH CTE AS (
select SUM(Amount) as amount, (SELECT UserId FROM Users WHERE Users.Username = PayoutRequests.Username) as usid, PaymentProcessor from PayoutRequests where PaymentProcessor = 'PerfectMoney' group by Username, PaymentProcessor
)
UPDATE PaymentProportions SET TotalOut = TotalOut + (SELECT CTE.amount FROM CTE WHERE PaymentProportions.UserId = CTE.usid)
WHERE PaymentProportions.UserId IN (SELECT CTE.usid FROM CTE) AND PaymentProportions.Processor = 3;	

WITH CTE AS (
select SUM(Amount) as amount, (SELECT UserId FROM Users WHERE Users.Username = PayoutRequests.Username) as usid, PaymentProcessor from PayoutRequests where PaymentProcessor = 'SolidTrustPay' group by Username, PaymentProcessor
)
UPDATE PaymentProportions SET TotalOut = TotalOut + (SELECT CTE.amount FROM CTE WHERE PaymentProportions.UserId = CTE.usid)
WHERE PaymentProportions.UserId IN (SELECT CTE.usid FROM CTE) AND PaymentProportions.Processor = 7;	

WITH CTE AS (
select SUM(Amount) as amount, (SELECT UserId FROM Users WHERE Users.Username = PayoutRequests.Username) as usid, PaymentProcessor from PayoutRequests where PaymentProcessor = 'Payeer' group by Username, PaymentProcessor
)
UPDATE PaymentProportions SET TotalOut = TotalOut + (SELECT CTE.amount FROM CTE WHERE PaymentProportions.UserId = CTE.usid)
WHERE PaymentProportions.UserId IN (SELECT CTE.usid FROM CTE) AND PaymentProportions.Processor = 8;	

IF (OBJECT_ID('DF_ApplicationSettings_DefaultAvatarUrl', 'F') IS NOT NULL)
BEGIN
    ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_DefaultAvatarUrl
END

IF (OBJECT_ID('DF_ApplicationSettings_DefaultAvatarUrl', 'D') IS NOT NULL)
BEGIN
    ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_DefaultAvatarUrl
END

IF (OBJECT_ID('DF_ApplicationSettings_EmailHost', 'D') IS NOT NULL)
BEGIN
    ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_EmailHost
END

IF (OBJECT_ID('DF_ApplicationSettings_EmailUsername', 'D') IS NOT NULL)
BEGIN
    ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_EmailUsername
END

IF (OBJECT_ID('DF_ApplicationSettings_EmailPassword', 'D') IS NOT NULL)
BEGIN
    ALTER TABLE ApplicationSettings DROP CONSTRAINT DF_ApplicationSettings_EmailPassword
END


ALTER TABLE ApplicationSettings
ALTER COLUMN TransactionNote nvarchar(1000);

ALTER TABLE ApplicationSettings
ALTER COLUMN DefaultAvatarUrl nvarchar(200);

ALTER TABLE ApplicationSettings
ALTER COLUMN EmailHost nvarchar(100);

ALTER TABLE ApplicationSettings
ALTER COLUMN EmailUsername nvarchar(100);

ALTER TABLE ApplicationSettings
ALTER COLUMN EmailPassword nvarchar(100);

ALTER TABLE RefbackSites
ALTER COLUMN SiteName nvarchar(50);

ALTER TABLE PtcAdvertPacks
ADD MinUserBalance money NOT NULL DEFAULT 0;

ALTER TABLE PtcAdvertPacks
ADD MaxUserBalance money NOT NULL DEFAULT 99999;

ALTER TABLE Users
ADD CommissionToMainBalanceEnabled bit NOT NULL DEFAULT 0;

CREATE TABLE [dbo].AdPackTypes
(
	Id int PRIMARY KEY IDENTITY,
	Price money NOT NULL,
	AdBalanceReturnPercentage int NOT NULL,
	PackReturnValuePercentage int NOT NULL,
	MaxInstances int NOT NULL,
	Name nvarchar(50) NOT NULL,
	Number int NOT NULL,
	Color nvarchar(50) NOT NULL,
	MinNumberOfPreviousType int NOT NULL,
	Status int NOT NULL,
);

INSERT INTO AdPackTypes (Price, AdBalanceReturnPercentage, PackReturnValuePercentage, MaxInstances, Name, Number, Color, MinNumberOfPreviousType, Status)
SELECT PackPrice, 0, PackReturnValuePercent, 999999, 'Default', 0, '#0077b3', 0, 1 FROM ApplicationSettings;

ALTER TABLE AdPacks
ADD AdPackTypeId int NOT NULL DEFAULT 1;

CREATE TABLE [dbo].AdPackProfitDistributionHistory
(
	Id int PRIMARY KEY IDENTITY,
	[Date] DateTime NOT NULL,
	[Amount] money NOT NULL DEFAULT 0,
);

ALTER TABLE Messages
ADD FirstMessageId int NOT NULL DEFAULT 0;

ALTER TABLE Messages
ALTER COLUMN Text NVARCHAR(4000);

ALTER TABLE Messages
ADD FromSees bit NOT NULL DEFAULT 1;

ALTER TABLE Messages
ADD ToSees bit NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD RevShareFixedDistributionValuePercent int NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD RevShareFixedDistributionValue2Percent int NOT NULL DEFAULT 1;

CREATE TABLE [dbo].BlockioIPNs
(
	Id int PRIMARY KEY IDENTITY,
	OperationDate DateTime NOT NULL,
	OperationType int NOT NULL,
	Confirmations int,
	UserId int NOT NULL,
	TargetAddress nvarchar(50) NOT NULL,
	BitcoinAmount decimal(16,8),
	MoneyAmount Money,
	IsExecuted bit NOT NULL DEFAULT 0
);

ALTER TABLE ApplicationSettings
ADD PowerPacks varchar(30) NOT NULL DEFAULT '';

ALTER TABLE Users
ADD ReferrerId int NOT NULL DEFAULT -1;

GO

UPDATE Users 
SET 
Users.ReferrerId = (SELECT u.UserId FROM Users u WHERE Users.Referer = u.Username) WHERE (SELECT u.UserId FROM Users u WHERE Users.Referer = u.Username) IS NOT NULL;

DELETE FROM PtcAdvertGeolocations;

ALTER TABLE PtcAdverts
ADD GeolocatedCC varchar(MAX);

ALTER TABLE BalanceLogs
ADD BalanceLogType int NOT NULL DEFAULT 100;

GO

UPDATE BalanceLogs SET BalanceLogType =  1 WHERE Note = 'Cash Link advert';
UPDATE BalanceLogs SET BalanceLogType =  2 WHERE Note = 'CashLink';
UPDATE BalanceLogs SET BalanceLogType =  3 WHERE Note LIKE '%CashLink /ref/%';
UPDATE BalanceLogs SET BalanceLogType =  4 WHERE Note = (SELECT AdPackName FROM ApplicationSettings) + ' purchase';
UPDATE BalanceLogs SET BalanceLogType =  5 WHERE Note LIKE '%AdPack /ref/%';
UPDATE BalanceLogs SET BalanceLogType =  6 WHERE Note = (SELECT AdPackName FROM ApplicationSettings) + ' revenue';


GO  

CREATE PROCEDURE [dbo].AddClickToPtcAdvert   
    @AdvertId int   
AS   
    SET NOCOUNT ON;  
    UPDATE PtcAdverts
    SET Clicks = Clicks + 1  
    WHERE PtcAdvertId = @AdvertId
GO  

CREATE PROCEDURE [dbo].AddAdPackNormalBannerImpressions   
    @AdPacksAdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalNormalBannerImpressions = TotalNormalBannerImpressions + @Impressions  
	WHERE Id IN 
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId 
		ORDER BY PurchaseDate
	)

GO  

CREATE PROCEDURE [dbo].AddAdPackConstantBannerImpressions   
    @AdPacksAdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalConstantBannerImpressions = TotalConstantBannerImpressions + @Impressions  
	WHERE Id IN 
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId 
		ORDER BY PurchaseDate
	)

GO  

CREATE PROCEDURE [dbo].AddBannerImpressions   
    @AdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE BannerAdverts
    SET Clicks = Clicks + @Impressions  
	WHERE BannerAdvertId = @AdvertId
GO  

ALTER TABLE ApplicationSettings
ADD AdvertSurfAdsEnabled bit NOT NULL DEFAULT 0;

CREATE TABLE [dbo].SurfAdsPacks
(
	Id int PRIMARY KEY IDENTITY,
	Price money NOT NULL,
	Clicks int NOT NULL,
	Status int NOT NULL
);

GO

INSERT INTO SurfAdsPacks (Price, Clicks, Status)
VALUES (2, 1000, 1);


ALTER TABLE Users
ADD AccountStatusInt int NOT NULL DEFAULT 1;

GO

UPDATE Users SET Users.AccountStatusInt = 1 WHERE AccountStatus = 'Active';
UPDATE Users SET Users.AccountStatusInt = 2 WHERE AccountStatus = 'Inactive';
UPDATE Users SET Users.AccountStatusInt = 3 WHERE AccountStatus = 'Cancelled';
UPDATE Users SET Users.AccountStatusInt = 4 WHERE AccountStatus = 'Expired';
UPDATE Users SET Users.AccountStatusInt = 5 WHERE AccountStatus = 'BannedOfTos';
UPDATE Users SET Users.AccountStatusInt = 6 WHERE AccountStatus = 'BannedOfCheating';
UPDATE Users SET Users.AccountStatusInt = 7 WHERE AccountStatus = 'Locked';
UPDATE Users SET Users.AccountStatusInt = 8 WHERE AccountStatus = 'BannedBlacklisted';
UPDATE Users SET Users.AccountStatusInt = 9 WHERE AccountStatus = 'AwaitingSMSPIN';
UPDATE Users SET Users.AccountStatusInt = 10 WHERE AccountStatus = 'VacationMode';

GO

ALTER TABLE IPHistoryLogs 
ADD UserId int NOT NULL DEFAULT 0;

INSERT INTO [AntiCheatSystemRules]
	(RuleText, Enabled, RuleTypeInt) VALUES
	('Used the same IP', 0, 8),
	('Used the same IP on the same day', 0, 9);

ALTER TABLE Users 
ALTER COLUMN UserInfo varchar(MAX);

DELETE FROM AntiCheatSystemRules WHERE RuleTypeInt = 6;
DELETE FROM AntiCheatSystemRules WHERE RuleTypeInt = 4;
DELETE FROM AntiCheatSystemRules WHERE RuleTypeInt = 1;
DELETE FROM AntiCheatSystemRules WHERE RuleTypeInt = 7;
DELETE FROM AntiCheatSystemRules WHERE RuleTypeInt = 2;

GO

UPDATE IPHistoryLogs
SET IPHistoryLogs.UserId = (SELECT u.UserId FROM Users u WHERE IPHistoryLogs.Username = u.Username);

INSERT INTO [AntiCheatSystemRules]
	(RuleText, Enabled, RuleTypeInt) VALUES
	('Registered with the same IP', 0, 10);

UPDATE AntiCheatSystemRules
SET RuleText = 'Have the same payment address' WHERE RuleTypeInt = 5;

UPDATE AntiCheatSystemRules
SET RuleText = 'Used the same Facebook account' WHERE RuleTypeInt = 0;

ALTER TABLE ApplicationSettings
ADD AllowOnlyOneRegisteredIP bit NOT NULL DEFAULT 0;

UPDATE Users SET AccountStatus = 'Active' WHERE AccountStatusInt = 1;
UPDATE Users SET AccountStatus = 'Inactive' WHERE AccountStatusInt = 2;
UPDATE Users SET AccountStatus = 'Cancelled' WHERE AccountStatusInt = 3;
UPDATE Users SET AccountStatus = 'Expired' WHERE AccountStatusInt = 4;
UPDATE Users SET AccountStatus = 'BannedOfTos' WHERE AccountStatusInt = 5;
UPDATE Users SET AccountStatus = 'BannedOfCheating' WHERE AccountStatusInt = 6;
UPDATE Users SET AccountStatus = 'Locked' WHERE AccountStatusInt = 7;
UPDATE Users SET AccountStatus = 'BannedBlacklisted' WHERE AccountStatusInt = 8;
UPDATE Users SET AccountStatus = 'AwaitingSMSPIN' WHERE AccountStatusInt = 9;
UPDATE Users SET AccountStatus = 'VacationMode' WHERE AccountStatusInt = 10;

GO

ALTER TABLE Emails
ADD Note nvarchar(100);

ALTER TABLE Emails
ADD StatusInt int NOT NULL DEFAULT 2;

GO

ALTER TABLE Emails
ALTER COLUMN Body nvarchar(MAX);

GO

ALTER TABLE ApplicationSettings
ADD IsCustomCounterEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD CustomCounterTitle nvarchar(200) NOT NULL DEFAULT 'We will officially launch in'

ALTER TABLE ApplicationSettings
ADD CustomCounterDeadLine DateTime NOT NULL DEFAULT GetDate();

GO

ALTER TABLE ApplicationSettings
ADD DirectReferralExpiration int NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD DirectReferralExpirationEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD SplashPageEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings ADD SplashPageYoutubeUrl nvarchar(100) NOT NULL default '';

ALTER TABLE ApplicationSettings ADD SplashPageSlogan nvarchar(100) NOT NULL default '';

GO

CREATE TABLE [dbo].ReferralsBanners
(
	Id int PRIMARY KEY IDENTITY,
	BannerUrl nvarchar(512) NULL
);

INSERT INTO ReferralsBanners (BannerUrl)  
SELECT BannerLoc1 FROM ApplicationSettings;

INSERT INTO ReferralsBanners (BannerUrl)  
SELECT BannerLoc2 FROM ApplicationSettings;

GO

ALTER TABLE SolidTrustPayGateways
ADD PaymentButtonName nvarchar(100);

GO

ALTER TABLE ApplicationSettings
ADD NewReferralEmailMessage nvarchar(MAX) NOT NULL DEFAULT 'Dear %Username%,

You just gained a new direct referral: <b>%ReferralUsername%</b>. 

Regards, %Sitename% team
';

GO

ALTER TABLE ApplicationSettings
ADD NewReferralCommisionEmailMessage nvarchar(MAX) NOT NULL DEFAULT 'Dear %Username%,

You just gained a commision (<b>%Commision%</b>) from your direct referral %ReferralUsername%. 

Regards, %Sitename% team
';

GO

ALTER TABLE ApplicationSettings
ADD NewReferralCommisionEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD NewReferralEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Emails ALTER COLUMN FromName nvarchar(100);
ALTER TABLE Emails ALTER COLUMN FromEmail  nvarchar(100);
ALTER TABLE Emails ALTER COLUMN ToName  nvarchar(100);
ALTER TABLE Emails ALTER COLUMN ToEmail  nvarchar(100);
ALTER TABLE Emails ALTER COLUMN Subject  nvarchar(100);
ALTER TABLE Emails ALTER COLUMN Note  nvarchar(300);

GO

ALTER TABLE Memberships 
ADD PTCCreditsPerView decimal(16,2) NOT NULL DEFAULT 0;

ALTER TABLE Memberships 
ADD PTCPurchaseCommissionPercent int NOT NULL DEFAULT 0;

GO

ALTER TABLE PtcAdvertCategories
ADD Status int NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD PTCCategoryPolicy INT NOT NULL DEFAULT 0;

GO

UPDATE ApplicationSettings SET PTCCategoryPolicy = (SELECT  CAST(ExposureCategoriesEnabled  AS int) FROM ApplicationSettings);

GO

ALTER TABLE Users
ADD PTCCredits decimal(16,2) NOT NULL DEFAULT 0;

CREATE TABLE [dbo].PtcAdvertDimensions
(
	Id int PRIMARY KEY IDENTITY,
	Width int NOT NULL DEFAULT 207,
	Height int NOT NULL DEFAULT 73,
	Price money NOT NULL DEFAULT 0,
	Status int NOT NULL DEFAULT 2
);

GO

INSERT INTO PtcAdvertDimensions (Price, Width, Height, Status)
VALUES(0, 207, 73, 1);

GO

ALTER TABLE PtcAdverts
ADD BackgroundColor nvarchar(30) NOT NULL DEFAULT '#42b825';

ALTER TABLE PtcAdverts
ADD PtcAdvertDimensionsId int NOT NULL DEFAULT 1;

ALTER TABLE PtcAdverts
ADD StartPageDate DateTime NULL;

ALTER TABLE ApplicationSettings
ADD PTCStartPagePrice money NOT NULL DEFAULT 5;

ALTER TABLE ApplicationSettings
ADD PTCBackgroundPrice money NOT NULL DEFAULT 1;

ALTER TABLE ApplicationSettings
ADD PTCDefaultBackground nvarchar(30) NOT NULL DEFAULT '#42b825';

ALTER TABLE ApplicationSettings
ADD PTCStartPageEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE ApplicationSettings
ADD PTCCreditsEnabled bit NOT NULL DEFAULT 0;

ALTER TABLE PtcAdvertPacks
ADD PTCCreditsPerDayOrClick decimal(16,2) NOT NULL DEFAULT 2;

ALTER TABLE ApplicationSettings
ADD PTCDefaultCaptchaQuestion nvarchar(1000) NOT NULL DEFAULT 'This is a default Yes/No captcha question. Change it to meet your requirements.';

ALTER TABLE PtcAdverts
ADD CaptchaQuestion nvarchar(1000) NOT NULL DEFAULT 'This is a default Yes/No captcha question. Change it to meet your requirements.';

ALTER TABLE PtcAdverts
ADD CaptchaYesAnswers int NOT NULL DEFAULT 0;

ALTER TABLE PtcAdverts
ADD CaptchaNoAnswers int NOT NULL DEFAULT 0;

ALTER TABLE PtcAdverts
ADD GeolocatedAgeMin int NOT NULL DEFAULT 0;

ALTER TABLE PtcAdverts
ADD GeolocatedAgeMax int NOT NULL DEFAULT 0;

ALTER TABLE PtcAdverts
ADD GeolocatedGender int NOT NULL DEFAULT 0;

GO

ALTER TABLE [dbo].ApplicationSettings
ADD BalanceLogsKeptForDays int NOT NULL default 10;

ALTER TABLE [dbo].ApplicationSettings
ADD HistoryLogsKeptForDays int NOT NULL default 10;

ALTER TABLE [dbo].ApplicationSettings
ADD IPHistoryLogsKeptForDays int NOT NULL default 14;

ALTER TABLE [dbo].ApplicationSettings
ADD OfferwallsLogsKeptForDays int NOT NULL default 100;

ALTER TABLE [dbo].ApplicationSettings
ADD PostBackLogsKeptForDays int NOT NULL default 100;

GO

ALTER TABLE [dbo].ApplicationSettings
ADD TransferMainInAdBalanceEnabled bit NOT NULL default 1;

GO

ALTER TABLE UserInvestments
ADD CONSTRAINT FK_UserInvestments
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE UserBets
ADD CONSTRAINT FK_UserBets
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE TrafficGridTopWinners 
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE TrafficGridTopWinners
ADD CONSTRAINT FK_TrafficGridTopWinners
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE TrafficGridLatestWinners 
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE TrafficGridLatestWinners
ADD CONSTRAINT FK_TrafficGridLatestWinners
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE TrafficExchangeViews
ADD CONSTRAINT FK_TrafficExchangeViews
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE SiteInvestments
ADD CONSTRAINT FK_SiteInvestments
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE ShoutboxMessages 
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE ShoutboxMessages
ADD CONSTRAINT FK_ShoutboxMessages
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE ShoutboxBannedUsernames
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE ShoutboxBannedUsernames
ADD CONSTRAINT FK_ShoutboxBannedUsernames
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE SharesOnMarket
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE SharesOnMarket
ADD CONSTRAINT FK_SharesOnMarket
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE ResetPasswordRequests
ADD CONSTRAINT FK_ResetPasswordRequests
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE ResetPasswordRequests
ADD CONSTRAINT FK_ResetPasswordRequests
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE RefbackDeclarations
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE RefbackDeclarations
ADD CONSTRAINT FK_RefbackDeclarations
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE PayoutRequests
ADD CONSTRAINT FK_PayoutRequests
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE PaymentProportions
ADD CONSTRAINT FK_PaymentProportions
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE PaymentProofs
ADD CONSTRAINT FK_PaymentProofs
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE OfferwallsLogs
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE OfferwallsBlocked
ADD CONSTRAINT FK_OfferwallsBlocked
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE OfferRegisterEntries
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE OfferRegisterEntries
ADD CONSTRAINT FK_OfferRegisterEntries
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE Messages
ALTER COLUMN FromUsername nvarchar(50) NOT NULL;

GO

ALTER TABLE Messages
ALTER COLUMN ToUsername nvarchar(50) NOT NULL;

GO

ALTER TABLE Messages
ADD CONSTRAINT FK_MessagesFrom
FOREIGN KEY (FromUsername)
REFERENCES Users(Username);

GO

ALTER TABLE Messages
ADD CONSTRAINT FK_MessagesTo
FOREIGN KEY (ToUsername)
REFERENCES Users(Username);

GO

ALTER TABLE MemberBurnCards
ADD CONSTRAINT FK_MemberBurnCards
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE JackpotTickets
ADD CONSTRAINT FK_JackpotTickets
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE IPHistoryLogs
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE IPHistoryLogs
ADD CONSTRAINT FK_IPHistoryLogs
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE IncomingPayments
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE IncomingPayments
ADD CONSTRAINT FK_IncomingPayments
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE History
ALTER COLUMN AssignedUsername nvarchar(50) NOT NULL;

GO

ALTER TABLE History
ADD CONSTRAINT FK_History
FOREIGN KEY (AssignedUsername)
REFERENCES Users(Username);

GO

ALTER TABLE GitCodeRequests
ADD CONSTRAINT FK_GitCodeRequests
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE Friends
ALTER COLUMN Who1 nvarchar(50) NOT NULL;

GO

ALTER TABLE Friends
ALTER COLUMN Who2 nvarchar(50) NOT NULL;

GO

ALTER TABLE Friends
ADD CONSTRAINT FK_Friends1
FOREIGN KEY (Who1)
REFERENCES Users(Username);

GO

ALTER TABLE Friends
ADD CONSTRAINT FK_Friends2
FOREIGN KEY (Who2)
REFERENCES Users(Username);

GO

ALTER TABLE dicegamehashes
ADD CONSTRAINT FK_dicegamehashes
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE CrowdflowerTasks
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE CrowdflowerTasks
ADD CONSTRAINT FK_CrowdflowerTasks
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE CPAReports
ALTER COLUMN ReportingUsername nvarchar(50) NOT NULL;

GO

ALTER TABLE CPAReports
ADD CONSTRAINT FK_CPAReports
FOREIGN KEY (ReportingUsername)
REFERENCES Users(Username);

GO

ALTER TABLE CPAPostBackLogs
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE CPAPostBackLogs
ADD CONSTRAINT FK_CPAPostBackLogs
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE ContestParticipants
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE ContestParticipants
ADD CONSTRAINT FK_ContestParticipants
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE CoAdministrators
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE CharityDontations
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE CharityDontations
ADD CONSTRAINT FK_CharityDontations
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE CandidatesToBan
ADD CONSTRAINT FK_CandidatesToBan
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE BlockioIPNs
ADD CONSTRAINT FK_BlockioIPNs
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE BitcoinAddresses
ADD CONSTRAINT FK_BitcoinAddresses
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE BannerBids
ALTER COLUMN Username nvarchar(50) NOT NULL;

GO

ALTER TABLE BannerBids
ADD CONSTRAINT FK_BannerBids
FOREIGN KEY (Username)
REFERENCES Users(Username);

GO

ALTER TABLE BalanceLogs
ADD CONSTRAINT FK_BalanceLogs
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE ApplicationSettings
ADD PTCCaptchaQuestionPrice money NOT NULL DEFAULT 5;

GO

ALTER TABLE Users
ALTER COLUMN FirstName nvarchar(100);

ALTER TABLE Users
ALTER COLUMN SecondName nvarchar(100);

ALTER TABLE Users
ALTER COLUMN Address nvarchar(100);

ALTER TABLE Users
ALTER COLUMN City nvarchar(50);

GO

ALTER TABLE Users
ALTER COLUMN PayPalEmail nvarchar(100);

ALTER TABLE Users
ALTER COLUMN PayzaEmail nvarchar(100);

GO

ALTER TABLE ApplicationSettings
ADD PtcPriceBasedOnTotalActiveMembersEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD PointsYourPTCAdBeingViewed int NOT NULL DEFAULT 1;

GO

ALTER TABLE Memberships
ADD PointsPer1000viewsDeliveredToPoolRotator int NOT NULL DEFAULT 10;

GO

ALTER TABLE Memberships
ADD PointsPerNewReferral int NOT NULL DEFAULT 10;

GO

ALTER TABLE Memberships
ADD AutosurfViewLimitMonth int NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MinAdsWatchedMonthlyToKeepYourLevel int NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MinPointsToHaveThisLevel int NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD StarredAdsEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD StarredAdsPrice money NOT NULL DEFAULT 1;

GO

ALTER TABLE PtcAdverts
ADD IsStarredAd bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MaxActivePtcCampaignLimit int NOT NULL DEFAULT 100;

GO

ALTER TABLE ApplicationSettings
ADD FeedbackCaptchaEnabled bit NOT NULL DEFAULT 0;

GO

CREATE PROCEDURE [dbo].AddClickToPtcAdvertWithFeedback   
    @AdvertId int,
	@yes int,   
	@no int      
AS   
    SET NOCOUNT ON;  
    UPDATE PtcAdverts
    SET Clicks = Clicks + 1, CaptchaYesAnswers = CaptchaYesAnswers + @yes, CaptchaNoAnswers = CaptchaNoAnswers + @no
    WHERE PtcAdvertId = @AdvertId
GO  

ALTER TABLE ApplicationSettings
ADD DisableMoneyEarningsInPTC bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD LevelMembershipPolicyEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ShowAdvertiserAvatar bit NOT NULL DEFAULT 0;

GO


CREATE TABLE [dbo].AdminPanelLoginLogs
(
	Id int PRIMARY KEY IDENTITY,
	LoginDate datetime NOT NULL,
	LoginUsername varchar(100) NOT NULL,
	LoginIP varchar(100) NOT NULL
);

GO

CREATE TABLE [dbo].FavouriteAds
(
	Id int PRIMARY KEY IDENTITY,
	AdvertId int NOT NULL,
	UserId int NOT NULL,
	AdvertType int NOT NULL DEFAULT 0
);

GO

ALTER TABLE ApplicationSettings
ADD FavoriteAdsEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE PtcAdverts
ADD AdvertiserUserId int;

GO

UPDATE PtcAdverts SET PtcAdverts.AdvertiserUserId = (SELECT u.UserId FROM Users u WHERE PtcAdverts.CreatorUsername = u.Username) WHERE PtcAdverts.CreatedBy = 1;

GO

ALTER TABLE Users
ADD IsNewLevelSpotted bit NOT NULL DEFAULT 1;

GO

-----Excecuted for cohits.com
ALTER TABLE ApplicationSettings
ADD PTCCaptchaQuestionPrice money NOT NULL DEFAULT 5;

GO

ALTER TABLE Users
ALTER COLUMN FirstName nvarchar(100);

ALTER TABLE Users
ALTER COLUMN SecondName nvarchar(100);

ALTER TABLE Users
ALTER COLUMN Address nvarchar(100);

ALTER TABLE Users
ALTER COLUMN City nvarchar(50);

GO

ALTER TABLE Users
ALTER COLUMN PayPalEmail nvarchar(100);

ALTER TABLE Users
ALTER COLUMN PayzaEmail nvarchar(100);

GO

ALTER TABLE ApplicationSettings
ADD PtcPriceBasedOnTotalActiveMembersEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD PointsYourPTCAdBeingViewed int NOT NULL DEFAULT 1;

GO

ALTER TABLE Memberships
ADD PointsPer1000viewsDeliveredToPoolRotator int NOT NULL DEFAULT 10;

GO

ALTER TABLE Memberships
ADD PointsPerNewReferral int NOT NULL DEFAULT 10;

GO

ALTER TABLE Memberships
ADD AutosurfViewLimitMonth int NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MinAdsWatchedMonthlyToKeepYourLevel int NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MinPointsToHaveThisLevel int NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD StarredAdsEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD StarredAdsPrice money NOT NULL DEFAULT 1;

GO

ALTER TABLE PtcAdverts
ADD IsStarredAd bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MaxActivePtcCampaignLimit int NOT NULL DEFAULT 100;

GO

ALTER TABLE ApplicationSettings
ADD FeedbackCaptchaEnabled bit NOT NULL DEFAULT 0;

GO

CREATE PROCEDURE [dbo].AddClickToPtcAdvertWithFeedback   
    @AdvertId int,
	@yes int,   
	@no int      
AS   
    SET NOCOUNT ON;  
    UPDATE PtcAdverts
    SET Clicks = Clicks + 1, CaptchaYesAnswers = CaptchaYesAnswers + @yes, CaptchaNoAnswers = CaptchaNoAnswers + @no
    WHERE PtcAdvertId = @AdvertId
GO  

ALTER TABLE ApplicationSettings
ADD DisableMoneyEarningsInPTC bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD LevelMembershipPolicyEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ShowAdvertiserAvatar bit NOT NULL DEFAULT 0;

GO


CREATE TABLE [dbo].AdminPanelLoginLogs
(
	Id int PRIMARY KEY IDENTITY,
	LoginDate datetime NOT NULL,
	LoginUsername varchar(100) NOT NULL,
	LoginIP varchar(100) NOT NULL
);

GO

CREATE TABLE [dbo].FavouriteAds
(
	Id int PRIMARY KEY IDENTITY,
	AdvertId int NOT NULL,
	UserId int NOT NULL,
	AdvertType int NOT NULL DEFAULT 0
);

GO

ALTER TABLE ApplicationSettings
ADD FavoriteAdsEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE PtcAdverts
ADD AdvertiserUserId int;

GO

UPDATE PtcAdverts SET PtcAdverts.AdvertiserUserId = (SELECT u.UserId FROM Users u WHERE PtcAdverts.CreatorUsername = u.Username) WHERE PtcAdverts.CreatedBy = 1;

GO

ALTER TABLE Users
ADD IsNewLevelSpotted bit NOT NULL DEFAULT 1;

GO

-----Excecuted for cohits.com


----GENE 23.09.2016
--COINPAYMENTS

ALTER TABLE ApplicationSettings
ADD CoinPaymentsApiKey nvarchar(255) NULL;

GO

ALTER TABLE ApplicationSettings
ADD CoinPaymentsSecretPIN nvarchar(255) NULL;

GO

ALTER TABLE ApplicationSettings
ADD CoinPaymentsYourMerchantID nvarchar(255) NULL;

GO

ALTER TABLE ApplicationSettings
ADD CoinPaymentsIPNSecret nvarchar(255) NULL;

GO

ALTER TABLE BitcoinAddresses
ADD CoinPaymentsAddress nvarchar(255) NULL;

GO

ALTER TABLE BlockioIPNs
ADD BitcoinAPIProvider int NOT NULL default 2;

GO

ALTER TABLE ApplicationSettings
ADD BitcoinCachedPrice money NOT NULL default 1000;

GO

CREATE TABLE [dbo].MarketplaceProducts
(
	Id int PRIMARY KEY IDENTITY,
    SellerId int NOT NULL, 
    Title nvarchar(50) NOT NULL,
    Description nvarchar(500) NULL,
	Price money NOT NULL DEFAULT 0,
	Quantity int NOT NULL,
    ImagePath nvarchar(800) NULL,
    Contact nvarchar(100) NOT NULL,
    CategoryId int NOT NULL,
	Status int NOT NULL,
	Sold int NOT NULL
);

GO

CREATE TABLE [dbo].MarketplaceCategories
(
	Id int PRIMARY KEY IDENTITY,
    Title nvarchar(50) NOT NULL,
	Status int NOT NULL
);

GO

CREATE TABLE [dbo].MarketplaceIPNs
(
	Id int PRIMARY KEY IDENTITY,
    BuyerId int NOT NULL,
    Status int NOT NULL,
	ProductId int NOT NULL,
	ProductQuantity int NOT NULL,
    DateAdded datetime NOT NULL,
    Hash nvarchar(max) NOT NULL
);

GO

ALTER TABLE MarketplaceProducts
ADD CONSTRAINT FK_MarketplaceProducts
FOREIGN KEY (SellerId)
REFERENCES Users(UserId);

GO

ALTER TABLE MarketplaceProducts
ADD CONSTRAINT FK_MarketplaceCategories
FOREIGN KEY (CategoryId)
REFERENCES MarketplaceCategories(CategoryId);

GO

--PAYMENT PROC
--payeer
ALTER TABLE PayeerGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE PayeerGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO


--solid trust pay
ALTER TABLE SolidTrustPayGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE SolidTrustPayGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO

--PerfectMoneyGateways
ALTER TABLE PerfectMoneyGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE PerfectMoneyGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO

--PayPalGateways
ALTER TABLE PayPalGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE PayPalGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO

--PayzaGateways
ALTER TABLE PayzaGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE PayzaGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO

ALTER TABLE Users ADD VerificationDocumentUrl nvarchar(max) NULL;

GO

--MAX GLOBAL PAYOUT
ALTER TABLE Memberships
ADD MaxGlobalCashout money NOT NULL DEFAULT 15000;

GO

--Required membership
ALTER TABLE AdPackTypes
ADD RequiredMembership int NOT NULL default 1;

GO

ALTER TABLE ApplicationSettings
ADD IsDocumentVerificationEnabled bit not null default 0;


--VERIFICATION DOCUMENT
ALTER TABLE Users ADD VerificationStatusInt int NOT NULL default 0;

GO

ALTER TABLE AdPackTypes 
ADD Clicks int NOT NULL DEFAULT 1;

GO

UPDATE AdPackTypes SET Clicks = (SELECT PackPTCs FROM ApplicationSettings);

GO

ALTER TABLE AdPackTypes 
ADD DisplayTime int NOT NULL DEFAULT 1;

GO

UPDATE AdPackTypes SET DisplayTime = (SELECT PackPTCDurationInSeconds FROM ApplicationSettings);

GO

ALTER TABLE AdPackTypes 
ADD NormalBannerImpressions int NOT NULL DEFAULT 1;

GO

UPDATE AdPackTypes SET NormalBannerImpressions = (SELECT PackNormalBannerImpressions FROM ApplicationSettings);

GO

ALTER TABLE AdPackTypes 
ADD ConstantBannerImpressions int NOT NULL DEFAULT 1;

GO

UPDATE AdPackTypes SET ConstantBannerImpressions = (SELECT PackConstantBannerImpressions FROM ApplicationSettings);

GO

ALTER TABLE SurfAdsPacks
ADD DisplayTime int NOT NULL DEFAULT 0;

GO

UPDATE SurfAdsPacks SET DisplayTime = (SELECT PackPTCDurationInSeconds FROM ApplicationSettings);

GO

ALTER TABLE AdPacks
ADD DisplayTime int NOT NULL DEFAULT 0;

GO

UPDATE AdPacks SET DisplayTime = (SELECT PackPTCDurationInSeconds FROM ApplicationSettings);

GO

ALTER TABLE AdPackTypes
ADD ValueOf1SecondInClicks int NOT NULL DEFAULT 1000;

GO

ALTER TABLE ApplicationSettings
ADD IsTimeClickExchangeEnabled bit NOT NULL DEFAULT 'false';

GO

ALTER TABLE Memberships
ADD MaxExtraAdPackSecondsForClicks int NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD BuyAdPacksDirectlyFromPaymentProcessorOnly bit NOT NULL DEFAULT 'false';

GO

ALTER TABLE ApplicationSettings 
ADD CommissionToAdBalanceEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE AdPackTypes
ADD CustomGroupsEnabled bit NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].ReferralLeadershipLevels
(
	Id int PRIMARY KEY IDENTITY,
	IndirectReferrals int NOT NULL DEFAULT 1000,
	DirectReferrals int NOT NULL DEFAULT 100,
	TeamPartners int NOT NULL DEFAULT 5,
	TotalTimeConstraintDays int NOT NULL DEFAULT 120,
	NumberOfSubTimeConstraints int NOT NULL DEFAULT 4,
	TotalTeamDeposits money NOT NULL DEFAULT 10000,
	TeamDepositsPerSubTime money NOT NULL DEFAULT 2000,
	Name nvarchar(30) NOT NULL DEFAULT 'Diamond',
	Reward money NOT NULL DEFAULT 10000,
	Number int NOT NULL DEFAULT 1,
	NextNumber int NOT NULL DEFAULT 1
);

GO

ALTER TABLE Users 
ADD LeadershipLevelId int NOT NULL DEFAULT -1;

GO

ALTER TABLE Users
ADD LeadershipResetTime DateTime NOT NULL DEFAULT GETDATE();

GO


ALTER TABLE ApplicationSettings 
ADD AdvertMarketplaceEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD RevShareCustomGroupRewardsEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE CustomGroups 
ADD CreatorsMaxNumberOfAdPacks int NOT NULL DEFAULT 1000000;

GO

ALTER TABLE CustomGroups 
ADD UsersMaxNumberOfAdPacks int NOT NULL DEFAULT 1000000;

GO

ALTER TABLE CustomGroups 
ADD CreatorRewardBonusPercent int NOT NULL DEFAULT 0;

GO

ALTER TABLE CustomGroups 
ADD FirstRewardPercent int NOT NULL DEFAULT 0;

GO

ALTER TABLE CustomGroups 
ADD SecondRewardPercent int NOT NULL DEFAULT 0;

GO

ALTER TABLE CompletedTransactions
ADD UserId int NOT NULL DEFAULT -1;

GO

UPDATE
    CompletedTransactions
SET
    CompletedTransactions.UserId = (SELECT UserId FROM Users WHERE Username = CompletedTransactions.Username);

GO

ALTER TABLE ApplicationSettings
ADD ReferralsLeadershipEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD  EnableAdvertAutoApproval bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD CreditLineMaxAmountToBorrow money NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD CreditLineFinalDeadlineDays int NOT NULL DEFAULT 30;

GO

ALTER TABLE ApplicationSettings
ADD CreditLineFirstDeadlineDays int NOT NULL DEFAULT 10;

GO

ALTER TABLE ApplicationSettings
ADD CreditLineSecondDeadlineDays int NOT NULL DEFAULT 20;

GO

ALTER TABLE ApplicationSettings
ADD CreditLineFirstRepayPercent int NOT NULL DEFAULT 30;

GO

ALTER TABLE ApplicationSettings
ADD CreditLineSecondRepayPercent int NOT NULL DEFAULT 70;

GO

CREATE TABLE [dbo].CreditLineLoans
(
	Id int PRIMARY KEY IDENTITY,
	UserId int NOT NULL,
	Loaned money NOT NULL,
	Repaid money NOT NULL DEFAULT 0,
	FirstDeadline DateTime NOT NULL,
	SecondDeadline DateTime NOT NULL,
	FinalDeadline DateTime NOT NULL,
	AmounBeforeFirstDeadline money NOT NULL,
	AmounBeforeSecondDeadline money NOT NULL,
	BorrowDate DateTime NOT NULL,
);

GO

ALTER TABLE ApplicationSettings
ADD MoneyCreditLineEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE OfferWalls
ADD  CreditPercentage int NOT NULL DEFAULT 100;

GO

UPDATE PtcAdverts SET AdvertiserUserId = -1 WHERE AdvertiserUserId IS NULL;

GO

ALTER TABLE PtcAdverts ADD CONSTRAINT DF_PtcAdverts DEFAULT -1 FOR AdvertiserUserId;

GO

ALTER TABLE History
DROP CONSTRAINT FK_History

GO

UPDATE Users SET LeadershipResetTime = GETDATE();

GO

UPDATE Users SET LeadershipLevelId = -1;

ALTER TABLE ApplicationSettings
ADD ReferralPoolRotatorEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ReferralPoolRotatorPricePerMonth money NOT NULL DEFAULT 10;


GO

CREATE TABLE [dbo].PoolRotatorLinkUsers(
	Id int PRIMARY KEY IDENTITY,
	UserId int NOT NULL,
	Expires datetime NOT NULL,
	ClicksDelivered int NOT NULL,
	ReferralsDelivered int NOT NULL,
	IsActive bit NOT NULL DEFAULT 1
);

GO

ALTER TABLE ApplicationSettings
ADD ReferralPoolRotatorPricePerMonthInAdCredits decimal(16,2) NOT NULL DEFAULT 0;

GO
ALTER TABLE Users
ADD PtcSurfClicksThisMonth int NOT NULL DEFAULT 0;

GO

ALTER TABLE PtcAdverts
ADD PointsEarnedFromViews int NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD BasePricePer1000ViewsPtc money NOT NULL DEFAULT 0.5;

GO

ALTER TABLE ApplicationSettings
ADD DynamicPTCPriceEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD DecimalPricePer1000ViewsPtc int NOT NULL DEFAULT 10000;

GO

CREATE PROCEDURE [dbo].AddBannerImpressions   
    @AdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE BannerAdverts
    SET Clicks = Clicks + @Impressions  
	WHERE BannerAdvertId = @AdvertId
GO 

CREATE PROCEDURE [dbo].AddAdPackConstantBannerImpressions   
    @AdPacksAdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalConstantBannerImpressions = TotalConstantBannerImpressions + @Impressions  
	WHERE Id IN 
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId 
		ORDER BY PurchaseDate
	)

GO

CREATE PROCEDURE [dbo].AddAdPackNormalBannerImpressions   
    @AdPacksAdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalNormalBannerImpressions = TotalNormalBannerImpressions + @Impressions  
	WHERE Id IN 
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId 
		ORDER BY PurchaseDate
	)

GO 

CREATE PROCEDURE [dbo].AddClickToPtcAdvert   
    @AdvertId int   
AS   
    SET NOCOUNT ON;  
    UPDATE PtcAdverts
    SET Clicks = Clicks + 1  
    WHERE PtcAdvertId = @AdvertId
GO 

CREATE PROCEDURE [dbo].AddClickToPtcAdvertWithFeedback   
    @AdvertId int,
	@yes int,   
	@no int      
AS   
    SET NOCOUNT ON;  
    UPDATE PtcAdverts
    SET Clicks = Clicks + 1, CaptchaYesAnswers = CaptchaYesAnswers + @yes, CaptchaNoAnswers = CaptchaNoAnswers + @no
    WHERE PtcAdvertId = @AdvertId
 
GO  


ALTER TABLE History
DROP CONSTRAINT FK_History

GO

CREATE TABLE [dbo].CustomSplashPages(
	Id int PRIMARY KEY IDENTITY,
	UserId int NOT NULL,
	BackgroundImage varchar(150),
	Text nvarchar(MAX)
);

 GO

ALTER TABLE Memberships
 ADD LevelChanceToWinAnyAward int NOT NULL DEFAULT 30;

 GO

 ALTER TABLE Memberships
 ADD LevelPointsPrizeChance int NOT NULL DEFAULT 40;

 GO

 ALTER TABLE Memberships
 ADD LevelPointsPrizeMin int NOT NULL DEFAULT 1;

 GO

 ALTER TABLE Memberships
 ADD LevelPointsPrizeMax int NOT NULL DEFAULT 500;

 GO

 ALTER TABLE Memberships
 ADD LevelAdCreditsChance int NOT NULL DEFAULT 40;

 GO

 ALTER TABLE Memberships
 ADD LevelAdCreditsMin int NOT NULL DEFAULT 1;

 GO

 ALTER TABLE Memberships
 ADD LevelAdCreditsMax int NOT NULL DEFAULT 100;

 GO

  ALTER TABLE Memberships
 ADD LevelDRLimitIncreasedChance int NOT NULL DEFAULT 20;

 GO

 ALTER TABLE Memberships
 ADD LevelDRLimitIncreasedMin int NOT NULL DEFAULT 1;

 GO

 ALTER TABLE Memberships
 ADD LevelDRLimitIncreasedMax int NOT NULL DEFAULT 3;

 GO

ALTER TABLE Users
ADD PtcAutoSurfClicksThisMonth int NOT NULL DEFAULT 0;

GO

ALTER TABLE AdPackTypes
ADD FixedDistributionValuePercent DECIMAL(4,1) NOT NULL DEFAULT 0;

GO

ALTER TABLE AdPackTypes
ADD FixedDistributionValuePercent2 DECIMAL(4,1) NOT NULL DEFAULT 0;

GO

UPDATE AdPackTypes SET FixedDistributionValuePercent = (SELECT RevShareFixedDistributionValuePercent FROM ApplicationSettings);

GO

UPDATE AdPackTypes SET FixedDistributionValuePercent2 = (SELECT RevShareFixedDistributionValue2Percent FROM ApplicationSettings);

GO

UPDATE
    CompletedTransactions
SET
    CompletedTransactions.UserId = (SELECT UserId FROM Users WHERE Username = CompletedTransactions.Username);

GO

ALTER TABLE ApplicationSettings
ADD AdPackNormalPaymentButtonEnabled bit NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD AdPackProcessorButtonEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD UpgradeNormalPaymentButtonEnabled bit NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD UpgradeProcessorButtonEnabled bit NOT NULL DEFAULT 0;

GO

UPDATE PtcAdverts SET PtcAdvertDimensionsId = (SELECT TOP 1 Id FROM PtcAdvertDimensions WHERE Status = 1) WHERE PtcAdvertDimensionsId = 0;

GO

UPDATE Users SET LeadershipResetTime = GETDATE();

GO

UPDATE Users SET LeadershipLevelId = -1;

GO

ALTER TABLE Memberships DROP CONSTRAINT DF__Membershi__Numbe__4D4A6ED8;

GO

ALTER TABLE Memberships DROP Column NumberOfLevelUpRewards;

GO

CREATE TABLE [dbo].PtcAdvertBgColors(
	Id int PRIMARY KEY IDENTITY,
	BgColor nvarchar(30) NOT NULL DEFAULT '#42b825',
	Price money NOT NULL DEFAULT 0,
	Status int NOT NULL DEFAULT 1
);

GO

INSERT INTO PtcAdvertBgColors VALUES('#42b825', 0, 1);

GO

ALTER TABLE ApplicationSettings DROP CONSTRAINT DF__Applicati__PTCBa__150615B5;

GO

ALTER TABLE ApplicationSettings DROP COLUMN PTCBackgroundPrice;

GO

ALTER TABLE ApplicationSettings DROP CONSTRAINT DF__Applicati__PTCDe__15FA39EE;

GO

ALTER TABLE ApplicationSettings DROP COLUMN PTCDefaultBackground;

GO

CREATE TABLE [dbo].DirectReferralPacks(
Id int PRIMARY KEY IDENTITY,
Price money NOT NULL,
NumberOfRefs int NOT NULL,
Days int NOT NULL,
Status int NOT NULL,
);

GO

ALTER TABLE ApplicationSettings
ADD DirectReferralBuyingEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Users 
ADD ReferrerExpirationDate DateTime NULL;

GO

ALTER TABLE ApplicationSettings 
ADD AdminUserId INT NOT NULL DEFAULT 1005;

GO

UPDATE ApplicationSettings SET AdminUserId = (SELECT UserId FROM Users WHERE UserName = AdminUsername);

GO

CREATE TABLE [dbo].CreditLineRequests(
Id INT PRIMARY KEY IDENTITY,
UserId INT NOT NULL,
LoanRequested MONEY NOT NULL,
RequestDate DATETIME NOT NULL,
STATUS INT NOT NULL,
)

GO

ALTER TABLE FamobiGames
ALTER COLUMN AspectRatio varchar(10);

GO

UPDATE ApplicationSettings
SET AdBlockPolicy = 1;

GO

ALTER TABLE Users
ALTER COLUMN LastUsedIP varchar(39);

GO

ALTER TABLE Users
ALTER COLUMN RegisteredWithIP varchar(39);

GO
ALTER TABLE ApplicationSettings
ADD RegistrationDiscountEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD RegistrationDiscountValue INT NOT NULL DEFAULT 10;

GO

ALTER TABLE ApplicationSettings
ADD RegistrationDiscountStartDate DATETIME NOT NULL DEFAULT GETDATE();

GO

ALTER TABLE ApplicationSettings
ADD RegistrationDiscountDays INT NOT NULL DEFAULT 15;

GO

CREATE TABLE [dbo].Pools(
Id INT PRIMARY KEY IDENTITY,
Name NVARCHAR(40) NOT NULL,
Status INT NOT NULL,
);

GO

BEGIN
   IF NOT EXISTS (SELECT * FROM Pools 
                   WHERE Name = 'Administrator Profit')
   BEGIN
       INSERT INTO Pools (Name, Status)
       VALUES ('Administrator Profit', 1)
   END
END

GO

BEGIN
   IF NOT EXISTS (SELECT * FROM Pools 
                   WHERE Name = 'AdPack Profit Distribution')
   BEGIN
       INSERT INTO Pools (Name, Status)
       VALUES ('AdPack Profit Distribution', 1)
   END
END

GO

BEGIN
   IF NOT EXISTS (SELECT * FROM Pools 
                   WHERE Name = 'Credit Line')
   BEGIN
       INSERT INTO Pools (Name, Status)
       VALUES ('Credit Line', 1)
   END
END


GO

UPDATE ProfitPoolDistribution SET Pool = (SELECT Id FROM Pools WHERE Name = 'Credit Line') WHERE Pool = 2;

GO

UPDATE ProfitPoolDistribution SET Pool = (SELECT Id FROM Pools WHERE Name = 'AdPack Profit Distribution') WHERE Pool = 1;

GO

UPDATE ProfitPoolDistribution SET Pool = (SELECT Id FROM Pools WHERE Name = 'Administrator Profit') WHERE Pool = 0;

GO

ALTER TABLE AdPackTypes
ADD LoginAdsCredits INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD LoginAdsCredits INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD LoginAdsCreditsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE AdPackTypes
ADD WithdrawLimitPercentage INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AdPackTypeWithdrawLimitEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD RefTiersMaxWeeklyPayoutEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].RefTiersWeeklyPayoutLimits(
Id INT PRIMARY KEY IDENTITY,
Amount MONEY NOT NULL,
Tier INT NOT NULL,
);

GO

ALTER TABLE Users
ADD HasEverUpgraded BIT NOT NULL DEFAULT 0;

GO

BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 0)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 0)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 1)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 1)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 2)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 2)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 3)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 3)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 4)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 4)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 5)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 5)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 6)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 6)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 7)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 7)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 8)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 8)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 9)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 9)
   END
END
GO
BEGIN
   IF NOT EXISTS (SELECT * FROM RefTiersWeeklyPayoutLimits 
                   WHERE Tier = 10)
   BEGIN
       INSERT INTO RefTiersWeeklyPayoutLimits (Amount, Tier)
       VALUES (500, 10)
   END
END

GO

CREATE TABLE [dbo].Testimonials(
Id INT PRIMARY KEY IDENTITY,
UserId INT NOT NULL,
Body NVARCHAR (1000) NOT NULL,
Signature NVARCHAR(100) NOT NULL,
);

GO

ALTER TABLE ApplicationSettings
ADD RequireAPToViewCashLinks BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD BlockPtcAdvertsAfterMissingPointer BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MaxUpgradedDirectRefs INT NOT NULL DEFAULT 2147483647

GO

ALTER TABLE Memberships
ADD DirectReferralBannerPurchaseEarnings INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD DirectReferralMembershipPurchaseEarnings INT NOT NULL DEFAULT 0;

GO

ALTER TABLE BannerBids
ADD RefAndPoolsCredited BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AuctionsPerDay INT NOT NULL DEFAULT 24;

GO

ALTER TABLE ApplicationSettings
ADD InvoicesEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD BuyAdPacksForReferralsEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].AdPacksForOtherUsers(
Id INT PRIMARY KEY IDENTITY,
BuyerId INT NOT NULL,
OwnerId INT NOT NULL,
Count INT NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD MaxAdPacksForOtherUser INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD YourInvoiceName nvarchar(1000) NOT NULL DEFAULT '';

GO

ALTER TABLE Memberships
ADD DirectReferralAdvertClickEarningsPoints INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD DirectReferralTrafficGridPurchaseEarnings INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD IsDowngradeSpotted BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD CoinbaseAPIKey nvarchar(100) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings
ADD CoinbaseAPISecret nvarchar(100) NOT NULL DEFAULT '';

GO

ALTER TABLE BitcoinAddresses
ADD CoinbaseAddress nvarchar(512);

GO

ALTER TABLE PtcAdverts
ADD ExtraViews INT NOT NULL DEFAULT -1;

GO

CREATE TABLE [dbo].BitcoinIPNHistory (
Id INT PRIMARY KEY IDENTITY,
IPNId varchar(512),
UserId INT NOT NULL,
BitcoinAPIProvider INT NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD IsAdflyLoginAdEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AdflyUserId nvarchar(50) NOT NULL DEFAULT '';

GO

ALTER TABLE NetellerGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE NetellerGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO

CREATE TABLE [dbo].LevelNotifications(
Id INT PRIMARY KEY IDENTITY,
UserId INT NOT NULL,
IsDisplayed BIT NOT NULL,
IsUpgrade BIT NOT NULL,
PTCCreditsReward DECIMAL(16,2) NULL,
DRLimitReward INT NULL,
PointsReward INT NULL,
MembershipName NVARCHAR(50) NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD TestimonialsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Testimonials
ADD Status INT NOT NULL DEFAULT 2;

GO

ALTER TABLE BalanceLogs
DROP CONSTRAINT FK_BalanceLogs;

GO

ALTER TABLE applicationsettings
alter column powerpacks varchar(300);

GO

CREATE TABLE [dbo].AdvCashGateways 
(
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NULL,
	[ManualCashoutAfterExceeding] [money] NOT NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [money] NOT NULL,
	[StaticFee] money NOT NULL default 0,
	[PercentFee] decimal(5, 2) NOT NULL default 0,
	[APIName] nvarchar(100),
	[SCIName] nvarchar(100),
	[AccountEmail] nvarchar(100)
)

GO

ALTER TABLE Users
ADD AdvCashWalletID varchar(50);

GO


ALTER TABLE Users
ADD OKPayWalletID varchar(50);

GO

ALTER TABLE OKpayGateways
ADD StaticFee money NOT NULL default 0;

GO

ALTER TABLE OKpayGateways
ADD PercentFee decimal(5, 2) NOT NULL default 0;

GO

ALTER TABLE OKpayGateways
ADD APISecret nvarchar(100);

GO

ALTER TABLE PtcAdverts
ADD PackPrice MONEY NOT NULL DEFAULT 0;

GO

UPDATE PtcAdverts SET PackPrice = (SELECT ap.Price FROM PtcAdvertPacks ap JOIN PtcAdverts a ON ap.PtcAdvertPackId = a.PtcAdvertPackId);

GO

UPDATE CPAOffers SET NetworkName = AdvertiserUsername WHERE IsFromAutomaticNetwork = 1;

GO

DELETE FROM OfferRegisterEntries WHERE Id IN (SELECT ore.Id FROM OfferRegisterEntries ore LEFT JOIN CPAOffers co ON ore.OfferId = co.Id WHERE co.Id IS NULL);

GO

ALTER TABLE CompletedTransactions
ADD Fees MONEY NULL;

GO

ALTER TABLE CompletedTransactions
ADD Successful BIT NULL;

GO

UPDATE Users SET BypassSecurityCheck = 1 WHERE BypassSecurityCheck != 5

GO

ALTER PROCEDURE [dbo].[AddAdPackConstantBannerImpressions]   
    @AdPacksAdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalConstantBannerImpressions = TotalConstantBannerImpressions + @Impressions  
	WHERE Id IN 
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId 
		ORDER BY NEWID()
	)

GO

ALTER PROCEDURE [dbo].[AddAdPackNormalBannerImpressions]   
    @AdPacksAdvertId int,
	@Impressions int     
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalNormalBannerImpressions = TotalNormalBannerImpressions + @Impressions  
	WHERE Id IN 
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId 
		ORDER BY NEWID()
	)

GO

CREATE PROCEDURE [dbo].AddAdPackAdvertClick   
    @AdPacksAdvertId int 
AS   
    SET NOCOUNT ON;  
    UPDATE AdPacks
    SET TotalClicks = TotalClicks + 1
	WHERE Id =
	(
		SELECT TOP 1 Id
		FROM AdPacks WHERE AdPacksAdvertId = @AdPacksAdvertId AND TotalClicks < ClicksBought
		ORDER BY NEWID()
	)

GO 

CREATE TABLE [dbo].[Conversations](
[Id] [INT] PRIMARY KEY IDENTITY,
[UserIdOne] [INT] NOT NULL,
[UserIdTwo] [INT] NOT NULL,
[DateTime] [DateTime] NOT NULL,
);

GO

CREATE TABLE [dbo].[ConversationMessages](
[Id] [INT] PRIMARY KEY IDENTITY,
[ConversationId] [INT] NOT NULL,
[UserId] [INT] NOT NULL,
[DateTime] [DateTime] NOT NULL,
[Text] [nvarchar](1500)  NOT NULL
);

GO

ALTER TABLE ProfitPoolDistribution ALTER COLUMN ProfitPoolPercent decimal(5,2);

GO

ALTER TABLE ApplicationSettings
ADD MessengerEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD SocialNetworkEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD PointsToAdBalanceEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE PtcAdverts
ADD IsEdited BIT NOT NULL DEFAULT 0;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Memberships'
set @col_name = N'DirectReferralAdPackPurchaseEarnings'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Memberships ALTER COLUMN DirectReferralAdPackPurchaseEarnings decimal(5,2);

ALTER TABLE Users
ADD CashBalance MONEY NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD CashBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD CashToAdBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD MaintenanceModeeEndsDate datetime NOT NULL DEFAULT '11-11-2011';

GO

ALTER TABLE Jackpots 
ADD MainBalancePrizeEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE Jackpots 
ADD AdBalancePrizeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Jackpots 
ADD UpgradePrizeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Jackpots 
ADD LoginAdsCreditsPrizeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Jackpots 
ADD AdBalancePrize MONEY NOT NULL DEFAULT 0;

GO

ALTER TABLE Jackpots 
ADD LoginAdsCreditsPrize INT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].JackpotTicketPrizes(
Id INT PRIMARY KEY IDENTITY,
JackpotId INT NOT NULL,
PrizeType INT NOT NULL
);

GO

--Drop statistics code, that MUST RUN before every SQL update

DECLARE curAllStats CURSOR  FOR
SELECT 'DROP STATISTICS ' + Schema_NAME(d.Schema_id) + '.' + 
OBJECT_NAME(a.object_id) + '.' + 
a.name colum_name
FROM sys.stats a
INNER JOIN sys.Objects d ON d.Object_id = a.object_id
WHERE auto_created = 0
 
DECLARE  @StatName NVARCHAR(512)
 
OPEN curAllStats
 
FETCH NEXT FROM curAllStats
INTO @StatName
 
WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC(@StatName)
    
    FETCH NEXT FROM curAllStats
    INTO @StatName
  END -- WHILE
 
CLOSE curAllStats
 
DEALLOCATE curAllStats

--Drop statistics code, that MUST RUN before every SQL update

GO

UPDATE CompletedTransactions SET Fees = 0 WHERE Fees IS NULL;

GO

ALTER TABLE CompletedTransactions 
ALTER COLUMN Fees money NOT NULL;

GO

ALTER TABLE CompletedTransactions 
ADD CONSTRAINT df_FeesNotNull
DEFAULT 0 for Fees

GO

UPDATE CompletedTransactions SET Successful = 1 WHERE Successful IS NULL;

GO

ALTER TABLE CompletedTransactions 
ALTER COLUMN Successful BIT NOT NULL;

GO

ALTER TABLE CompletedTransactions 
ADD CONSTRAINT df_FeesSuccessful
DEFAULT 0 for Successful

GO

ALTER TABLE dbo.ApplicationSettings
ADD DeveloperModeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE dbo.ApplicationSettings
ADD ForumEnabled BIT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].Commissions(
Id INT PRIMARY KEY IDENTITY,
RefLevel INT NOT NULL,
MembershipId INT NOT NULL,
MembershipPurchasePercent DECIMAL(5,2) NOT NULL,
BannerPurchasePercent DECIMAL(5,2) NOT NULL,
AdPackPurchasePercent DECIMAL(5,2) NOT NULL,
OfferwallPercent DECIMAL(5,2) NOT NULL,
CPAOfferPercent DECIMAL(5,2) NOT NULL,
TrafficGridPurchasePercent DECIMAL(5,2) NOT NULL,
);

GO

ALTER TABLE ApplicationSettings
ADD URLCheckerAllowRedirect BIT NOT NULL DEFAULT 0;

GO


ALTER TABLE ApplicationSettings
ADD SpilloverEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].MembershipProperties(
Id INT PRIMARY KEY IDENTITY,
Name nvarchar(100) NOT NULL,
Hidden BIT NOT NULL,
);

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'AdvertClickEarnings')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('AdvertClickEarnings', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'DirectReferralAdvertClickEarnings')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('DirectReferralAdvertClickEarnings', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'RentedReferralAdvertClickEarnings')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('RentedReferralAdvertClickEarnings', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'DirectReferralsLimit')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('DirectReferralsLimit', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'RentedReferralsLimit')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('RentedReferralsLimit', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'ReferralRentCost')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('ReferralRentCost', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'RenewalDiscount')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('RenewalDiscount', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'AdvertPointsEarnings')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('AdvertPointsEarnings', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'Color')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('Color', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'RentedReferralRecycleCost')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('RentedReferralRecycleCost', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'CanAutoPay')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('CanAutoPay', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'DailyAutoPayCost')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('DailyAutoPayCost', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MinRentingIntervalSecs')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MinRentingIntervalSecs', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'TrafficGridTrials')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('TrafficGridTrials', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'TrafficGridChances')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('TrafficGridChances', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'TrafficGridShorterAd')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('TrafficGridShorterAd', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'OfferwallsProfitPercent')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('OfferwallsProfitPercent', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'CashoutLimit')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('CashoutLimit', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'CashoutLimitIcreased')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('CashoutLimitIcreased', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'CPAProfitPercent')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('CPAProfitPercent', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxRefPackageCount')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MaxRefPackageCount', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'RefPercentEarningsCPA')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('RefPercentEarningsCPA', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'HasInstantPayout')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('HasInstantPayout', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxDailyCashout')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MaxDailyCashout', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'AdPackAdBalanceReturnPercentage')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('AdPackAdBalanceReturnPercentage', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'AdPackDailyRequiredClicks')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('AdPackDailyRequiredClicks', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'ROIEnlargedByPercentage')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('ROIEnlargedByPercentage', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'SameUserCommissionToMainTransferFee')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('SameUserCommissionToMainTransferFee', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'OtherUserMainToAdTransferFee')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('OtherUserMainToAdTransferFee', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'OtherUserMainToMainTransferFee')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('OtherUserMainToMainTransferFee', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'OtherUserPointsToPointsTransferFee')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('OtherUserPointsToPointsTransferFee', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PTCCreditsPerView')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('PTCCreditsPerView', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PTCPurchaseCommissionPercent')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('PTCPurchaseCommissionPercent', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PointsYourPTCAdBeingViewed')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('PointsYourPTCAdBeingViewed', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PointsPer1000viewsDeliveredToPoolRotator')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('PointsPer1000viewsDeliveredToPoolRotator', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PointsPerNewReferral')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('PointsPerNewReferral', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'AutosurfViewLimitMonth')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('AutosurfViewLimitMonth', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MinAdsWatchedMonthlyToKeepYourLevel')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MinAdsWatchedMonthlyToKeepYourLevel', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MinPointsToHaveThisLevel')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MinPointsToHaveThisLevel', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxActivePtcCampaignLimit')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MaxActivePtcCampaignLimit', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxGlobalCashout')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MaxGlobalCashout', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxExtraAdPackSecondsForClicks')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MaxExtraAdPackSecondsForClicks', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelChanceToWinAnyAward')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelChanceToWinAnyAward', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelPointsPrizeChance')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelPointsPrizeChance', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelPointsPrizeMin')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelPointsPrizeMin', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelPointsPrizeMax')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelPointsPrizeMax', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelAdCreditsChance')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelAdCreditsChance', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelAdCreditsMin')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelAdCreditsMin', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelAdCreditsMax')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelAdCreditsMax', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelDRLimitIncreasedChance')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelDRLimitIncreasedChance', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelDRLimitIncreasedMin')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelDRLimitIncreasedMin', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'LevelDRLimitIncreasedMax')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('LevelDRLimitIncreasedMax', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxUpgradedDirectRefs')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('MaxUpgradedDirectRefs', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'DirectReferralAdvertClickEarningsPoints')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('DirectReferralAdvertClickEarningsPoints', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'TrafficExchangeClickEarnings')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('TrafficExchangeClickEarnings', 0)
   END
END
GO
BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'DRTrafficExchangeClickEarnings')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('DRTrafficExchangeClickEarnings', 0)
   END
END
GO
ALTER TABLE Memberships
ADD TrafficExchangeClickEarnings MONEY NOT NULL DEFAULT 0;

GO

UPDATE Memberships SET TrafficExchangeClickEarnings = AdvertClickEarnings;

GO

ALTER TABLE Memberships
ADD DRTrafficExchangeClickEarnings MONEY NOT NULL DEFAULT 0;

GO

UPDATE Memberships SET DRTrafficExchangeClickEarnings = DirectReferralAdvertClickEarnings;

GO

ALTER TABLE ApplicationSettings
ADD TECreditBasedOnDurationEnabled BIT NOT NULL DEFAULT 1;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDirectReferralsEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ALTER COLUMN StatsDirectReferralsEarned varchar(MAX) NOT NULL;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsPointsEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ALTER COLUMN StatsPointsEarned varchar(MAX) NOT NULL;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDirectReferralsPointsEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ALTER COLUMN StatsDirectReferralsPointsEarned varchar(MAX) NOT NULL;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDRAdPacksEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ALTER COLUMN StatsDRAdPacksEarned varchar(MAX) NOT NULL;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsCashLinksEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ALTER COLUMN StatsCashLinksEarned varchar(MAX) NOT NULL;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDRCashLinksEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ALTER COLUMN StatsDRCashLinksEarned varchar(MAX) NOT NULL;

GO

UPDATE ApplicationSettings SET IsDiceGameEnabled = 0;

GO

DECLARE @sql NVARCHAR(MAX);
SET @sql = N'';

SELECT @sql = @sql + N'
  ALTER TABLE '
  + QUOTENAME(t.name) + N' DROP CONSTRAINT '
  + QUOTENAME(d.name) + ';'
from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
	where c.system_type_id in (60,122)
EXEC sys.sp_executesql @sql

GO

declare @table nvarchar(255)
declare @col nvarchar(255)
declare @dtype SYSNAME =  'decimal(19,8)'  --<-- Declare variable of sysname type
declare @sql nvarchar(max) , @schema SYSNAME;
declare @Command  nvarchar(max)

declare maxcols cursor for
select
    c.TABLE_SCHEMA,
    c.TABLE_NAME,
    c.COLUMN_NAME
from
INFORMATION_SCHEMA.COLUMNS c
inner join INFORMATION_SCHEMA.TABLES t on
    c.TABLE_CATALOG = t.TABLE_CATALOG
    and c.TABLE_SCHEMA = t.TABLE_SCHEMA
    and c.TABLE_NAME = t.TABLE_NAME
    and t.TABLE_TYPE = 'BASE TABLE'
where
    c.DATA_TYPE like '%money'

open maxcols

fetch next from maxcols into @schema, @table, @col

while @@FETCH_STATUS = 0
begin
    set @sql = 'alter table [' + @schema + '].[' + @table + 
        '] alter column [' + @col + '] ' + @dtype


    exec sp_executesql @sql

    fetch next from maxcols into @schema, @table, @col
end

close maxcols
deallocate maxcols

GO

ALTER TABLE ApplicationSettings
ADD ShowRemainingZeros BIT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].CoreSettings(
Id INT PRIMARY KEY IDENTITY,
MaxDecimalPlaces INT NOT NULL
);
GO





BEGIN
   IF NOT EXISTS (SELECT * FROM CoreSettings)
   BEGIN
       INSERT INTO CoreSettings (MaxDecimalPlaces)
       VALUES (4)
   END
END

GO

CREATE TABLE [dbo].PurchaseOptions(
Id INT PRIMARY KEY IDENTITY,
Feature INT NOT NULL,
AdBalanceEnabled BIT NOT NULL,
CashBalanceEnabled BIT NOT NULL
);

GO

DECLARE @cnt INT = 1;
WHILE @cnt < 14
BEGIN
	BEGIN
		IF NOT EXISTS (SELECT * FROM PurchaseOptions WHERE Feature = @cnt)
		BEGIN
			INSERT INTO PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled)
			VALUES (@cnt, 1, 0)
		END
	END
    SET @cnt = @cnt + 1;
END;

GO

ALTER TABLE ApplicationSettings
ADD MaxDailyROIPercent DECIMAL(5,2) NOT NULL DEFAULT 100;

GO

 UPDATE  ApplicationSettings SET IsBitCoinDepositEnabled = 0, IsBitCoinWithdrawalEnabled = 0, BTCTargetBalance = 2 WHERE BTCTargetBalance = 1

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'OfferwallsLogs'
set @col_name = N'Points'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE OfferwallsLogs
DROP COLUMN Points;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'OfferwallsLogs'
set @col_name = N'ConvertedPoints'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE OfferwallsLogs
DROP COLUMN ConvertedPoints;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'OfferwallsLogs'
set @col_name = N'RewardInUSD'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE OfferwallsLogs
DROP COLUMN RewardInUSD;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'OfferwallsLogs'
set @col_name = N'SentBalance'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE OfferwallsLogs
ALTER COLUMN SentBalance varchar(25);

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'OfferwallsLogs'
set @col_name = N'CalculatedBalance'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE OfferwallsLogs
ALTER COLUMN CalculatedBalance varchar(50);

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'BalanceLogs'
set @col_name = N'BTCAccountState'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE BalanceLogs DROP COLUMN BTCAccountState;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'BalanceLogs'
set @col_name = N'BitCoinAmount'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE BalanceLogs DROP COLUMN BitCoinAmount;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'BTCBalance'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users DROP COLUMN BTCBalance;

GO
declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'CPAPostBackLogs'
set @col_name = N'CalculatedBalance'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE CPAPostBackLogs
ALTER COLUMN CalculatedBalance varchar(50);

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'CPAPostBackLogs'
set @col_name = N'UserCreditedMoney'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE CPAPostBackLogs
ALTER COLUMN UserCreditedMoney varchar(50);

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'CPAPostBackLogs'
set @col_name = N'SentBalance'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE CPAPostBackLogs
ALTER COLUMN SentBalance varchar(25);

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDirectReferralsEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)
GO
ALTER TABLE Users ALTER COLUMN StatsDirectReferralsEarned varchar(max)

GO
declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsPointsEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)
GO
ALTER TABLE Users ALTER COLUMN StatsPointsEarned varchar(max)
GO
declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDirectReferralsPointsEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)
GO
ALTER TABLE Users ALTER COLUMN StatsDirectReferralsPointsEarned varchar(max)
GO
declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDRAdPacksEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)
GO
ALTER TABLE Users ALTER COLUMN StatsDRAdPacksEarned varchar(max)
GO
declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsCashLinksEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)
GO
ALTER TABLE Users ALTER COLUMN StatsCashLinksEarned varchar(max)
GO
declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'Users'
set @col_name = N'StatsDRCashLinksEarned'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)
GO
ALTER TABLE Users ALTER COLUMN StatsDRCashLinksEarned varchar(max)
GO

ALTER TABLE ApplicationSettings
ADD CurrencyMode INT NOT NULL DEFAULT 0;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'TrafficExchangeAdverts'
set @col_name = N'ClickValue'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE Users
ADD PointsCreditedForSearchToday int NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD PointsCreditedForVideoToday int NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD LastCreditedSearch datetime;

GO


ALTER TABLE TrafficExchangeAdverts DROP COLUMN ClickValue;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'TrafficExchangeAdverts'
set @col_name = N'DirectReferralClickValue'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE TrafficExchangeAdverts DROP COLUMN DirectReferralClickValue;

GO

declare @table_name nvarchar(256)
declare @col_name nvarchar(256)
declare @Command  nvarchar(1000)

set @table_name = N'TrafficExchangeAdverts'
set @col_name = N'RentedReferralClickValue'

select @Command = 'ALTER TABLE ' + @table_name + ' drop constraint ' + d.name
 from sys.tables t
  join    sys.default_constraints d
   on d.parent_object_id = t.object_id
  join    sys.columns c
   on c.object_id = t.object_id
    and c.column_id = d.parent_column_id
 where t.name = @table_name
  and c.name = @col_name

execute (@Command)

GO

ALTER TABLE TrafficExchangeAdverts DROP COLUMN RentedReferralClickValue;

GO

UPDATE ApplicationSettings SET DeveloperModeEnabled = 1;

GO

UPDATE Users SET CashBalance = 0, CommissionBalance = 0, TotalEarnedFromDRCashLinks = 0, TotalEarnedFromCashLinks = 0, 
[TotalEarned] = 0, Balance1 = 0, Balance2 = 0, Balance3 = 0, MoneyTransferred = 0, MoneyCashout = 0, 
TotalDirectReferralsEarned = 0, TotalDREarnedFromAdPacks = 0 WHERE Balance2 IS NULL;

GO

ALTER TABLE Users
ALTER COLUMN Balance1 decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN Balance2 decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN Balance3 decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN CashBalance decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN CommissionBalance decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalEarnedFromDRCashLinks decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalEarnedFromCashLinks decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalEarned decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN MoneyTransferred decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN MoneyCashout decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalDirectReferralsEarned decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalDREarnedFromAdPacks decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ADD CONSTRAINT df_Balance1
DEFAULT 0 for [Balance1]

GO

ALTER TABLE Users
ADD CONSTRAINT df_Balance2
DEFAULT 0 for [Balance2]

GO

ALTER TABLE Users
ADD CONSTRAINT df_Balance3
DEFAULT 0 for [Balance3]

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalEarned
DEFAULT 0 for [TotalEarned]

GO

ALTER TABLE Users
ADD CONSTRAINT df_MoneyTransferred
DEFAULT 0 for MoneyTransferred

GO

ALTER TABLE Users
ADD CONSTRAINT df_MoneyCashout
DEFAULT 0 for MoneyCashout

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalDirectReferralsEarned
DEFAULT 0 for TotalDirectReferralsEarned

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalDREarnedFromAdPacks
DEFAULT 0 for TotalDREarnedFromAdPacks

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalEarnedFromCashLinks
DEFAULT 0 for TotalEarnedFromCashLinks

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalEarnedFromDRCashLinks
DEFAULT 0 for TotalEarnedFromDRCashLinks

GO

ALTER TABLE Users
ADD CONSTRAINT df_CommissionBalance
DEFAULT 0 for CommissionBalance

GO

ALTER TABLE Users
ADD CONSTRAINT df_CashBalance
DEFAULT 0 for CashBalance

GO

ALTER TABLE Jackpots
ADD UpgradeIdPrize int NOT NULL DEFAULT -1;

GO

ALTER TABLE Jackpots
ADD UpgradeDaysPrize int NOT NULL DEFAULT -1;

GO

UPDATE ptcadvertpacks SET MinUserBalance = 0, MaxUserBalance = 100000 WHERE MinUserBalance IS NULL;

GO

ALTER TABLE ptcadvertpacks
ALTER COLUMN MinUserBalance decimal(19,8) NOT NULL;

GO

ALTER TABLE ptcadvertpacks
ALTER COLUMN MaxUserBalance decimal(19,8) NOT NULL;

GO

ALTER TABLE ptcadvertpacks
ADD CONSTRAINT df_MinUserBalance
DEFAULT 0 for [MinUserBalance]

GO

ALTER TABLE ptcadvertpacks
ADD CONSTRAINT df_MaxUserBalance
DEFAULT 100000 for [MaxUserBalance]

GO

--Drop statistics code, that MUST RUN before every SQL update

DECLARE curAllStats CURSOR  FOR
SELECT 'DROP STATISTICS ' + Schema_NAME(d.Schema_id) + '.' + 
OBJECT_NAME(a.object_id) + '.' + 
a.name colum_name
FROM sys.stats a
INNER JOIN sys.Objects d ON d.Object_id = a.object_id
WHERE auto_created = 0
 
DECLARE  @StatName NVARCHAR(512)
 
OPEN curAllStats
 
FETCH NEXT FROM curAllStats
INTO @StatName
 
WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC(@StatName)
    
    FETCH NEXT FROM curAllStats
    INTO @StatName
  END -- WHILE
 
CLOSE curAllStats
 
DEALLOCATE curAllStats

--Drop statistics code, that MUST RUN before every SQL update

GO

UPDATE Users SET CashBalance = 0, CommissionBalance = 0, TotalEarnedFromDRCashLinks = 0, TotalEarnedFromCashLinks = 0, 
[TotalEarned] = 0, Balance1 = 0, Balance2 = 0, Balance3 = 0, MoneyTransferred = 0, MoneyCashout = 0, 
TotalDirectReferralsEarned = 0, TotalDREarnedFromAdPacks = 0 WHERE Balance2 IS NULL;

GO

ALTER TABLE Users
ALTER COLUMN Balance1 decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN Balance2 decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN Balance3 decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN CashBalance decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN CommissionBalance decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalEarnedFromDRCashLinks decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalEarnedFromCashLinks decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalEarned decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN MoneyTransferred decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN MoneyCashout decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalDirectReferralsEarned decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ALTER COLUMN TotalDREarnedFromAdPacks decimal(19,8) NOT NULL;

GO

ALTER TABLE Users
ADD CONSTRAINT df_Balance1
DEFAULT 0 for [Balance1]

GO

ALTER TABLE Users
ADD CONSTRAINT df_Balance2
DEFAULT 0 for [Balance2]

GO

ALTER TABLE Users
ADD CONSTRAINT df_Balance3
DEFAULT 0 for [Balance3]

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalEarned
DEFAULT 0 for [TotalEarned]

GO

ALTER TABLE Users
ADD CONSTRAINT df_MoneyTransferred
DEFAULT 0 for MoneyTransferred

GO

ALTER TABLE Users
ADD CONSTRAINT df_MoneyCashout
DEFAULT 0 for MoneyCashout

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalDirectReferralsEarned
DEFAULT 0 for TotalDirectReferralsEarned

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalDREarnedFromAdPacks
DEFAULT 0 for TotalDREarnedFromAdPacks

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalEarnedFromCashLinks
DEFAULT 0 for TotalEarnedFromCashLinks

GO

ALTER TABLE Users
ADD CONSTRAINT df_TotalEarnedFromDRCashLinks
DEFAULT 0 for TotalEarnedFromDRCashLinks

GO

ALTER TABLE Users
ADD CONSTRAINT df_CommissionBalance
DEFAULT 0 for CommissionBalance

GO

ALTER TABLE Users
ADD CONSTRAINT df_CashBalance
DEFAULT 0 for CashBalance

GO

ALTER TABLE Jackpots
ADD UpgradeIdPrize int NOT NULL DEFAULT -1;

GO

ALTER TABLE Jackpots
ADD UpgradeDaysPrize int NOT NULL DEFAULT -1;

GO

ALTER TABLE ApplicationSettings
ADD FacebookSecretKey varchar(100);

GO

UPDATE Memberships SET MaxGlobalCashout = 0, TrafficExchangeClickEarnings = 0, DRTrafficExchangeClickEarnings = 0 WHERE MaxGlobalCashout IS NULL;

GO

ALTER TABLE Memberships
ALTER COLUMN MaxGlobalCashout decimal(19,8) NOT NULL;

GO

ALTER TABLE Memberships
ALTER COLUMN TrafficExchangeClickEarnings decimal(19,8) NOT NULL;

GO

ALTER TABLE Memberships
ALTER COLUMN DRTrafficExchangeClickEarnings decimal(19,8) NOT NULL;

GO

ALTER TABLE Memberships
ADD CONSTRAINT df_MaxGlobalCashout
DEFAULT 0 for [MaxGlobalCashout]

GO

ALTER TABLE Memberships
ADD CONSTRAINT df_TrafficExchangeClickEarnings
DEFAULT 0 for [TrafficExchangeClickEarnings]

GO

ALTER TABLE Memberships
ADD CONSTRAINT df_DRTrafficExchangeClickEarnings
DEFAULT 0 for [DRTrafficExchangeClickEarnings]

GO

EXEC sp_RENAME 'dbo.Friends', 'Friendships'
GO
EXEC sp_RENAME 'Friendships.Who1' , 'UserIdOne', 'COLUMN'
GO
EXEC sp_RENAME 'Friendships.Who2' , 'UserIdTwo', 'COLUMN'
GO
ALTER TABLE Friendships DROP CONSTRAINT FK_Friends1
GO
ALTER TABLE Friendships DROP CONSTRAINT FK_Friends2
GO
DELETE FROM Friendships WHERE UserIdOne IS NULL OR UserIdOne = '' OR UserIdTwo IS NULL OR UserIdTwo = '';
GO
ALTER TABLE Friendships ALTER COLUMN UserIdOne INT NOT NULL;
GO
ALTER TABLE Friendships ALTER COLUMN UserIdTwo INT NOT NULL;
GO
ALTER TABLE Friendships
ADD CONSTRAINT FK_Friendships1
FOREIGN KEY (UserIdOne)
REFERENCES Users(UserId);
GO
ALTER TABLE Friendships
ADD CONSTRAINT FK_Friendships2
FOREIGN KEY (UserIdTwo)
REFERENCES Users(UserId);

GO

CREATE TABLE [dbo].[Posts](
[ID] INT PRIMARY KEY IDENTITY,
[AuthorId] INT NOT NULL,
[DateTime] DATETIME NOT NULL,
[Text] nvarchar(1000),
[ImagePath] nvarchar(256)
);
GO
CREATE TABLE [dbo].[Comments](
[ID] INT PRIMARY KEY IDENTITY,
[AuthorId] INT NOT NULL,
[PostId] INT NOT NULL,
[DateTime] DATETIME NOT NULL,
[Text] nvarchar(1000),
[ImagePath] nvarchar(256)
);
GO
CREATE TABLE [dbo].FriendshipRequests(
[ID] INT PRIMARY KEY IDENTITY,
[SenderId] INT NOT NULL,
[RecipientId] INT NOT NULL,
[Status] INT NOT NULL,
[DateTime] DATETIME NOT NULL
);
GO
ALTER TABLE ConversationMessages
ADD CONSTRAINT FK_ConversationId
FOREIGN KEY (ConversationId)
REFERENCES Conversations(Id);
GO
ALTER TABLE FriendshipRequests
ADD CONSTRAINT FK_SenderId
FOREIGN KEY (SenderId)
REFERENCES Users(UserId);
GO
ALTER TABLE FriendshipRequests
ADD CONSTRAINT FK_RecipientId
FOREIGN KEY (RecipientId)
REFERENCES Users(UserId);
GO
ALTER TABLE Comments
ADD CONSTRAINT FK_PostId
FOREIGN KEY (PostId)
REFERENCES Posts(Id);
GO
ALTER TABLE Comments
ADD CONSTRAINT FK_AuthorId
FOREIGN KEY (AuthorId)
REFERENCES Users(UserId);
GO


ALTER TABLE Posts
ADD CONSTRAINT FK_PostAuthorId
FOREIGN KEY (AuthorId)
REFERENCES Users(UserId);

GO

UPDATE PtcAdverts SET PackPrice = (SELECT TOP 1 ap.Price FROM PtcAdvertPacks ap JOIN PtcAdverts a ON ap.PtcAdvertPackId = a.PtcAdvertPackId) WHERE PackPrice IS NULL;

GO

ALTER TABLE Memberships
ADD MaxDailyPtcClicks INT NOT NULL DEFAULT 999999;

GO

ALTER TABLE [BannerAdvertPacks]
ADD [Type] INT NOT NULL DEFAULT 1;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM BannerAdvertPacks
                   WHERE Type = 2)
   BEGIN
       INSERT INTO BannerAdvertPacks (Name, IsVisibleByMembers, EndValue, EndMode, Price, Type)
	   SELECT Name, IsVisibleByMembers, EndValue, EndMode, Price, 2 FROM BannerAdvertPacks

   END
END

GO

ALTER TABLE ApplicationSettings 
ADD MaxAutomaticBtcPayout DECIMAL(19,8) NOT NULL DEFAULT 9999;

GO

CREATE TABLE [dbo].BitcoinWithdrawRequests(
[ID] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Address] VARCHAR(40) NOT NULL,
[Status] INT NOT NULL,
[RequestDate] DATETIME NOT NULL,
[Amount] DECIMAL(19,8) NOT NULL
);
GO
ALTER TABLE BitcoinWithdrawRequests
ADD CONSTRAINT FK_BtcWithdrawRequestUserId
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO
CREATE TABLE [dbo].BtcWithdrawAddresses(
[ID] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Address] VARCHAR(40) NOT NULL,
[DateAdded] DATETIME NOT NULL
);
GO
ALTER TABLE BtcWithdrawAddresses
ADD CONSTRAINT FK_BtcWithdrawAddressUserId
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE ApplicationSettings
ADD DaysToActivateBtcAddress INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD BtcWithdrawalEmailEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD StopRoiAfterMembershipExpiration BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MaxDailyPayouts INT NOT NULL DEFAULT 10;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxDailyPtcClicks')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('MaxDailyPtcClicks', 0)
   END
END

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxDailyPayouts')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('MaxDailyPayouts', 0);
   END
END

GO

ALTER TABLE ApplicationSettings
ADD FooterRemoved BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AdPacksPolicy INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD StatisticsLeaderboardEnabled BIT NOT NULL DEFAULT 0;

GO


ALTER TABLE Users 
ADD IsEarner BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE Users 
ADD IsAdvertiser BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE Users 
ADD IsPublisher BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD IsAutoApprovalEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD IsAutoAactiveEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AffiliateNetworkEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].UsersBannedFromContestsTypes(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Type] INT NOT NULL);

GO

ALTER TABLE UsersBannedFromContestsTypes
ADD CONSTRAINT FK_UsersBannedFromContestsTypes_UserId
FOREIGN KEY (UserId)
REFERENCES UserId(UserId);

GO

CREATE TABLE [dbo].[PublishersWebsites](
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Url] NVARCHAR(800) NOT NULL,
[Status] INT NOT NULL,
[Host] NVARCHAR(100) NOT NULL,
[PublishersWebsiteCategoryId] INT NOT NULL,
[PostbackUrl] NVARCHAR(800) NULL
);

GO

CREATE TABLE [dbo].[PublishersWebsiteCategories](
[Id] INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(80) NOT NULL,
[Status] INT NOT NULL
);

GO

ALTER TABLE PublishersWebsites
ADD CONSTRAINT FK_PublishersWebsites_UserId
FOREIGN KEY (UserId)
REFERENCES Users(UserId);

GO

ALTER TABLE PublishersWebsites
ADD CONSTRAINT FK_PublishersWebsites_CategoryId
FOREIGN KEY (PublishersWebsiteCategoryId)
REFERENCES PublishersWebsiteCategories(Id);

GO

CREATE TABLE [dbo].ExternalBannerAdvertDimensions(
[Id] INT PRIMARY KEY IDENTITY,
[Width] INT NOT NULL,
[Height] INT NOT NULL,
[Status] INT NOT NULL,
);

GO

CREATE TABLE [dbo].ExternalBannerAdvertPacks(
[Id] INT PRIMARY KEY IDENTITY,
[Clicks] INT NOT NULL,
[Price] DECIMAL(19,8) NOT NULL,
[ExternalBannerDimensionsId] INT NOT NULL,
[Status] INT NOT NULL,
FOREIGN KEY (ExternalBannerDimensionsId) REFERENCES ExternalBannerAdvertDimensions(Id)
);

GO

CREATE TABLE [dbo].ExternalBannerAdverts(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Url] NVARCHAR(800) NOT NULL,
[ImagePath] NVARCHAR(256) NOT NULL,
[PublishersWebsiteCategoryId] INT NOT NULL,
[ExternalBannerAdvertPackId] INT NOT NULL,
[Status] INT NOT NULL,
[ClicksReceived] INT NOT NULL,
[ClicksBought] INT NOT NULL,
[PricePaid] DECIMAL (19,8) NOT NULL,
[MoneyPerClick] DECIMAL (19, 8) NOT NULL,
FOREIGN KEY (UserId) REFERENCES Users(UserId),
FOREIGN KEY (PublishersWebsiteCategoryId) REFERENCES PublishersWebsiteCategories(Id),
FOREIGN KEY (ExternalBannerAdvertPackId) REFERENCES ExternalBannerAdvertPacks(Id)
);

GO

CREATE TABLE [dbo].ExternalBannerRotatorClicks(
[Id] INT PRIMARY KEY IDENTITY,
[PublishersWebsiteId] INT NOT NULL,
[Ip] NVARCHAR(80) NOT NULL,
[CreditedClicks] INT NOT NULL,
[LastCreditedClickTime] DATETIME NOT NULL,
FOREIGN KEY (PublishersWebsiteId) REFERENCES PublishersWebsites(Id)
);

GO



ALTER TABLE ApplicationSettings
ADD WithdrawalVerificationCodeValidForMinutes INT NOT NULL DEFAULT (60);
GO
ALTER TABLE ApplicationSettings
ADD MinutesBetweenExternalBannerClicksPerIp INT NOT NULL DEFAULT (10);
GO
ALTER TABLE ApplicationSettings
ADD BtcWithdrawalFee DECIMAL(19,8) NOT NULL DEFAULT 0;
GO
sp_RENAME 'ApplicationSettings.BtcWithdrawalEmailEnabled', 'WithdrawalEmailEnabled' , 'COLUMN';
GO
CREATE TABLE [dbo].VerificationCodes(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Code] INT NOT NULL,
[CreationDate] DATETIME NOT NULL,
FOREIGN KEY (UserId) REFERENCES Users(UserId)
);
GO

ALTER TABLE ApplicationSettings
ADD BannersAddByUrlEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD PaymentProofsEnabled BIT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].ExternalCpaOfferSubmissions(
[Id] INT PRIMARY KEY IDENTITY,
[PublisherId] INT NOT NULL,
[OfferId] INT NOT NULL,
[PublishersWebsiteId] INT NOT NULL,
[ExternalUsername] NVARCHAR(500) NOT NULL,
[DateAdded] DATETIME NOT NULL,
[DateAccepted] DATETIME NULL,
[Status] INT NOT NULL,
[LoginId] NVARCHAR(80) NULL,
[EmailId] NVARCHAR(400) NULL,
[SubId2] NVARCHAR(50) NULL,
[SubId3] NVARCHAR(50) NULL,
[Ip] NVARCHAR(80) NOT NULL,
[CountryCode] NVARCHAR(10) NOT NULL,
[Payout] DECIMAL(19,8) NOT NULL,
FOREIGN KEY ([PublisherId]) REFERENCES Users(UserId),
FOREIGN KEY ([OfferId]) REFERENCES CPAOffers(Id),
FOREIGN KEY ([PublishersWebsiteId]) REFERENCES PublishersWebsites(Id)
);

GO

CREATE TABLE [dbo].CpaPostbacks(
[Id] INT PRIMARY KEY IDENTITY,
[Url] NVARCHAR(800) NOT NULL,
[OfferId] NVARCHAR(100) NOT NULL,
[OfferName] NVARCHAR(50) NOT NULL,
[Ip] NVARCHAR(80) NOT NULL,
[CountryCode] NVARCHAR(10) NOT NULL,
[SubId] NVARCHAR(500) NULL,
[Payout] DECIMAL(19,8) NOT NULL,
[CurrencyCode] NVARCHAR(10) NOT NULL,
[SubId2] NVARCHAR(50) NULL,
[SubId3] NVARCHAR(50) NULL,
[Status] INT NOT NULL,
[SendAttempts] INT NOT NULL,
[PublishersWebsiteId] INT NOT NULL,
FOREIGN KEY ([PublishersWebsiteId]) REFERENCES PublishersWebsites(Id)
);

GO

ALTER TABLE ApplicationSettings
ADD TitanModules varchar(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings
ADD TitanProducts varchar(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE Memberships
ADD PublishersBannerClickProfitPercentage
DECIMAL (5,2) NOT NULL
DEFAULT 0

GO

ALTER TABLE Memberships 
ADD PublishersCpaOfferProfitPercentage 
DECIMAL (5,2) NOT NULL
DEFAULT 0

GO

ALTER TABLE AdPackTypes
ADD TrafficExchangeSurfCredits
DECIMAL (19,8) NOT NULL
DEFAULT 0

GO

UPDATE ApplicationSettings SET PTCCategoryPolicy = 0

GO

ALTER TABLE ApplicationSettings
ADD CreditAfterSetTime INT NOT NULL DEFAULT 0;

GO

UPDATE Friendships SET UserIdOne = (SELECT UserId FROM Users WHERE Username = UserIdOne);

GO

UPDATE Friendships SET UserIdTwo = (SELECT UserId FROM Users WHERE Username = UserIdTwo);

GO

ALTER TABLE Friendships ALTER COLUMN UserIdOne INT NOT NULL;

GO

ALTER TABLE Friendships ALTER COLUMN UserIdTwo INT NOT NULL;

GO

ALTER TABLE ApplicationSettings
ADD PeopleProfileEnabled BIT NOT NULL DEFAULT 1;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM PurchaseOptions
                   WHERE Feature = 14)
   BEGIN
       INSERT INTO PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled)
	   VALUES (14, 1, 0)
   END
END

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM PurchaseOptions
                   WHERE Feature = 15)
   BEGIN
       INSERT INTO PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled)
	   VALUES (15, 1, 0)
   END
END

GO

ALTER TABLE ApplicationSettings ADD AdvertPtcOfferWallEnabled BIT NOT NULL DEFAULT 0;

GO




CREATE TABLE [dbo].PTCOfferWallPacks(
[Id] INT PRIMARY KEY IDENTITY,
[CompletionTimes] INT NOT NULL,
[Price] DECIMAL(19,8) NOT NULL,
[Adverts] INT NOT NULL,
[DisplayTime] INT NOT NULL,
[Status] INT NOT NULL
);

GO

CREATE TABLE [dbo].PTCOfferWalls(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Status] INT NOT NULL,
[CompletionTimes] INT NOT NULL,
[CompletionTimesBought] INT NOT NULL,
[PricePaid] DECIMAL(19,8) NOT NULL,
[DisplayTime] INT NOT NULL,
FOREIGN KEY ([UserId]) REFERENCES Users(UserId)
);

GO

CREATE TABLE [dbo].UserUrls(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Url] NVARCHAR(500) NOT NULL,
[Status] INT NOT NULL,
FOREIGN KEY ([UserId]) REFERENCES Users(UserId),
);

GO

CREATE TABLE [dbo].PTCOfferWallsUserUrls(
[Id] INT PRIMARY KEY IDENTITY,
[PTCOfferWallId] INT NOT NULL,
[UserUrlId] INT NOT NULL,
FOREIGN KEY ([PTCOfferWallId]) REFERENCES PTCOfferWalls(Id),
FOREIGN KEY ([UserUrlId]) REFERENCES UserUrls(Id)
);

GO

ALTER TABLE ApplicationSettings
ADD AdvertInTextAdsEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD AdvertMyUrlsEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD PublishWebsitesEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD PublishInTextAdsEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD PublishBannersEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD PublishOfferWallsEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD PublishPTCOfferWallsEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD PublishGlobalPostbackEnabled BIT NOT NULL DEFAULT 0;
GO
ALTER TABLE ApplicationSettings
ADD EarnersRoleEnabled BIT NOT NULL DEFAULT 1;
GO
ALTER TABLE ApplicationSettings
ADD AdvertisersRoleEnabled BIT NOT NULL DEFAULT 1;
GO
ALTER TABLE ApplicationSettings
ADD PublishersRoleEnabled BIT NOT NULL DEFAULT 0;
GO

CREATE TABLE [dbo].InTextAdvertPacks(
[Id] INT PRIMARY KEY IDENTITY,
[Clicks] INT NOT NULL,
[Price] DECIMAL(19,8) NOT NULL,
[MaxNumberOfTags] INT NOT NULL,
[Status] INT NOT NULL
);
GO

BEGIN
	IF NOT EXISTS(SELECT * FROM PurchaseOptions WHERE Feature = 16)
	BEGIN
		INSERT INTO PurchaseOptions(Feature, AdBalanceEnabled, CashBalanceEnabled)
		VALUES (16, 1, 0);
	END
END 

GO

CREATE TABLE [dbo].InTextAdverts(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Title] NVARCHAR(40) NOT NULL,
[Description] NVARCHAR(100) NOT NULL,
[Url] NVARCHAR(800) NOT NULL,
[ClicksReceived] INT NOT NULL,
[ClicksBought] INT NOT NULL,
[PricePaid] DECIMAL(19,8) NOT NULL,
[Status] INT NOT NULL,
FOREIGN KEY ([UserId]) REFERENCES Users(UserId)
);

GO

CREATE TABLE [dbo].InTextAdvertsTags(
[Id] INT PRIMARY KEY IDENTITY,
[InTextAdvertId] INT NOT NULL,
[Tag] NVARCHAR(20) NOT NULL,
FOREIGN KEY ([InTextAdvertId]) REFERENCES InTextAdverts(Id)
);

GO

ALTER TABLE Memberships 
ADD PublishersInTextAdClickProfitPercentage 
DECIMAL (5,2) NOT NULL DEFAULT 0;
GO

CREATE TABLE [dbo].ExternalBannerActionTracker(
[Id] INT PRIMARY KEY IDENTITY,
[PublishersWebsiteId] INT NOT NULL,
[Ip] NVARCHAR(80) NOT NULL,
[CreditedActions] INT NOT NULL,
[AllActions] INT NOT NULL,
[LastCreditedActionTime] DATETIME NOT NULL,
[AdvertId] INT NOT NULL,
FOREIGN KEY (PublishersWebsiteId) REFERENCES PublishersWebsites(Id)
);

GO

CREATE TABLE [dbo].InTextActionTracker(
[Id] INT PRIMARY KEY IDENTITY,
[PublishersWebsiteId] INT NOT NULL,
[Ip] NVARCHAR(80) NOT NULL,
[CreditedActions] INT NOT NULL,
[AllActions] INT NOT NULL,
[LastCreditedActionTime] DATETIME NOT NULL,
[AdvertId] INT NOT NULL,
FOREIGN KEY (PublishersWebsiteId) REFERENCES PublishersWebsites(Id)
);

GO

ALTER TABLE Contests
ADD Prize1Url varchar(MAX),
Prize2Url varchar(MAX),
Prize3Url varchar(MAX),
AdPackReferallsPurchaseRestriction int NOT NULL DEFAULT 0;

GO

ALTER TABLE MarketplaceProducts ADD
	[GeolocatedCC] [nvarchar](max) NOT NULL DEFAULT '',
	[GeolocatedCities] [nvarchar](max) NOT NULL DEFAULT '',
	[GeolocatedAgeMin] [int] NOT NULL DEFAULT 0,
	[GeolocatedAgeMax] [int] NOT NULL DEFAULT 0,
	[GeolocatedGender] [int] NOT NULL DEFAULT 0,
	[GeolocationProfile] [nvarchar](max) NOT NULL DEFAULT '';

GO

ALTER TABLE PTCOfferWalls ADD
	[Adverts] [int] NOT NULL,
	[Title] [nvarchar](50) NOT NULL,
	[Description] [nvarchar](500) NOT NULL,
	[GeolocatedCC] [nvarchar](max) NOT NULL DEFAULT '',
	[GeolocatedCities] [nvarchar](max) NOT NULL DEFAULT '',
	[GeolocatedAgeMin] [int] NOT NULL DEFAULT 0,
	[GeolocatedAgeMax] [int] NOT NULL DEFAULT 0,
	[GeolocatedGender] [int] NOT NULL DEFAULT 0,
	[GeolocationProfile] [nvarchar](max) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings
ADD FacebookLink VARCHAR(MAX) NOT NULL DEFAULT '',
InstagramLink VARCHAR(MAX) NOT NULL DEFAULT '',
TwitterLink VARCHAR(MAX) NOT NULL DEFAULT '',
GooglePlusLink VARCHAR(MAX) NOT NULL DEFAULT '',
DribbbleLink VARCHAR(MAX) NOT NULL DEFAULT ''

GO

ALTER TABLE ApplicationSettings 
ADD LatestNewsEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD ShowSiteName BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ExternalCpaOfferSubmissions
ADD [Age] INT  NOT NULL DEFAULT -1,
 [Gender] INT  NOT NULL DEFAULT 0;

 GO

ALTER TABLE CpaPostbacks
ADD [Age] INT  NOT NULL DEFAULT -1,
 [Gender] INT  NOT NULL DEFAULT 0, 
 [GlobalPostbackType] INT NOT NULL DEFAULT 1;

GO

SP_RENAME 'CpaPostbacks', 'GlobalPostbacks';

GO

ALTER TABLE CPAOffers
ADD RequiredMembership int NOT NULL default 1;

GO

CREATE TABLE [dbo].PTCOfferWallViews(
[Id] INT PRIMARY KEY IDENTITY,
[Username] NVARCHAR(500) NOT NULL,
[DateTimeViewed] DATETIME NOT NULL,
[PTCOfferWallId] INT NOT NULL,
[PublishersWebsiteId] INT NOT NULL,
);

GO

ALTER TABLE Memberships ADD PublishersPtcOfferWallProfitPercentage DECIMAL(5,2) NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].[PaparaGateways](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NULL,
	[ManualCashoutAfterExceeding] [decimal](19, 8) NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [decimal](19, 8) NULL,
	[StaticFee] [decimal](19, 8) NULL,
	[PercentFee] [decimal](5, 2) NOT NULL DEFAULT 0,
	[APIName] [nvarchar](100) NULL,
	[APIKey] [nvarchar](100) NULL,
	[WalletNumber] [nvarchar](100) NULL
) ON [PRIMARY]

GO

ALTER TABLE Users
ADD PaparaAccountID VARCHAR(50);

GO

CREATE TABLE [dbo].BannerAdvertDimensions(
[Id] INT PRIMARY KEY IDENTITY,
[Width] INT NOT NULL,
[Height] INT NOT NULL,
[Status] INT NOT NULL,
);

GO

BEGIN
   IF (SELECT COUNT(*) FROM BannerAdvertDimensions) = 0
   BEGIN
	INSERT INTO BannerAdvertDimensions (Width, Height, [Status])
	VALUES ((SELECT NormalBannerWidth from ApplicationSettings), (SELECT NormalBannerHeight from ApplicationSettings), 1);
   END
END

GO

BEGIN
   IF (SELECT COUNT(*) FROM BannerAdvertDimensions) = 1
   BEGIN
	INSERT INTO BannerAdvertDimensions (Width, Height, [Status])
	VALUES ((SELECT BannerAdvertConstantBannerWidth from ApplicationSettings), (SELECT BannerAdvertConstantBannerHeight from ApplicationSettings), 1);
   END
END

GO

ALTER TABLE BannerAdverts
ADD BannerAdvertDimensionId int;

GO

UPDATE BannerAdverts SET BannerAdvertDimensionId = [Type] WHERE BannerAdvertDimensionId IS NULL;

GO

ALTER TABLE PaparaGateways
ADD [SecretKey] [nvarchar](100) NULL,
[ReferansId] [int] NULL

GO

ALTER TABLE BannerAdverts
DROP COLUMN [Type];
GO

ALTER TABLE AdPacks
ADD BalanceBoughtType INT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].Representatives(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[Status] INT NOT NULL,
[Name] [varchar](50) NOT NULL,
[Email] [nvarchar](60) NOT NULL,
[Why] [nvarchar](500) NOT NULL,
[City] [varchar](50) NOT NULL,
[Country] [varchar](50) NOT NULL,
[PhoneNumber] [varchar](50) NOT NULL,
[Languages] [varchar](50) NOT NULL,
[RejectReason] [nvarchar](500),
);

GO

ALTER TABLE ApplicationSettings
ADD IsRepresentativesEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ProfitForRepresentantFromReferral DECIMAL (5,2) NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].PaparaOrders(
[Id] INT PRIMARY KEY IDENTITY,
[IsPaid] BIT NOT NULL,
[DateAdded] datetime NOT NULL,
[CommandName] [varchar](100) NOT NULL,
[Args] [nvarchar](1000) NOT NULL,
[Amount] DECIMAL(19,8) NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD IsDefaultRegistrationStatusEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD IsDefaultEarnerStatus BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD IsDefaultAdvertiserStatus BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD IsDefaultPublisherStatus BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD ShowQuickStartGuideEnabled BIT NOT NULL DEFAULT 1,
CustomFooterContent VARCHAR(MAX),
CustomHeaderContent VARCHAR(MAX);

GO

ALTER TABLE ApplicationSettings
ADD Theme varchar(100) NOT NULL DEFAULT 'titan';

GO

ALTER TABLE PTCOfferWallViews ADD PublisherPayout DECIMAL(19,8) NOT NULL;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PublishersBannerClickProfitPercentage')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('PublishersBannerClickProfitPercentage', 0)
   END
END;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PublishersCpaOfferProfitPercentage')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('PublishersCpaOfferProfitPercentage', 0)
   END
END;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PublishersInTextAdClickProfitPercentage')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('PublishersInTextAdClickProfitPercentage', 0)
   END
END;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'PublishersPtcOfferWallProfitPercentage')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('PublishersPtcOfferWallProfitPercentage', 0)
   END
END;

GO

ALTER TABLE BannerAdvertPacks
ADD [Status] INT NOT NULL DEFAULT 0;

GO

UPDATE BannerAdvertPacks
SET [Status] = 1 WHERE IsVisibleByMembers = 1;

GO

ALTER TABLE ApplicationSettings
ADD PTCImagesEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD DayOfWeekDistribution INT NOT NULL DEFAULT 5;

GO

ALTER TABLE PtcAdverts
ADD ImagePath varchar(max);

GO

ALTER TABLE Representatives
ADD [Skype] [nvarchar](100) NULL;

GO

ALTER TABLE Representatives
ADD [Facebook] [nvarchar](100) NULL;

GO

ALTER TABLE ApplicationSettings
ADD RepresentativesPolicy INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD NoOfRepresentatives INT NOT NULL DEFAULT 1;

GO




CREATE TABLE [dbo].[Webinars](
[Id] INT PRIMARY KEY IDENTITY,
[Title] NVARCHAR(80) NOT NULL,
[Description] NVARCHAR(500) NOT NULL,
[Language] NVARCHAR(200) NOT NULL,
[Url] NVARCHAR(500) NOT NULL,
[DateTime] DATETIME NOT NULL,
[Status] INT NOT NULL
);

GO

ALTER TABLE ApplicationSettings ADD WebinarsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD RepresentativeID INT NULL;

GO

ALTER TABLE PtcOfferWalls 
ADD PCAllowed BIT NOT NULL DEFAULT 1, 
MobileAllowed BIT NOT NULL DEFAULT 1,
AutosurfEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE PTCOfferWalls ADD SingleUserViewsPerDay INT NOT NULL DEFAULT 5;

GO

ALTER TABLE Users
ADD MatrixId NVARCHAR(4000) NULL;

GO

IF NOT EXISTS (SELECT * FROM Users WHERE MatrixId IS NOT NULL)
UPDATE Users SET MatrixId = hierarchyid::GetRoot().ToString()
WHERE UserId = CASE 
				  WHEN (SELECT IsRevShareEnabled FROM ApplicationSettings) = 1 
				  THEN (SELECT AdminUserId FROM ApplicationSettings)
				  ELSE 1005
				END;


GO

ALTER TABLE ApplicationSettings ADD MaxChildrenInMatrix INT NOT NULL DEFAULT 4;

GO

ALTER TABLE ApplicationSettings 
ADD BannerGeoloactionEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD ReferralMatrixEnabled BIT NOT NULL DEFAULT 0;

GO
ALTER TABLE ApplicationSettings ADD DaysBetweenMatrixRebuild INT NOT NULL DEFAULT 5;

GO

ALTER TABLE ApplicationSettings ADD LastMatrixRebuild DATETIME NOT NULL DEFAULT GETDATE();

GO

ALTER TABLE Commissions
ADD VideoViewPercent DECIMAL(5,2) NOT NULL DEFAULT 0.00

GO

ALTER TABLE ApplicationSettings ADD
MatrixCheckPtc BIT NOT NULL DEFAULT 0, 
MatrixCheckBanner BIT NOT NULL DEFAULT 0, 
MatrixCheckFacebook BIT NOT NULL DEFAULT 0, 
MatrixCheckCpa BIT NOT NULL DEFAULT 0, 
MatrixCheckLogin BIT NOT NULL DEFAULT 0,
MatrixCheckTrafficGrid BIT NOT NULL DEFAULT 0, 
MatrixCheckAdPack BIT NOT NULL DEFAULT 0,
MatrixCheckExternalBanner BIT NOT NULL DEFAULT 0,
MatrixCheckInText BIT NOT NULL DEFAULT 0,
MatrixCheckPtcOfferWall BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD RequireFocusOnAdvertsSurf BIT NOT NULL DEFAULT 1;

GO

UPDATE ApplicationSettings
SET SSLType = 3 WHERE SSLType = 2

GO

UPDATE CPAOffers
SET RequiredMembership = 1
WHERE RequiredMembership = 0

GO

ALTER TABLE LoginAds ADD PricePaid DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

UPDATE LoginAds SET PricePaid = (SELECT LoginAdsPrice FROM ApplicationSettings);

GO

ALTER TABLE AdPackTypes 
ADD MaxInstancesOfAllAdpacks INT NOT NULL DEFAULT 1;

GO

ALTER TABLE Contests
ADD MinMembersDeposit DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

UPDATE ApplicationSettings SET ExposureCategoriesEnabled = 0 WHERE PTCCategoryPolicy != 1;

GO

UPDATE ApplicationSettings SET ExposureCategoriesEnabled = 1, PTCCategoryPolicy = 0 WHERE PTCCategoryPolicy = 1;

GO
ALTER TABLE Memberships ADD
ExposureMiniClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureMiniDirectClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureMiniRentedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureMicroClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureMicroDirectClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureMicroRentedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureFixedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureFixedDirectClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureFixedRentedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureStandardClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureStandardDirectClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureStandardRentedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureExtendedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureExtendedDirectClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0,
ExposureExtendedRentedClickEarnings DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

BEGIN
	DECLARE @ExposureEnabled BIT;
	SELECT @ExposureEnabled = (SELECT ExposureCategoriesEnabled FROM ApplicationSettings);
	IF NOT EXISTS(SELECT * FROM MembershipProperties WHERE NAME = 'ExposureMiniClickEarnings')
	BEGIN
		INSERT INTO MembershipProperties VALUES ('ExposureMiniClickEarnings', @ExposureEnabled),
										('ExposureMiniDirectClickEarnings', @ExposureEnabled),
										('ExposureMiniRentedClickEarnings', @ExposureEnabled),
										('ExposureMicroClickEarnings', @ExposureEnabled),
										('ExposureMicroDirectClickEarnings', @ExposureEnabled),
										('ExposureMicroRentedClickEarnings', @ExposureEnabled),
										('ExposureFixedClickEarnings', @ExposureEnabled),
										('ExposureFixedDirectClickEarnings', @ExposureEnabled),
										('ExposureFixedRentedClickEarnings', @ExposureEnabled),
										('ExposureStandardClickEarnings', @ExposureEnabled),
										('ExposureStandardDirectClickEarnings', @ExposureEnabled),
										('ExposureStandardRentedClickEarnings', @ExposureEnabled),
										('ExposureExtendedClickEarnings', @ExposureEnabled),
										('ExposureExtendedDirectClickEarnings', @ExposureEnabled),
										('ExposureExtendedRentedClickEarnings', @ExposureEnabled);

	END
END

GO

UPDATE NewAffiliateNetworks SET VarUsername = 'sid1' WHERE DisplayName = 'pointclicktrack.com'

GO

--Drop statistics code, that MUST RUN before every SQL update

DECLARE curAllStats CURSOR  FOR
SELECT 'DROP STATISTICS ' + Schema_NAME(d.Schema_id) + '.' + 
OBJECT_NAME(a.object_id) + '.' + 
a.name colum_name
FROM sys.stats a
INNER JOIN sys.Objects d ON d.Object_id = a.object_id
WHERE auto_created = 0
 
DECLARE  @StatName NVARCHAR(512)
 
OPEN curAllStats
 
FETCH NEXT FROM curAllStats
INTO @StatName
 
WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC(@StatName)
    
    FETCH NEXT FROM curAllStats
    INTO @StatName
  END -- WHILE
 
CLOSE curAllStats
 
DEALLOCATE curAllStats

--Drop statistics code, that MUST RUN before every SQL update

GO

CREATE TABLE [dbo].RentedReferralRangePrices(
[Id] INT PRIMARY KEY IDENTITY,
[MinReferrals] INT NOT NULL,
[MaxReferrals] INT NOT NULL,
[PricePerReferralEnlargedBy] DECIMAL (19,8) NOT NULL,
[AutopayPriceEnlargedBy] DECIMAL (19,8) NOT NULL
);

GO

ALTER TABLE ApplicationSettings 
ADD CountOfMembersFromCountryInGeoLocation BIT NOT NULL DEFAULT 1;

GO

CREATE TABLE dbo.[RentedReferralRenewalDiscounts](
[Id] INT PRIMARY KEY IDENTITY,
[Days] INT NOT NULL,
[DiscountPercent] DECIMAL (5,2) NOT NULL)


GO

ALTER TABLE FamobiGames
ADD RequiredMembershipId INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD EBooksEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD RentedRefAutopayPolicy INT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].EBooks(
[Id] INT PRIMARY KEY IDENTITY,
[Title] NVARCHAR(200) NOT NULL,
[Description] NVARCHAR(MAX) NOT NULL,
[ImgUrl] NVARCHAR(500) NOT NULL,
[EBookUrl] NVARCHAR(500) NOT NULL,
[FileName]  NVARCHAR(200) NOT NULL,
[Status] INT NOT NULL);

GO

ALTER TABLE CPAOffersOnHold
ADD RequiredMembership int NOT NULL default 1;

GO

ALTER TABLE Memberships 
ADD MaxFacebookLikesPerDay INT NOT NULL DEFAULT 99999;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxFacebookLikesPerDay')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('MaxFacebookLikesPerDay', 0)
   END
END;

GO

ALTER TABLE Users ADD FbLikesToday INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD EnabledPayoutDays INT NOT NULL DEFAULT 2222222;

GO

CREATE TABLE [dbo].MatrixLevelCommissions(
[Id] INT PRIMARY KEY IDENTITY,
[DirectRefCount] INT NOT NULL,
[CommissionPercent] DECIMAL NOT NULL,
[Status] INT NOT NULL
);


GO

ALTER TABLE ApplicationSettings
ADD MatrixMaxCreditedLevels INT NOT NULL DEFAULT 6;

GO
ALTER TABLE ApplicationSettings
ADD DefaultBannerDimensionsID INT NOT NULL DEFAULT 1

GO
ALTER TABLE PayeerGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE SolidTrustPayGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE PayPalGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE PayzaGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE NetellerGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE AdvCashGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE OKpayGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE PaparaGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE EgoPayGateways ADD StaticFee DECIMAL(19,8) NOT NULL default 0;
GO
ALTER TABLE EgoPayGateways ADD PercentFee DECIMAL(5, 2) NOT NULL default 0;
GO
ALTER TABLE EgoPayGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE PerfectMoneyGateways ADD WithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE ApplicationSettings ADD BtcWithdrawalFeePercent decimal(5, 2) NOT NULL default 0; 
GO
ALTER TABLE Memberships
ADD NewReferralReward DECIMAL(19,8) NOT NULL DEFAULT 0,
MinReferralEarningsToCreditReward DECIMAL(19,8) NOT NULL DEFAULT 0;
GO
BEGIN
	IF NOT EXISTS(SELECT * FROM MembershipProperties WHERE Name = 'NewReferralReward')
		BEGIN
			INSERT INTO MembershipProperties (Name, Hidden) VALUES ('NewReferralReward', 0)
		END
END
GO
ALTER TABLE Users ADD CreditedRefererReward BIT NOT NULL DEFAULT 1;
GO

GO

CREATE TABLE [dbo].PurchasedItems(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[UnitPrice] DECIMAL(19,8) NOT NULL,
[Quantity] INT NOT NULL,
[Description] NVARCHAR(1000) NOT NULL,
[Tax] DECIMAL(5,2) NOT NULL,
[DateAdded] DATETIME NOT NULL,
[ItemType] INT NOT NULL,
FOREIGN KEY ([UserId]) REFERENCES Users(UserId)
);

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM PurchasedItems)
   BEGIN
       INSERT INTO PurchasedItems SELECT UserId, Amount, 1, PaidFor, 0, WhenMade, 1 FROM CompletedTransactions;
   END
END;

GO

ALTER TABLE Memberships
ADD MaxWithdrawalAllowedPerInvestmentPercent DECIMAL(19,2) NOT NULL DEFAULT 1000000000.00;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxWithdrawalAllowedPerInvestmentPercent')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('MaxWithdrawalAllowedPerInvestmentPercent', 0)
   END
END;

GO

CREATE TABLE [dbo].[MPesaGateways](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CashflowDirections] [int] NOT NULL,
	[CashoutPriority] [int] NOT NULL,
	[IsInstantCashout] [bit] NOT NULL,
	[Username] [varchar](200) NULL,
	[ManualCashoutAfterExceeding] [decimal](19, 8) NULL,
	[OverrideGlobalLimit] [bit] NOT NULL,
	[CashoutLimit] [decimal](19, 8) NULL,
	[StaticFee] [decimal](19, 8) NULL,
	[PercentFee] [decimal](5, 2) NOT NULL DEFAULT 0,
	[MPesaBusinessNumber] [nvarchar](100) NULL,
	WithdrawalFeePercent decimal(5, 2) NOT NULL default 0
);

GO

ALTER TABLE PayoutRequests ADD BalanceType INT NOT NULL DEFAULT 1;

GO

ALTER TABLE Memberships ADD MaxCommissionPayoutsPerDay INT NOT NULL DEFAULT 0;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'MaxCommissionPayoutsPerDay')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('MaxCommissionPayoutsPerDay', 0)
   END
END;

GO

ALTER TABLE ApplicationSettings ADD CommissionBalanceWithdrawalEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD DRFbPointsPerLike INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD CanUsersAddMarketplaceProducts BIT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].[MPesaCodes](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsProceed] [bit] NOT NULL,
	[Code] [nvarchar](200) NULL,
	[Amount] [decimal](19, 8) NULL,
	[Phone] [nvarchar](100) NULL
);

GO

ALTER TABLE ApplicationSettings ADD DefaultBannedPolicyEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD MarketplaceAllowPurchaseFromAdBalance BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD MarketplaceAllowPurchaseFromPaymentProcessors BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD CreditOnlyUsersWhoPuchasedFacebookMembership BIT not null DEFAULT 0;

GO

ALTER TABLE Commissions ADD PointsForAdPackPurchasePercent DECIMAL (5,3) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD TicketsDisabled BIT not null DEFAULT 0;

GO

ALTER TABLE MarketplaceIPNs
ADD DeliveryAddress NVARCHAR(1000) NOT NULL DEFAULT 'none',
BuyerEmail NVARCHAR(100) NOT NULL DEFAULT 'none';

GO

ALTER TABLE Memberships ADD CanUseRefTools BIT NOT NULL DEFAULT 1;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'CanUseRefTools')
   BEGIN
       INSERT INTO MembershipProperties (Name, Hidden) VALUES ('CanUseRefTools', 1)
   END
END;

GO

CREATE TABLE [dbo].LeadershipRanks(
[Id] INT PRIMARY KEY IDENTITY,
[Rank] INT NOT NULL,
[RankName] NVARCHAR(100),
[PrizeKind] INT NOT NULL,
[PrizeValue] NVARCHAR(250) NOT NULL,
[Note] NVARCHAR(250)
);

GO

CREATE TABLE [dbo].LeadershipSystemUsers(
[Id] INT PRIMARY KEY IDENTITY,
[UserId] Int NOT NULL,
[Username] NVARCHAR(50) NOT NULL,
[MaxAccuredRank] INT NOT NULL DEFAULT 0,
[CurrentRank] INT NOT NULL DEFAULT 0
);

GO

CREATE TABLE [dbo].LeadershipRanksRequirements(
[Id] INT PRIMARY KEY IDENTITY,
[Rank] INT NOT NULL,
[RestrictionKind] INT NOT NULL,
[RestrictionValue] INT NOT NULL
);

GO

ALTER TABLE ApplicationSettings ADD LeadershipSystemName NVARCHAR(200) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings ADD LeaderShipSystemEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD AfterLoginPopupEnabled BIT not null DEFAULT 0;
GO

ALTER TABLE ApplicationSettings ADD AfterLoginPopupTitle NVARCHAR(300) NOT NULL DEFAULT '';
GO

ALTER TABLE ApplicationSettings ADD AfterLoginPopupContent NVARCHAR(MAX) NOT NULL DEFAULT '';
GO

ALTER TABLE ApplicationSettings ADD LeadershipSystemDescription NVARCHAR(MAX) NOT NULL DEFAULT '';
GO

BEGIN
   IF NOT EXISTS(SELECT * FROM PurchaseOptions WHERE Feature = 17)
   BEGIN
       INSERT INTO PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled) VALUES (17, 1, 0);
   END
END;

ALTER TABLE ApplicationSettings ADD RegistrationCaptchaEnabled BIT not null DEFAULT 1;
GO

ALTER TABLE ApplicationSettings ADD MarketplaceUsersPromoteByLinkEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD MarketplacePromoteCommission INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Commissions ADD CashBalanceDepositPercent DECIMAL(5, 2) NOT NULL DEFAULT 0;
GO

ALTER TABLE ApplicationSettings ADD SlotMachineEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD SlotMachineMinRewardValue INT NOT NULL DEFAULT 0

GO

ALTER TABLE ApplicationSettings ADD SlotMachineMaxRewardValue INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD SlotMachineMinChancesGiven INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD SlotMachineMaxChancesGiven INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD SlotMachineChances INT NOT NULL DEFAULT 0;

GO

ALTER TABLE SupportTickets ADD FullName nvarchar(50), PhoneNumber nvarchar(50);

GO

ALTER TABLE ApplicationSettings ADD InsertNameWhenCreatingTicketsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD InsertPhoneWhenCreatingTicketsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD GeolocationStatus BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings 
ADD MatrixTypeInt INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ResetPasswordAndPinTogether BIT NOT NULL DEFAULT 0

GO

CREATE TABLE [dbo].InvestmentPlatformPlans(
[Id] INT PRIMARY KEY IDENTITY,
[Number] INT NOT NULL,
[Name] NVARCHAR(500) NOT NULL,
[Price] DECIMAL(19,8) NOT NULL,
[Status] INT NOT NULL,
[Color] NVARCHAR(50) NOT NULL,
[Roi] INT NOT NULL,
[Time] INT NOT NULL,
[BinaryEarning] INT NOT NULL,
[DailyLimit] DECIMAL(19,8) NOT NULL,
[MonthlyLimit] DECIMAL(19,8) NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ShowDirectReferralsFullName BIT NOT NULL DEFAULT 0

GO

ALTER TABLE ApplicationSettings
ADD ShowDirectReferralsPhoneNumber BIT NOT NULL DEFAULT 0

GO

ALTER TABLE ApplicationSettings
ADD ShowDirectReferralsStatus BIT NOT NULL DEFAULT 0

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM PurchaseOptions WHERE Feature = 18)
   BEGIN
       INSERT INTO PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled) VALUES (18, 1, 0);
   END
END;

GO

ALTER TABLE CustomPayoutProcessors
ADD MAxValueOfPendingRequestsPerDay DECIMAL(19,8) NOT NULL DEFAULT 2000000000;

GO

CREATE TABLE [dbo].InvestmentUsersPlans(
	[Id] INT PRIMARY KEY IDENTITY,
	[PlanId] INT NOT NULL,
	[UserId] INT NOT NULL,
	[BalanceBoughtType] INT NOT NULL,
	[PurchasedDate] DATETIME NOT NULL,
	[MoneyReturned] DECIMAL(19,8) NOT NULL,
	[MoneyToReturn] DECIMAL(19,8) NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD MAxValueOfPendingBitcoinRequestsPerDay DECIMAL(19,8) NOT NULL DEFAULT 2000000000;

GO

CREATE TABLE [dbo].ApiAccessTokens(
	[Id] INT PRIMARY KEY IDENTITY,
	[UserId] INT NOT NULL,
	[ExpiresDate] DATETIME NOT NULL,
	[Token] varchar(200) NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD IsProgressiveUpgradeEnabled bit NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD InvestmentPlatformMinAmountToCredited DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE InvestmentUsersPlans
ADD [Status] INT NOT NULL DEFAULT 1;

GO

ALTER TABLE InvestmentUsersPlans
ADD [MoneyInSystem] DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD InvestmentBalance DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentBalanceEnabled BIT NOT NULL DEFAULT 0;

GO
ALTER TABLE ApplicationSettings
ADD CreditToInvestmentBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Jackpots ADD NumberOfWinningTickets INT NOT NULL DEFAULT 1

GO

CREATE TABLE [dbo].JackpotWinningTickets (
	[Id] INT PRIMARY KEY IDENTITY(1,1),
	[JackpotId] INT NOT NULL,
	[UserWinnerId] INT,
	[WinningTicketNumber] INT
)

GO

INSERT INTO [dbo].JackpotWinningTickets
	SELECT [Id], [WinnerId], [WinningTicketNumber]
	FROM Jackpots

GO

ALTER TABLE Jackpots
DROP COLUMN [WinningTicketNumber]

GO

ALTER TABLE Jackpots
DROP COLUMN [WinnerId]

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformSpeedUpOption INT NOT NULL DEFAULT 0

GO

ALTER TABLE ApplicationSettings
ADD ShoutboxShowLastRegistrations BIT NOT NULL DEFAULT 0

GO

ALTER TABLE ApplicationSettings
ADD ResolveReferralsAfterSpecifiedDays INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD ResolveReferralsLimitDate DATETIME;
 
GO

ALTER TABLE Commissions
ADD InvestmentPlanPurchasePercent DECIMAL(5,2) NOT NULL DEFAULT 0

GO

ALTER TABLE InvestmentUsersPlans
ADD FinishDate DATETIME 

GO

ALTER TABLE InvestmentUsersPlans
ADD CurrentMonthPayout DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE DirectReferralPacks
ADD MembershipId INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD DirectReferralMembershipPacksEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].UsersPaymentProcessorsAddresses (
	[Id] INT PRIMARY KEY IDENTITY(1,1),
	[UserId] INT NOT NULL,
	[CustomPayoutProcessorId] INT,
	[AutomaticPaymentProcessorId] varchar(20)
)

GO

ALTER TABLE UsersPaymentProcessorsAddresses
ADD PaymentAddress nvarchar(150) NOT NULL;

GO

ALTER TABLE UsersPaymentProcessorsAddresses
ADD LastChanged datetime;

GO

ALTER TABLE UsersPaymentProcessorsAddresses
ADD ProcessorTypeInt int NOT NULL;

GO

ALTER TABLE UsersPaymentProcessorsAddresses
DROP COLUMN AutomaticPaymentProcessorId;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 1, PayPalEmail, GETDATE() FROM Users WHERE PayPalEmail IS NOT NULL AND PayPalEmail <> '';

GO

ALTER TABLE Users
DROP COLUMN PayPalEmail;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 2, PayzaEmail, GETDATE() FROM Users WHERE PayzaEmail IS NOT NULL AND PayzaEmail <> '';

GO

ALTER TABLE Users
DROP COLUMN PayzaEmail;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 3, PerfectMoneyAccountNo, GETDATE() FROM Users WHERE PerfectMoneyAccountNo IS NOT NULL AND PerfectMoneyAccountNo <> '';

GO

ALTER TABLE Users
DROP COLUMN PerfectMoneyAccountNo;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 4, OKPayWalletID, GETDATE() FROM Users WHERE OKPayWalletID IS NOT NULL AND OKPayWalletID <> '';

GO

ALTER TABLE Users
DROP COLUMN OKPayWalletID;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 6, NetellerEmail, GETDATE() FROM Users WHERE NetellerEmail IS NOT NULL AND NetellerEmail <> '';

GO

ALTER TABLE Users
DROP COLUMN NetellerEmail;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 7, SolidTrustPayAccountID, GETDATE() FROM Users WHERE SolidTrustPayAccountID IS NOT NULL AND SolidTrustPayAccountID <> '';

GO

ALTER TABLE Users
DROP COLUMN SolidTrustPayAccountID;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 8, PayeerAccountID, GETDATE() FROM Users WHERE PayeerAccountID IS NOT NULL AND PayeerAccountID <> '';

GO

ALTER TABLE Users
DROP COLUMN PayeerAccountID;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 10, AdvCashWalletID, GETDATE() FROM Users WHERE AdvCashWalletID IS NOT NULL AND AdvCashWalletID <> '';

GO

ALTER TABLE Users
DROP COLUMN AdvCashWalletID;

GO

INSERT INTO UsersPaymentProcessorsAddresses (UserId, CustomPayoutProcessorId, ProcessorTypeInt, PaymentAddress, LastChanged)
SELECT UserId, 0, 11, PaparaAccountID, GETDATE() FROM Users WHERE PaparaAccountID IS NOT NULL AND PaparaAccountID <> '';

GO

ALTER TABLE Users
DROP COLUMN PaparaAccountID;

GO

ALTER TABLE CustomPayoutProcessors
ADD DaysToBlockWithdrawalsAfterAccounChange INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD MatrixCheckInvestmentPlatform BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformPlansPolicy INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AdPacksCalculatorEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE AdPacksAdverts
ADD [Priority] int NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD S4DSPackages INT NOT NULL DEFAULT 0;

GO

ALTER TABLE OfferRegisterEntries
ADD IsDaily BIT NOT NULL DEFAULT 0;

GO

UPDATE OfferRegisterEntries
SET IsDaily = 1 WHERE OfferId IN (SELECT Id FROM CPAOffers WHERE IsDaily = 1)

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__Enabl__0E391C95

GO

ALTER TABLE ApplicationSettings
DROP COLUMN EnableRefCommissionFromUpgrades

GO

ALTER TABLE Users ADD MarketplaceBalance DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD MarketplaceBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD MarketplaceBalanceDepositEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD MainToMarketplaceBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE AdPackTypes ADD MarketplaceBalanceReturnPercentage INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD CreditLineFee DECIMAL(5,2) NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships ADD MaxCreditLineRequest DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD CreditLineMinimumRegisterDays INT NOT NULL DEFAULT 0;

GO

ALTER TABLE InvestmentPlatformPlans
ADD RequiredMembershipId INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD MarketplaceAllowPurchaseFromMarketplaceBalance BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD InvestmentPlatformCalculatorEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD InvestmentPlatformHistoryEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE InvestmentPlatformPlans
ADD EarningDaysDelay INT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].AntiCheatWhitelistedUsernames(
	[Id] INT PRIMARY KEY IDENTITY,
	[UserId] INT NOT NULL
);

GO


CREATE TABLE dbo.[MarketplaceBalanceLogs](
[Id] INT PRIMARY KEY IDENTITY,
[UserId] INT NOT NULL,
[DateAdded] DATETIME NOT NULL,
[Amount] DECIMAL(19,2) NOT NULL);

GO
ALTER TABLE ApplicationSettings ADD MarketplaceFundsExpireAfterDays INT NOT NULL DEFAULT -1;

GO

ALTER TABLE CPAPostbackLogs
DROP CONSTRAINT FK_CPAPostbackLogs;

GO

ALTER TABLE ApplicationSettings 
ADD PINEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings 
ADD SlotMachineMinWinToDisplayInLatestActivity INT NOT NULL DEFAULT 50;

GO

ALTER TABLE ApplicationSettings
ADD MaxSimultaneousOpenUserTickets INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD ShowLastJackpotsWinnersOnUserDashboard BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE  [dbo].CoAdministratorPrivileges(
	[Id] INT PRIMARY KEY IDENTITY,
	[CoAdministratorId] INT NOT NULL,
	[AccessCategoryInt] INT NOT NULL
	);

GO

ALTER TABLE ApplicationSettings ADD AdvertisersInfoOnSurfPage BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].SupportTicketDepartments
(
	Id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	Name NVARCHAR(100),
	Status INT NOT NULL DEFAULT 0
);

GO

IF NOT EXISTS(SELECT * FROM [dbo].SupportTicketDepartments WHERE Id=1)
INSERT INTO [dbo].SupportTicketDepartments (Name, Status) VALUES ('Default Department',1);

GO

ALTER TABLE [dbo].ApplicationSettings ADD TicketDepartmentsEnabled bit NOT NULL DEFAULT 0

GO

ALTER TABLE [dbo].SupportTickets ADD TicketDepartmentId int NOT NULL DEFAULT 1;

GO
ALTER TABLE [dbo].CoAdministrators ADD AssignedDepartment int NOT NULL DEFAULT 1;

GO

ALTER TABLE CPAOffers ADD OfferLevel VARCHAR(80) NOT NULL DEFAULT '0';

GO

ALTER TABLE ApplicationSettings ADD OfferLevelsEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].FreshClicksPacks(
	[Id] INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(400) NOT NULL,
	[Clicks] INT NOT NULL,
	[Status] INT NOT NULL,
	[Price] DECIMAL(19,2) NOT NULL,
	[AdsPerDay] INT NOT NULL,
	[USAOnly] BIT NOT NULL,
	[USAOnlyPrice] DECIMAL(19,2) NOT NULL
);

GO

CREATE TABLE [dbo].FreshClicksCampaigns(
	[Id] INT PRIMARY KEY IDENTITY,
	[UserId] INT NOT NULL,	
	[FreshPackId] INT NOT NULL,
	[USAOnly] BIT NOT NULL,
	[Status] INT NOT NULL,
	[TargetURL] VARCHAR(400) NOT NULL,
	[OrderDate] DATETIME NOT NULL
);

GO

ALTER TABLE Memberships
ADD AdBalanceBonusForUpgrade DECIMAL(19,2) NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD CashBalanceBonusForUpgrade DECIMAL(19,2) NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD TrafficBalanceBonusForUpgrade DECIMAL(19,2) NOT NULL DEFAULT 0;

GO

IF NOT EXISTS(SELECT * FROM [dbo].MembershipProperties WHERE Name = 'AdBalanceBonusForUpgrade')
INSERT INTO [dbo].MembershipProperties (Name, Hidden) VALUES ('AdBalanceBonusForUpgrade',0);

GO

IF NOT EXISTS(SELECT * FROM [dbo].MembershipProperties WHERE Name = 'CashBalanceBonusForUpgrade')
INSERT INTO [dbo].MembershipProperties (Name, Hidden) VALUES ('CashBalanceBonusForUpgrade',0);

GO

IF NOT EXISTS(SELECT * FROM [dbo].MembershipProperties WHERE Name = 'TrafficBalanceBonusForUpgrade')
INSERT INTO [dbo].MembershipProperties (Name, Hidden) VALUES ('TrafficBalanceBonusForUpgrade',0);

GO

ALTER TABLE ApplicationSettings
ADD AdvertMiniVideoEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD MiniVideoKeepDays INT NOT NULL DEFAULT 30;

GO

ALTER TABLE ApplicationSettings
ADD MiniVideoKeepForUserDays INT NOT NULL DEFAULT 1;

GO

ALTER TABLE Memberships
ADD MiniVideoUploadPrice DECIMAL(19,2) NOT NULL DEFAULT 0;

GO

IF NOT EXISTS(SELECT * FROM [dbo].MembershipProperties WHERE Name = 'MiniVideoUploadPrice')
INSERT INTO [dbo].MembershipProperties (Name, Hidden) VALUES ('MiniVideoUploadPrice',0);

GO

CREATE TABLE [dbo].MiniVideoCategories(
	[Id] INT PRIMARY KEY IDENTITY,
	[CategoryName] VARCHAR(400) NOT NULL,
	[Status] INT NOT NULL;
);

GO

SET IDENTITY_INSERT [dbo].MiniVideoCategories ON;

IF NOT EXISTS(SELECT * FROM [dbo].MiniVideoCategories WHERE CategoryName = 'Other')
INSERT INTO [dbo].MiniVideoCategories (Id,CategoryName) VALUES (100, 'Other');

SET IDENTITY_INSERT [dbo].MiniVideoCategories OFF;

GO

UPDATE Users SET BypassSecurityCheck=5 WHERE UserId IN (SELECT UserId FROM AntiCheatWhitelistedUsernames);

GO

DROP TABLE AntiCheatWhitelistedUsernames

GO

ALTER TABLE ApplicationSettings 
ADD BTCValueMultiplyBy DECIMAL(19,8)
DEFAULT 100 NOT NULL 

GO

ALTER TABLE ApplicationSettings
ADD EntertainmentMiniVideoEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD MiniVideoWatchPrice DECIMAL(19,2) NOT NULL DEFAULT 0;

GO

IF NOT EXISTS(SELECT * FROM [dbo].MembershipProperties WHERE Name = 'MiniVideoWatchPrice')
INSERT INTO [dbo].MembershipProperties (Name, Hidden) VALUES ('MiniVideoWatchPrice',0);

GO

IF NOT EXISTS(SELECT * FROM [dbo].PurchaseOptions WHERE Feature = 19)
INSERT INTO [dbo].PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled) VALUES (19,1,1);

GO

CREATE TABLE [dbo].MiniVideoCampaigns(
	[Id] INT PRIMARY KEY IDENTITY,
	[Username] VARCHAR(400) NOT NULL,
	[Title] VARCHAR(400) NOT NULL,
	[Status] INT NOT NULL,
	[Description] VARCHAR(MAX) NOT NULL,
	[ImageURL] VARCHAR(400) NOT NULL,
	[VideoURL] VARCHAR(400) NOT NULL,
	[VideoCategory] INT NOT NULL,
	[AddedDate] DATETIME NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD IsMulticurrencyPricingEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].UsersMiniVideoCampaigns(
	[Id] INT PRIMARY KEY IDENTITY,
	[VideoId] INT NOT NULL,
	[Username] VARCHAR(400) NOT NULL,
	[BoughtDate] DATETIME NOT NULL
);

GO

ALTER TABLE AdPacksAdverts 
ADD AddedAsType INT 
DEFAULT 4 NOT NULL

GO

CREATE TABLE [dbo].SQLUpdateHistory
(
	Id INT NOT NULL IDENTITY(1,1),
	DatePerformed DATETIME NOT NULL,
	UserName VARCHAR(50) NOT NULL,
	SQLQuery VARCHAR(500)
);

GO

CREATE TABLE [dbo].MiniVideoCategories(
	[Id] INT PRIMARY KEY IDENTITY,
	[CategoryName] VARCHAR(400) NOT NULL,
	[Status] INT NOT NULL
);

GO

SET IDENTITY_INSERT [dbo].MiniVideoCategories ON;

IF NOT EXISTS(SELECT * FROM [dbo].MiniVideoCategories WHERE CategoryName = 'Other')
INSERT INTO [dbo].MiniVideoCategories (Id,CategoryName,Status) VALUES (100, 'Other',1);

SET IDENTITY_INSERT [dbo].MiniVideoCategories OFF;

GO

ALTER TABLE OfferRegisterEntries ADD OfferLevel INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ALTER COLUMN MiniVideoUploadPrice DECIMAL(19,8) NOT NULL;

GO

ALTER TABLE Memberships
ALTER COLUMN MiniVideoWatchPrice  DECIMAL(19,8) NOT NULL;

GO

ALTER TABLE ApplicationSettings ADD CashLinkViewEnabled INT NOT NULL DEFAULT 1;

GO

UPDATE UsersPaymentProcessorsAddresses SET PaymentAddress='' WHERE PaymentAddress='U??????'

GO

ALTER TABLE Commissions
ALTER COLUMN PointsForAdPackPurchasePercent DECIMAL(5,2) NOT NULL;

GO

ALTER TABLE CPAOffersOnHold ADD OfferLevel VARCHAR(2) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD CashLinkCrediterEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE PayPalGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE PerfectMoneyGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE PayzaGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE SolidTrustPayGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE PayeerGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE NetellerGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE AdvCashGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE OKpayGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE PaparaGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE MPesaGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;
ALTER TABLE EgoPayGateways ADD DaysToBlockWithdrawalsAfterAccountChange INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AdvertPaidToPromoteEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD EarnPaidToPromoteEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].PaidToPromotePacks(
	[Id] INT PRIMARY KEY IDENTITY,
	[Price] DECIMAL(19,8) NOT NULL,
	[EndMode] INT NOT NULL,
	[EndValue] INT NOT NULL,
	[Status] INT NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD PaidToPromoteRotationSlotsCount INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD PaitToPromoteBannerDimensionId INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD PaidToPromoteCostPerMillePrice DECIMAL(19,8) NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD PaidToPromoteAdDuration INT NOT NULL DEFAULT 5;

GO

ALTER TABLE ApplicationSettings
ADD PaidToPromoteGeolocationPrice DECIMAL(19,8) NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].PaidToPromoteUsers(
	[Id] INT PRIMARY KEY IDENTITY,
	[UserId] INT NOT NULL,
	[ClicksDelivered] INT NOT NULL,
	[CreditedCPM] INT NOT NULL,
	[ReferralsDelivered] INT NOT NULL
);

GO

CREATE TABLE [dbo].PaidToPromoteAdverts(
	[Id] INT PRIMARY KEY IDENTITY,
	[CreatorId] INT NOT NULL,
	[PackId] INT NOT NULL,
	[Status] INT NOT NULL,
	[TargetUrl] VARCHAR(800) NOT NULL,
	[EndValue] INT NOT NULL,
	[CreationDate] DATETIME NOT NULL,
	[FinishDate] DATETIME,
	[GeolocatedCC] VARCHAR(MAX) NULL,	
);

GO

IF NOT EXISTS(SELECT * FROM [dbo].PurchaseOptions WHERE Feature = 20)
INSERT INTO [dbo].PurchaseOptions (Feature, AdBalanceEnabled, CashBalanceEnabled) VALUES (20,1,0);

GO

CREATE TABLE [dbo].PaidToPromoteTemporaryIPs(
	[Id] INT PRIMARY KEY IDENTITY,
	[IP] VARCHAR(20) NOT NULL,
	[AdvertId] INT NOT NULL,
	[CreditedUser] INT
);

GO 

ALTER TABLE ApplicationSettings ADD BTCTradingPlatformBuyEnabled BIT NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD BTCTradingPlatformSellEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD AmountOfAdsToWatchForcedByAdmin INT NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD AmountOfPointsPerWatchForcedByAdmin INT NOT NULL DEFAULT 0;
ALTER TABLE PtcAdvertPacks ADD PTCPackCashBackPercent INT NOT NULL DEFAULT 0;
ALTER TABLE Users ADD AmountOfWatchedTrafficAdsToday INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Offerwalls
ADD OrderNumber INT NULL

GO

DECLARE @i INT = (SELECT ISNULL(MAX(OrderNumber),0) FROM Offerwalls)
UPDATE Offerwalls
SET OrderNumber  = @i , @i = @i + 1
WHERE OrderNumber IS NULL AND [Status] != 3

GO






CREATE TABLE [dbo].CryptocurrencyTradeOffers(
	[Id]		INT	NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[OfferKind]	INT	NOT NULL,
	[Status]		INT	NOT NULL,
	[CreatorId]	INT	NOT NULL,
	[DateAdded]	DATETIME NOT NULL,
	[DateFinished]	DATETIME,
	[MinPrice]		DECIMAL(28,18) NOT NULL,
	[MaxPrice]	DECIMAL(28,18) NOT NULL,
	[MinOfferValue]	DECIMAL(28,18) NOT NULL,
	[MaxOfferValue]	DECIMAL(28,18) NOT NULL,
	[EscrowTime]	INT NOT NULL, 
	[Description]	VARCHAR(MAX),
	[Amount]		DECIMAL(28,18) NOT NULL,
	[AmountLeft]	DECIMAL(28,18) NOT NULL
);


GO

CREATE TABLE [dbo].CryptocurrencyFinishedTradeOffers(
	[Id]			INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[OfferId]			INT NOT NULL, 
	[BuyerId]			INT NOT NULL,
	[SellerId]			INT NOT NULL,
	[BuyerComment]		VARCHAR(MAX),
	[SellerComment]		VARCHAR(MAX),
	[Rating]			INT NOT NULL, 
	[CCAmount]		DECIMAL(28,18) NOT NULL
);


GO

CREATE TABLE [dbo].CryptocurrencyTradeTransactions(			
	[Id]			INT NOT NULL IDENTITY(1,1) PRIMARY KEY, 
	[OfferId]			INT NOT NULL, 
	[ClientId]			INT NOT NULL,
	[ExecutionTime]		DATETIME NOT NULL,
	[PaymentStatus]		INT NOT NULL,
	[CCAmount]		DECIMAL(28,18) NOT NULL,
	[SellerDescription]		VARCHAR(MAX) 
);


GO

ALTER TABLE ApplicationSettings ADD CCPlatformCryptocurrencySign NVARCHAR(4) NOT NULL DEFAULT (N'฿');
ALTER TABLE ApplicationSettings ADD CCPlatformCryptocurrencyCode NVARCHAR(3) NOT NULL DEFAULT 'BTC';

GO

ALTER TABLE ApplicationSettings ADD AdvertPTCPackCashbackEnabled BIT NOT NULL DEFAULT 0;

GO

DELETE FROM MPesaGateways;

GO

ALTER TABLE MPesaGateways
ADD ProductName nvarchar(100);

GO

ALTER TABLE MPesaGateways
ADD ApiKey nvarchar(300);

GO

CREATE TABLE [dbo].[LocalBitcoinsGateways]
(
	    [Id] INT IDENTITY(1,1) NOT NULL,
	    [IsActive] BIT NOT NULL,
	    [CashflowDirections] INT NOT NULL,
	    [CashoutPriority] INT NOT NULL,
	    [IsInstantCashout] BIT NOT NULL,
	    [Username] VARCHAR(200) NULL,
	    [ManualCashoutAfterExceeding] DECIMAl(19, 8) NULL,
	    [OverrideGlobalLimit] BIT NOT NULL,
	    [CashoutLimit] DECIMAL(19, 8) NULL,
	    [StaticFee] DECIMAL(19, 8) NULL,
	    [PercentFee] DECIMAL(5, 2) NOT NULL DEFAULT 0,
	    [WithdrawalFeePercent] DECIMAL(5, 2) NOT NULL DEFAULT 0,
	    [DaysToBlockWithdrawalsAfterAccountChange] INT NOT NULL DEFAULT 0,
	    [APIKey] VARCHAR(1500) NOT NULL,
	    [APISecret] VARCHAR(200) NOT NULL
);

GO


DROP TABLE MPesaCodes;

GO

UPDATE ApplicationSettings SET CashLinkViewEnabled = 1, CashLinkCrediterEnabled = 0 WHERE IsRevShareEnabled = 0;

GO

UPDATE ApplicationSettings SET CashLinkViewEnabled = 2, CashLinkCrediterEnabled = 1 WHERE IsRevShareEnabled = 1;

GO

UPDATE ApplicationSettings SET EarnAdsEnabled = 1 WHERE EarnCashLinksEnabled = 1;

GO

UPDATE ApplicationSettings SET AdvertAdsEnabled = 1 WHERE AdvertCashLinksEnabled = 1;

GO

UPDATE ApplicationSettings SET StatisticsPTCClicksEnabled = 1 WHERE StatisticsCashLinksEnabled = 1;

GO

UPDATE ApplicationSettings SET EarnCashLinksEnabled = 0;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN AdvertCashLinksEnabled, StatisticsCashLinksEnabled;

GO

ALTER TABLE ApplicationSettings ADD MultiCurrencyProvider INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD ExchangeRateAppIDCode NVARCHAR(50) NOT NULL DEFAULT '';

GO

ALTER TABLE Users ADD FirstActiveDayOfAdPacks DATETIME DEFAULT GETDATE();

GO

ALTER TABLE ApplicationSettings
ADD TransferFromPaymentProcessorsToAdBalanceEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD CoinbaseAddressesPolicy INT NOT NULL DEFAULT 2;

GO

ALTER TABLE Users
ADD AdPackViewedCounter INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformDailyLimitsEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE PayPalGateways
ADD UsesDepreciatedApi BIT NOT NULL DEFAULT 0;

GO

UPDATE PayPalGateways
SET UsesDepreciatedApi  = 1;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformCreditingPolicy INT NOT NULL DEFAULT 0;

GO

ALTER TABLE PayPalGateways
ADD ClientID nvarchar(300) NOT NULL DEFAULT '';

GO

ALTER TABLE PayPalGateways
ADD ClientSecret nvarchar(300) NOT NULL DEFAULT '';

GO

ALTER TABLE InvestmentPlatformPlans
ADD EndBonus DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].UserCryptocurrencyBalances(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[UserId]	INT NOT NULL,
	[Balance]	DECIMAL(28,18) NOT NULL,
	[CurrencyCode] VARCHAR(3) NOT NULL 
);

GO

ALTER TABLE InvestmentUsersPlans
ADD LastWithdrawalDate DATETIME;

GO

ALTER TABLE CoreSettings
ADD CryptocurrencyMaxDecimalPlaces INT NOT NULL DEFAULT 8;

GO

ALTER TABLE UsersPaymentProcessorsAddresses 
ALTER COLUMN PaymentAddress NVARCHAR(600)  NOT NULL;

GO

ALTER TABLE ApplicationSettings
ADD RepresentativesHelpWithdrawalEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD RepresentativesHelpDepositEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD RepresentativesHelpWithdrawalFee DECIMAL(5,2) NOT NULL DEFAULT 0;

GO

ALTER TABLE ConversationMessages
ADD MessageType INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Representatives
ADD DepositInstructions NVARCHAR(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE Representatives
ADD WithdrawalInstructions NVARCHAR(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE ConversationMessages
ADD RepresentativeRequestStatus INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ConversationMessages
ADD RepresentativeTransferAmount DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD RepresentativesIgnoreWitdrawalRules BIT NOT NULL DEFAULT 0;
GO

ALTER TABLE ApplicationSettings
ADD HideAllBannersEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD AdPacksAdsPointsReward INT NOT NULL DEFAULT 0;

GO

DROP TABLE Messages;

GO

ALTER TABLE ConversationMessages ADD IsRead BIT NOT NULL DEFAULT 1;

GO

CREATE TABLE [dbo].RepresentativesPaymentProcessors(
	[Id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[UserId] INT NOT NULL,
	[Name] VARCHAR(200) NOT NULL,
	[LogoPath] VARCHAR(200) NOT NULL,
	[WithdrawalInfo] VARCHAR(MAX),
	[DepositInfo] VARCHAR(MAX)
);

GO

CREATE TABLE [dbo].BitcoinWithdrawalFeePacks(
	[Id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[Fee] DECIMAL(5,2) NOT NULL,
	[WeeksDelay] INT NOT NULL	
);

GO

ALTER TABLE ApplicationSettings
ADD BTCWithdrawalFeePolicyInt INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Applicationsettings ADD RepresentativesEscrowTime INT NOT NULL DEFAULT 60;

GO

ALTER TABLE ApplicationSettings ADD RollDiceLotteryEnabled BIT NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD RollDiceLotteryFeePrice DECIMAL(19,8) NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD RollDiceLotteryGameTime INT NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD RollDiceLotteryLastResultsViewCount INT NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD RollDiceLotteryPrizeMainBalance DECIMAL(19,8) NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD RollDiceLotteryPrizeAdBalance DECIMAL(19,8) NOT NULL DEFAULT 0;
ALTER TABLE ApplicationSettings ADD RollDiceLotteryPrizePoints INT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].RollDiceLotteryParticipants(
	[Id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[UserId] INT NOT NULL,
	[DateOccured] DATETIME NOT NULL,
	[Score] INT NOT NULL,
	[GameTime] INT NOT NULL,
	[NumberOfRolls] INT NOT NULL,
	[StatusInt] INT NOT NULL
);

GO 

ALTER TABLE ApplicationSettings ADD AccountActivationFeeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD AccountActivationFee DECIMAL NOT NULL DEFAULT 10;

GO

ALTER TABLE Commissions ADD AccountActivationFeePercent DECIMAL NOT NULL DEFAULT 0;

GO 

ALTER TABLE ApplicationSettings ADD AccountActivationFeeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD AccountActivationFee DECIMAL NOT NULL DEFAULT 10;

GO

ALTER TABLE Commissions ADD AccountActivationFeePercent DECIMAL NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD AccountActivated BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].[MPesaSapamaGateways]
(
	    [Id] INT IDENTITY(1,1) NOT NULL,
	    [IsActive] BIT NOT NULL,
	    [CashflowDirections] INT NOT NULL,
	    [CashoutPriority] INT NOT NULL,
	    [IsInstantCashout] BIT NOT NULL,
	    [Username] VARCHAR(200) NULL,
	    [ManualCashoutAfterExceeding] DECIMAl(19, 8) NULL,
	    [OverrideGlobalLimit] BIT NOT NULL,
	    [CashoutLimit] DECIMAL(19, 8) NULL,
	    [StaticFee] DECIMAL(19, 8) NULL,
	    [PercentFee] DECIMAL(5, 2) NOT NULL DEFAULT 0,
	    [WithdrawalFeePercent] DECIMAL(5, 2) NOT NULL DEFAULT 0,
	    [DaysToBlockWithdrawalsAfterAccountChange] INT NOT NULL DEFAULT 0,
	    [APIKey] VARCHAR(1500) NOT NULL,
	    [LocationId] INT NOT NULL
);

GO

CREATE TABLE [dbo].[MPesaSapamaCodes](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[IsProceed] [bit] NOT NULL,
	[Code] [nvarchar](200) NULL,
	[Amount] [decimal](19, 8) NULL,
	[Phone] [nvarchar](100) NULL
);

GO

ALTER TABLE BalanceLogs
ALTER COLUMN Amount DECIMAL(28,18);

GO

ALTER TABLE BalanceLogs
ALTER COLUMN AccountState DECIMAL(28,18);

GO

ALTER TABLE  CompletedTransactions
ADD [CryptoCurrencyInfo] VARCHAR(50);

GO

ALTER TABLE CPAOffers
ALTER COLUMN Description NVARCHAR(MAX)


GO

ALTER TABLE CPAOffersOnHOld
ALTER COLUMN Description NVARCHAR(MAX)

GO

ALTER TABLE  MPesaSapamaGateways
ADD [APISecret] VARCHAR(300);;

GO

GO

ALTER TABLE ApplicationSettings DROP CONSTRAINT DF__Applicati__BTCTr__46C92529;

GO

ALTER TABLE ApplicationSettings DROP COLUMN BTCTradingPlatformBuyEnabled; 

GO

ALTER TABLE ApplicationSettings DROP CONSTRAINT DF__Applicati__BTCTr__47BD4962;

GO

ALTER TABLE ApplicationSettings DROP COLUMN BTCTradingPlatformSellEnabled; 

GO

ALTER TABLE ApplicationSettings	 
ADD CryptocurrencyTradingBuyEnabled	BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings	 
ADD CryptocurrencyTradingSellEnabled	BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings	 
ADD IsCoinbaseMerchant BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].RevolutGateways(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[APIKey] VARCHAR(150) NOT NULL,
	[IsActive] BIT NOT NULL,
	[CashflowDirections] INT NOT NULL,
	[CashoutPriority] INT NOT NULL,
	[IsInstantCashout] BIT NOT NULL,
	[Username] VARCHAR(200) NULL,
	[ManualCashoutAfterExceeding] DECIMAl(19, 8) NOT NULL DEFAULT 0,
	[OverrideGlobalLimit] BIT NOT NULL,
	[CashoutLimit] DECIMAL(19, 8) NOT NULL DEFAULT 0,
	[StaticFee] DECIMAL(19, 8) NOT NULL DEFAULT 0,
	[PercentFee] DECIMAL(5, 2) NOT NULL DEFAULT 0,
	[WithdrawalFeePercent] DECIMAL(5, 2) NOT NULL DEFAULT 0,
    [DaysToBlockWithdrawalsAfterAccountChange] INT NOT NULL DEFAULT 0
);

GO

ALTER TABLE ApplicationSettings ADD AccountActivationFeeVia INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD AccountActivationFeeViaCashBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD BlocktrailAPIKey VARCHAR(300);

GO

ALTER TABLE ApplicationSettings 
ADD BlocktrailAPIKeySecret VARCHAR(300);

GO

ALTER TABLE BitcoinAddresses
ADD BlocktrailAddress VARCHAR(300);

GO

ALTER TABLE ApplicationSettings 
ADD BlocktrailWalletIdentifier VARCHAR(300);

GO

ALTER TABLE ApplicationSettings ADD QuickStartGuideEnabled BIT NOT NULL DEFAULT 0;

GO 

ALTER TABLE USERS ADD QuickGuideViewed BIT NOT NULL DEFAULT 0;

GO 

CREATE TABLE [dbo].WelcomeTourSteps(
	[Id]			INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[ContentIdentifier]		INT NOT NULL, 
	[Title]			NVARCHAR(MAX),
	[Content]			NVARCHAR(MAX),
	[Status]			INT NOT NULL,
	[StepOrder]		INT NOT NULL
);

GO

IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=1)
	INSERT INTO WelcomeTourSteps VALUES (1, 'Top Panel', 'Top Panel text', 1, 1);
GO
IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=2)
	INSERT INTO WelcomeTourSteps VALUES (2, 'Language change', 'Language change text', 1, 2);
GO
IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=3)
	INSERT INTO WelcomeTourSteps VALUES (3, 'Currency change', 'Currency change text', 1, 3);
GO
IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=4)
	INSERT INTO WelcomeTourSteps VALUES (4, 'User settings', 'User settings text', 1, 4);
GO
IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=5)
	INSERT INTO WelcomeTourSteps VALUES (5, 'Balances window', 'Balances window text', 1, 5);
GO
IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=6)
	INSERT INTO WelcomeTourSteps VALUES (6, 'Main menu', 'Main menu text', 1, 6);
GO
IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=7)
	INSERT INTO WelcomeTourSteps VALUES (7, 'Windows with statistics and logs', 'Windows with statistics and logs text', 1, 7);

GO


ALTER TABLE ApplicationSettings 
ADD BlocktrailWalletPassword VARCHAR(300);

GO

ALTER TABLE ApplicationSettings
ADD RippleWithdrawalEnabled BIT NOT NULL DEFAULT 0;

GO

EXEC sp_rename 'dbo.BtcWithdrawAddresses', 'CryptocurrencyWithdrawalAddresses'

GO

ALTER TABLE CryptocurrencyWithdrawalAddresses
ADD CryptocurrencyCode VARCHAR(3) NOT NULL DEFAULT 'BTC';

GO

ALTER TABLE BitcoinWithdrawRequests
ADD CryptocurrencyCode VARCHAR(3) NOT NULL DEFAULT 'BTC';

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformLevelsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformLevelsCount INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformMinimumTimeBetweenDeposits INT NOT NULL DEFAULT 5;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformLevelsStartDate DATETIME;

GO

ALTER TABLE CryptocurrencyWithdrawalAddresses
ALTER COLUMN [Address] VARCHAR(160);

GO

ALTER TABLE BitcoinWithdrawRequests
ALTER COLUMN [Address] VARCHAR(160);

GO

CREATE TABLE [dbo].InvestmentTickets(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[ReinvestModeInt] INT NOT NULL,
	[Level] INT NOT NULL,
	[Date] DATETIME NOT NULL,
	[TicketNumber] INT NOT NULL,
	[PlanPrice] DECIMAL(19, 8) NOT NULL
);

GO

ALTER TABLE InvestmentPlatformPlans
ADD LevelFee DECIMAL(19,8) NOT NULL DEFAULT 0,
LevelMaxDepositPerDay INT NOT NULL DEFAULT 0;

GO

UPDATE PtcAdverts
SET BackgroundColor = '#fff' WHERE BackgroundColor = '#42b825';

GO
ALTER TABLE PtcAdverts
ALTER COLUMN BackgroundColor NVARCHAR(30) NOT NULL;

GO

ALTER TABLE PtcAdverts
DROP CONSTRAINT DF__PtcAdvert__Backg__1229A90A

GO

ALTER TABLE PtcAdverts
ADD CONSTRAINT DF__PtcAdvert__Backg__1229A90A DEFAULT '#fff' FOR BackgroundColor

GO

ALTER TABLE CPAOffers
ADD [DeviceType] INT NOT NULL DEFAULT 0;

GO

ALTER TABLE CPAOffersOnHold
ADD [DeviceType] INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD [CPAGPTDeviceTypeDistinctionEnabled] BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__AreCP__72910220;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN AreCPAOffersEnabled;

GO

ALTER TABLE ApplicationSettings
ADD BalancesVisibilityInUserMenuEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD CPAGPTAnonymousAccessEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE SQLUpdateHistory
ALTER COLUMN SQLQuery NVARCHAR(MAX) NULL;

GO

ALTER TABLE OfferRegisterEntries
ADD DeviceTypeInt INT NOT NULL DEFAULT 0;

GO

ALTER TABLE CPAOffers
ADD [MaxGlobalDailySubmits] INT NOT NULL DEFAULT 2000000000;

GO

ALTER TABLE CPAOffersOnHold
ADD [MaxGlobalDailySubmits] INT NOT NULL DEFAULT 2000000000;

GO

ALTER TABLE ApplicationSettings
ADD CPAGPTAutoApprovalEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD CPAGPTDailyNotDailyButtonsEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD AnonymousMemberEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD PayoutEmailMessageEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD PayoutEmailMessage NVARCHAR(MAX) NOT NULL DEFAULT 'Dear %Username%,

Your requested payout (%Amount%) has been processed.
Thank you for choosing our services.

Regards, %Sitename% team';

GO

CREATE TABLE [dbo].JackpotPvpStages(
	[Id]		INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[Name]		VARCHAR(30) NOT NULL, 
	[Cost]		DECIMAL NOT NULL,
	[WinPercent]	INT NOT NULL,
	[Status]		INT NOT NULL,
);

GO

CREATE TABLE [dbo].JackpotPvpStagesBought(
	[Id]		INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[StageId]		INT NOT NULL,
	[UserId]		INT NOT NULL,
	[DateOfBuy]	DATE NOT NULL,
	[BattlesDone]	INT NOT NULL,
	[Active]		BIT NOT NULL 
);

GO




CREATE TABLE [dbo].JackpotPvpBattleHistory(
	[Id]		INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[StageId]		INT NOT NULL,
	[WinnerId]	INT NOT NULL, 
	[LoserId]		INT NOT NULL
);

GO

ALTER TABLE ApplicationSettings ADD PvpJackpotEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD PvpJackpotForceEveryUsertoAlwaysWin BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD PvpJackpotBotWinChancePercent INT NOT NULL DEFAULT 50;

GO

ALTER TABLE ApplicationSettings ADD PvpJackpotBotEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD PvpJackpotOpponentSearchTime int NOT NULL DEFAULT 60;

GO 

ALTER TABLE Commissions ADD JackpotPvpStageBuyFeePercent DECIMAL NOT NULL DEFAULT 0;

GO

-- REMEMBER TO INCLUDE CREATED TABLES IN “CLEANDB_SQL.TXT”, IF HAVE TO

-- Money: DECIMAL(19,8) 
-- CryptocurrencyMoney: DECIMAL(28,18)

DECLARE curAllStats CURSOR  FOR
SELECT 'DROP STATISTICS ' + Schema_NAME(d.Schema_id) + '.' + 
OBJECT_NAME(a.object_id) + '.' + 
a.name colum_name
FROM sys.stats a
INNER JOIN sys.Objects d ON d.Object_id = a.object_id
WHERE auto_created = 0
 
DECLARE  @StatName NVARCHAR(512)
 
OPEN curAllStats
 
FETCH NEXT FROM curAllStats
INTO @StatName
 
WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC(@StatName)
    
    FETCH NEXT FROM curAllStats
    INTO @StatName
  END -- WHILE
 
CLOSE curAllStats
 
DEALLOCATE curAllStats

GO 

ALTER TABLE InvestmentTickets
DROP COLUMN ReinvestModeInt

GO

ALTER TABLE CryptocurrencyWithdrawalAddresses
ALTER COLUMN CryptocurrencyCode VARCHAR(10) NOT NULL;

GO

ALTER TABLE BitcoinWithdrawRequests
ALTER COLUMN CryptocurrencyCode VARCHAR(10) NOT NULL;

GO

ALTER TABLE UserCryptocurrencyBalances
ALTER COLUMN CurrencyCode VARCHAR(10) NOT NULL;

GO

ALTER TABLE InvestmentTickets
ADD StatusInt INT NOT NULL;

GO

ALTER TABLE ApplicationSettings 
ADD BTCWalletEnabled BIT NOT NULL DEFAULT 0;


GO

ALTER TABLE ApplicationSettings 
ADD ERC20TokenWalletEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ICOInfoEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ICOBuyEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ICOHistoryEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ICOPurchaseLimitPerUserPer15mins INT NOT NULL DEFAULT 100;

GO

ALTER TABLE ApplicationSettings
ADD ICOInformationHTML VARCHAR(MAX);

GO

ALTER TABLE ApplicationSettings
ADD ICOStartNewStageIfPreviousEndedEarlierEnabled BIT NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].ICOPurchases(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[UserId] INT NOT NULL,
	[NumberOfTokens] INT NOT NULL,
	[PurchaseTime] DATETIME NOT NULL,
	[NumberOfTokensIncludingReferrers] INT NOT NULL,
	[ICOStageId] INT NOT NULL
);

GO

CREATE TABLE [dbo].ICOStages(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[StartDate] DATETIME NOT NULL,
	[EndDate] DATETIME NOT NULL,
	[TotalAvailableTokens] INT NOT NULL,
	[TokenPrice] DECIMAL(19,8) NOT NULL,
	[Name] VARCHAR(250) NOT NULL,
	[StatusInt] INT NOT NULL,
);

GO



ALTER TABLE Memberships ALTER COLUMN TrafficBalanceBonusForUpgrade decimal(19,8);

GO

ALTER TABLE Memberships ALTER COLUMN AdBalanceBonusForUpgrade decimal(19,8);

GO

ALTER TABLE Memberships ALTER COLUMN CashBalanceBonusForUpgrade decimal(19,8);

GO

INSERT INTO CompletedTransactions (WhenMade, TransactionId,Username, PaidFor, Amount, PaymentProcessor, IsGuest, UserId, Fees, Successful, CryptoCurrencyInfo)
SELECT OperationDate, 'transfered', 'name', 'Deposit BTC', MoneyAmount, 16, 0, UserId, 0.00, 1, 'BTC: ' + Convert(varchar(50),BitcoinAmount) FROM BlockioIPNs
WHERE BitcoinAPIProvider = 3 AND OperationType = 1 AND IsExecuted = 1 AND MoneyAmount = 0;

GO

UPDATE BlockioIPNs SET OperationType = 0 WHERE BitcoinAPIProvider = 3 AND OperationType = 1 AND IsExecuted = 1 AND MoneyAmount = 0;

GO

INSERT INTO CompletedTransactions (WhenMade, TransactionId,Username, PaidFor, Amount,PaymentProcessor,IsGuest,UserId,Fees,Successful,CryptoCurrencyInfo)
SELECT OperationDate, 'transfered', 'name', 'Deposit BTC', MoneyAmount, 14, 0, UserId, 0.00, 1, 'BTC: ' + Convert(varchar(50),BitcoinAmount) FROM BlockioIPNs
WHERE BitcoinAPIProvider = 4 AND OperationType = 1 AND IsExecuted = 1 AND MoneyAmount = 0;

GO

UPDATE BlockioIPNs SET OperationType = 0 WHERE BitcoinAPIProvider = 4 AND OperationType = 1 AND IsExecuted = 1 AND MoneyAmount = 0;

GO

UPDATE CompletedTransactions SET Username = (SELECT Username FROM Users U WHERE U.UserId = CompletedTransactions.UserId) WHERE Username = 'name'

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenName	VARCHAR(50) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenTLA VARCHAR(3) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenContract VARCHAR(50) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenImageUrl VARCHAR(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenDecimalPlaces INT NOT NULL DEFAULT 8;

GO
ALTER TABLE ApplicationSettings ADD ERC20TokenRate DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenDepositsEnabled	 BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20TokenWithdrawalsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD WithdrawalsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD DaysToActivateAddress INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD CachedPrice DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD WithdrawalFee DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD WithdrawalFeePercent DECIMAL(5,2) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD MaxAutomaticPayoutValue DECIMAL(19,8) NOT NULL DEFAULT 10;

GO

ALTER TABLE ApplicationSettings ADD MarketValueEnlargedBy DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD MarketValueMultipliedBy DECIMAL(19,8) NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD ParityUrl VARCHAR(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings 
ADD TransferFromTokenWalletToPurchaseBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD TransferFromBTCWalletToPurchaseBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings 
ADD TransferFromMainBalanceToTokenWalletEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ICOStagesEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Memberships
ADD ICOPurchasePercent DECIMAL(5,2) NOT NULL DEFAULT 0;

GO

ALTER TABLE ICOPurchases
ALTER COLUMN NumberOfTokensIncludingReferrers DECIMAL(28,18) NOT NULL;

GO

ALTER TABLE Users ADD TotalERC20TokensEarnedToDReferer DECIMAL(28,18) NOT NULL DEFAULT 0;

GO

UPDATE ApplicationSettings
SET ReferralsLeadershipEnabled = 0;

GO

ALTER TABLE ApplicationSettings
ADD ProxyProviderType int DEFAULT(1) NOT NULL

GO

ALTER TABLE ApplicationSettings
ADD IpQualityScoreKey varchar(64)

GO

ALTER TABLE ApplicationSettings
ADD HideAdPackTypesWhenOneEnabled bit DEFAULT(0) NOT NULL

GO

ALTER TABLE ApplicationSettings ADD MinimumDepositBTC DECIMAL(28,18) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD AutolocateMembersInBinaryMatrix BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD AdPackPurchasesViaERC20Tokens BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InstantAccrualsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD MatrixBonusMoneyFromLeftLeg DECIMAL(19,8)  NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD MatrixBonusMoneyFromRightLeg DECIMAL(19,8)  NOT NULL DEFAULT 0;

GO

ALTER TABLE Users
ADD MatrixBonusMoneyCyclesToday INT NOT NULL DEFAULT 0;

GO

ALTER TABLE LeadershipRanks
ADD MatrixCyclesPerDay INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD BTCWithdrawalSourceBalance INT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20TokensFreezeSystemEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20TokensFreezeTimeDays INT NOT NULL DEFAULT 1;

GO

ALTER TABLE OfferWalls
ADD UseVirtualCurrencySetting bit NOT NULL Default(1)

GO

ALTER TABLE OfferWalls
ADD MoneyToPointsRate decimal(19, 8) NOT NULL DEFAULT(1000)

GO

CREATE TABLE [dbo].UserFreezedTokens(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[UserId] INT NOT NULL,
	[NumberOfTokens] DECIMAL(28,18) NOT NULL,
	[DateOfAction] DATETIME NOT NULL
);

GO

ALTER TABLE ApplicationSettings
ADD MinimumRippleWithdrawal DECIMAL(28,18) DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicatio__XPub__1293BD5E

GO

ALTER TABLE ApplicationSettings
DROP COLUMN XPub

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__ApiKe__1387E197

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ApiKey

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BlockioApiKey

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BlockioSecretPIN

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__BuyAd__02284B6B

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BuyAdBalanceForBitcoinsEnabled

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__BuyBi__0169315C

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BuyBitCoinsForPointsEnabled

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__BTCEn__147C05D0

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCEnabled

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BitCoinInAdBalanceValue

GO

ALTER TABLE ApplicationSettings
ADD ERC20TokenWithdrawalSourceBalance INT NOT NULL DEFAULT 0

GO

ALTER TABLE Users ADD MatrixBonusMoneyIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

WITH old AS
(
SELECT
	ID
	, ROW_NUMBER() OVER(Partition BY UserId, CryptocurrencyCode Order BY DateAdded DESC) AS rn
FROM
	CryptocurrencyWithdrawalAddresses
)
DELETE c
FROM
	CryptocurrencyWithdrawalAddresses c
	INNER JOIN old o ON c.ID = o.ID
WHERE
	rn > 1

GO

DELETE CryptocurrencyWithdrawalAddresses
WHERE
	Address = '' OR Address = '/'

GO

ALTER TABLE CryptocurrencyWithdrawalAddresses
ADD IsNew bit NOT NULL DEFAULT(0)

GO

ALTER TABLE ApplicationSettings
ADD MinimumERC20TokenWithdrawalValue DECIMAL(28,18) DEFAULT 0;

GO

sp_rename 'BitcoinWithdrawRequests', 'CryptocurrencyWithdrawRequests';

GO

ALTER TABLE Users
ADD
	RegisteredLatitude decimal(12,8) NULL
	, RegisteredLongitude decimal(12,8) NULL

GO

CREATE VIEW dbo.VMemberGeolocation
AS
SELECT
	UserId
	, Username
	, AvatarUrl
	, Country
	, Code AS CountryCode
	, RegisterDate
	, RegisteredLatitude
	, RegisteredLongitude
FROM
	Users

GO

IF NOT EXISTS (SELECT * FROM WelcomeTourSteps WHERE ContentIdentifier=8)
INSERT INTO WelcomeTourSteps VALUES(8,'Earn CPA/GPT','Earn CPA/GPT description',1,8);

GO

ALTER TABLE Users ADD StatsRevShareLastWeekIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsRevShareLastMonthIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsRevShareCurrentWeekIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsRevShareCurrentMonthIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsCommissionsLastWeekIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsCommissionsLastMonthIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsCommissionsCurrentWeekIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE Users ADD StatsCommissionsCurrentMonthIncome DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

CREATE TABLE [dbo].AdPackTypesDailyReturnedPercentageValues(
	[Id] INT IDENTITY(1,1) NOT NULL,
	[AdPackTypeId] INT NOT NULL,	
	[Date] DATE NOT NULL,
	[PercentageValue] DECIMAL(5,2) NOT NULL,
);

GO

ALTER TABLE ApplicationSettings
ADD CustomFacebookLikesEnabled BIT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings
ADD
	IsDefaultReferrerEnabled bit NOT NULL DEFAULT(0)
	, DefaultReferrerId int null

GO

ALTER TABLE Users
ADD
	InvestedIntoPlans decimal(19,8) NOT NULL Default(0)
	, InvestedIntoPlansStructure decimal(19,8) NOT NULL Default(0)

GO

CREATE TABLE dbo.LeadershipInvestmentLevelCommission
(
	Id int IDENTITY(1,1)
	, CommissionLevel int NOT NULL
	, Commission decimal(8,2) NOT NULL
)

GO

ALTER TABLE CryptocurrencyWithdrawRequests
ADD WithdrawalSource INT NOT NULL DEFAULT 0;

GO

ALTER TABLE CryptocurrencyWithdrawRequests
ADD AmountWithFee DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

UPDATE CryptocurrencyWithdrawRequests
SET AmountWithFee = Amount;

GO

ALTER TABLE ApplicationSettings
ADD TitanThemes VARCHAR(300);

GO

CREATE TABLE [dbo].Cryptocurrencies (
	[Id] INT IDENTITY(1,1) NOT NULL,
	[TypeInt] INT NOT NULL,
[Name] NVARCHAR(100) NOT NULL,
	[Code] VARCHAR(30) NOT NULL,
	[WithdrawalEnabled] BIT NOT NULL DEFAULT 0,
	[WithdrawalSource] INT NOT NULL DEFAULT 0,
	[WithdrawalMinimum] DECIMAL(28,18) NOT NULL DEFAULT 0,
	[WithdrawalFeeFixed] DECIMAL(19,8) NOT NULL DEFAULT 0,
	[WithdrawalFeePercent] DECIMAL(5,2) NOT NULL DEFAULT 0,
	[WithdrawalFeePolicy] INT NOT NULL DEFAULT 0,
	WithdrawalApiProcessor INT NOT NULL DEFAULT 0,
	WithdrawalMaximumAutomaticAmount DECIMAL(19,8) NOT NULL DEFAULT 0,
	ActivateUserAddressAfterDays INT NOT NULL DEFAULT 0,
	MaxValueOfPendingRequests DECIMAL(19,8) NOT NULL DEFAULT 2000000000,
	DepositEnabled BIT NOT NULL DEFAULT 0,
	DepositMinimum DECIMAL(28,18) NOT NULL DEFAULT 0,
	DepositMinimumConfirmations INT NOT NULL DEFAULT 0,
	DepositTarget INT NOT NULL DEFAULT 0,
	DepositApiProcessor INT NOT NULL DEFAULT 0,
	MarketPrice DECIMAL(19,8) NOT NULL DEFAULT 0,
	MarketPriceEnlargedBy DECIMAL(19,8) NOT NULL DEFAULT 0,
	MarketPriceMultipliedByPercent DECIMAL(5,2) NOT NULL DEFAULT 100,
);

GO

IF NOT EXISTS (SELECT * FROM Cryptocurrencies WHERE TypeInt=0)
INSERT INTO Cryptocurrencies (TypeInt, Name, Code, DepositTarget) VALUES(0, 'Bitcoin', 'BTC', 2);

GO

IF NOT EXISTS (SELECT * FROM Cryptocurrencies WHERE TypeInt=1)
INSERT INTO Cryptocurrencies (TypeInt, Name, Code, DepositTarget) VALUES(1,'Ethereum','ETH', 2);

GO

IF NOT EXISTS (SELECT * FROM Cryptocurrencies WHERE TypeInt=2)
INSERT INTO Cryptocurrencies (TypeInt, Name, Code, DepositTarget) VALUES(2,'Ripple','XRP', 2);

GO

IF NOT EXISTS (SELECT * FROM Cryptocurrencies WHERE TypeInt=99)
INSERT INTO Cryptocurrencies (TypeInt, Name, Code, DepositTarget) VALUES(99,'Token','ERC20Token', 2);

GO

ALTER TABLE ApplicationSettings DROP CONSTRAINT DF__Applicati__AdPac__74AFEB6A;

GO

ALTER TABLE ApplicationSettings DROP COLUMN AdPackPurchasesViaERC20Tokens;

GO

ALTER TABLE ApplicationSettings ADD AdPackPurchasesViaCommissionBalanceEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE LeadershipRanks
ADD
	PrevRankId int NULL
	, NextRankId int NULL
	, RankStatus int NOT NULL DEFAULT(1)
GO

ALTER TABLE LeadershipRanksRequirements
ADD RankStatus int NOT NULL DEFAULT(1)
GO

UPDATE L
SET
	PrevRankID = ISNULL(p.Id, -1) 
	, NextRankID = ISNULL(n.Id, -1)
FROM
	LeadershipRanks L
	LEFT JOIN LeadershipRanks n ON L.Rank+1 = n.Rank
	LEFT JOIN LeadershipRanks p ON L.Rank-1 = p.Rank
WHERE
	L.RankStatus <> 3

GO

DELETE FROM WelcomeTourSteps WHERE ContentIdentifier = 7;

GO

UPDATE WelcomeTourSteps SET ContentIdentifier = 7 WHERE ContentIdentifier = 8;

GO

CREATE TABLE [dbo].CryptocurrencyApis (
	[Id] INT IDENTITY(1,1) NOT NULL,
	[Name] NVARCHAR(100) NOT NULL,
	[TypeInt] INT NOT NULL,
	[Enabled] BIT NOT NULL DEFAULT 0,
	[Field1] NVARCHAR(300),
	[Field2] NVARCHAR(300),
	[Field3] NVARCHAR(300),
	[Field4] NVARCHAR(300),
	[Field5] NVARCHAR(300)
);


GO

sp_rename 'InvestmentPlatformPlans.LevelMaxDepositPerDay', 'LevelMaxPurchasePerDay', 'COLUMN';

GO

CREATE TABLE [dbo].CryptocurrencyApiOperations (
	[Id] INT IDENTITY(1,1) NOT NULL,
	[CryptocurrencyTypeId] INT NOT NULL,
	[TypeInt] INT NOT NULL,
	[WithdrawalsAvailable] BIT NOT NULL DEFAULT 0,
	[DepositsAvailable] BIT NOT NULL DEFAULT 0
);

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApis WHERE TypeInt=3)
INSERT INTO CryptocurrencyApis (TypeInt, Name) VALUES(3, 'CoinPayments');

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApis WHERE TypeInt=4)
INSERT INTO CryptocurrencyApis (TypeInt, Name) VALUES(4, 'Coinbase');

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApis WHERE TypeInt=5)
INSERT INTO CryptocurrencyApis (TypeInt, Name) VALUES(5, 'Blocktrail');

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApis WHERE TypeInt=6)
INSERT INTO CryptocurrencyApis (TypeInt, Name) VALUES(6, 'Parity');

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApiOperations WHERE TypeInt=4 AND CryptocurrencyTypeId=0)
INSERT INTO CryptocurrencyApiOperations (TypeInt, CryptocurrencyTypeId, WithdrawalsAvailable, DepositsAvailable) 
VALUES(4, 0, 1, 1);

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApiOperations WHERE TypeInt=5 AND CryptocurrencyTypeId=0)
INSERT INTO CryptocurrencyApiOperations (TypeInt, CryptocurrencyTypeId, WithdrawalsAvailable, DepositsAvailable) 
VALUES(5, 0, 1, 1);

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApiOperations WHERE TypeInt=3 AND CryptocurrencyTypeId=0)
INSERT INTO CryptocurrencyApiOperations (TypeInt, CryptocurrencyTypeId, WithdrawalsAvailable, DepositsAvailable) 
VALUES(3, 0, 1, 1);

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApiOperations WHERE TypeInt=3 AND CryptocurrencyTypeId=1)
INSERT INTO CryptocurrencyApiOperations (TypeInt, CryptocurrencyTypeId, WithdrawalsAvailable, DepositsAvailable) 
VALUES(3, 1, 1, 1);

GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApiOperations WHERE TypeInt=3 AND CryptocurrencyTypeId=2)
INSERT INTO CryptocurrencyApiOperations (TypeInt, CryptocurrencyTypeId, WithdrawalsAvailable, DepositsAvailable) 
VALUES(3, 2, 1, 1);


GO

IF NOT EXISTS (SELECT * FROM CryptocurrencyApiOperations WHERE TypeInt=6 AND CryptocurrencyTypeId=99)
INSERT INTO CryptocurrencyApiOperations (TypeInt, CryptocurrencyTypeId, WithdrawalsAvailable, DepositsAvailable) 
VALUES(6, 99, 1, 0);

GO

UPDATE Cryptocurrencies SET 
WithdrawalEnabled = (SELECT IsBitCoinWithdrawalEnabled FROM ApplicationSettings),
WithdrawalSource = (SELECT BTCWithdrawalSourceBalance FROM ApplicationSettings),
WithdrawalMinimum = (SELECT MinimumWithdrawBTC FROM ApplicationSettings),
WithdrawalFeeFixed = (SELECT BtcWithdrawalFee FROM ApplicationSettings),
WithdrawalFeePercent = (SELECT BtcWithdrawalFeePercent FROM ApplicationSettings),
WithdrawalFeePolicy = (SELECT BTCWithdrawalFeePolicyInt FROM ApplicationSettings),
WithdrawalApiProcessor = (SELECT APIProvider FROM ApplicationSettings),
WithdrawalMaximumAutomaticAmount = (SELECT MaxAutomaticBtcPayout FROM ApplicationSettings),
ActivateUserAddressAfterDays = (SELECT DaysToActivateBtcAddress FROM ApplicationSettings),
MaxValueOfPendingRequests = (SELECT MAxValueOfPendingBitcoinRequestsPerDay FROM ApplicationSettings),
DepositEnabled = (SELECT IsBitCoinDepositEnabled FROM ApplicationSettings),
DepositMinimum = (SELECT MinimumDepositBTC FROM ApplicationSettings),
DepositTarget = (SELECT BTCTargetBalance FROM ApplicationSettings),
DepositApiProcessor = (SELECT APIProvider FROM ApplicationSettings),
DepositMinimumConfirmations = (SELECT DepositConfirmationsRequired FROM ApplicationSettings),
MarketPrice =  (SELECT BitCoinValue FROM ApplicationSettings),
MarketPriceEnlargedBy =  (SELECT BTCValueEnlargedBy FROM ApplicationSettings),
MarketPriceMultipliedByPercent =  (SELECT BTCValueMultiplyBy FROM ApplicationSettings)
WHERE Code = 'BTC';

GO

UPDATE Cryptocurrencies SET 
WithdrawalEnabled = (SELECT RippleWithdrawalEnabled FROM ApplicationSettings),
WithdrawalSource = (SELECT BTCWithdrawalSourceBalance FROM ApplicationSettings),
WithdrawalMinimum = (SELECT MinimumRippleWithdrawal FROM ApplicationSettings),
WithdrawalFeeFixed = (SELECT BtcWithdrawalFee FROM ApplicationSettings),
WithdrawalFeePercent = (SELECT BtcWithdrawalFeePercent FROM ApplicationSettings),
WithdrawalFeePolicy = (SELECT BTCWithdrawalFeePolicyInt FROM ApplicationSettings),
WithdrawalApiProcessor = (SELECT APIProvider FROM ApplicationSettings),
WithdrawalMaximumAutomaticAmount = (SELECT MaxAutomaticBtcPayout FROM ApplicationSettings),
ActivateUserAddressAfterDays = (SELECT DaysToActivateBtcAddress FROM ApplicationSettings),
MaxValueOfPendingRequests = (SELECT MAxValueOfPendingBitcoinRequestsPerDay FROM ApplicationSettings)
WHERE Code = 'XRP';

GO

UPDATE Cryptocurrencies SET 
Name = (SELECT ERC20TokenName FROM ApplicationSettings),
Code = (SELECT ERC20TokenTLA FROM ApplicationSettings),
WithdrawalEnabled = (SELECT ERC20TokenWithdrawalsEnabled FROM ApplicationSettings),
WithdrawalSource = (SELECT ERC20TokenWithdrawalSourceBalance FROM ApplicationSettings),
WithdrawalMinimum = (SELECT MinimumERC20TokenWithdrawalValue FROM ApplicationSettings),
ActivateUserAddressAfterDays = (SELECT DaysToActivateAddress FROM ApplicationSettings),
MaxValueOfPendingRequests = (SELECT MAxValueOfPendingBitcoinRequestsPerDay FROM ApplicationSettings),
DepositEnabled = (SELECT ERC20TokenDepositsEnabled FROM ApplicationSettings)
WHERE TypeInt = 99;

GO

UPDATE Cryptocurrencies SET 
WithdrawalEnabled = (SELECT WithdrawalsEnabled FROM ApplicationSettings),
WithdrawalSource = (SELECT ERC20TokenWithdrawalSourceBalance FROM ApplicationSettings),
WithdrawalFeeFixed = (SELECT WithdrawalFee FROM ApplicationSettings),
WithdrawalFeePercent = (SELECT WithdrawalFeePercent FROM ApplicationSettings),
WithdrawalMaximumAutomaticAmount = (SELECT MaxAutomaticPayoutValue FROM ApplicationSettings),
ActivateUserAddressAfterDays = (SELECT DaysToActivateAddress FROM ApplicationSettings),
MaxValueOfPendingRequests = (SELECT MAxValueOfPendingBitcoinRequestsPerDay FROM ApplicationSettings),
MarketPrice =  (SELECT CachedPrice FROM ApplicationSettings),
MarketPriceEnlargedBy =  (SELECT MarketValueEnlargedBy FROM ApplicationSettings),
MarketPriceMultipliedByPercent =  (SELECT MarketValueMultipliedBy FROM ApplicationSettings)
WHERE TypeInt = 1;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentPlatformQueueSystemEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
DROP CONSTRAINT DF__Applicati__Inves__720888E9;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN InvestmentPlatformLevelsCount;

GO

ALTER TABLE InvestmentTickets
ADD UserId INT NOT NULL

GO

CREATE TABLE dbo.RanksUsers
(
	Id int IDENTITY(1,1) NOT NULL
	, UserId int NOT NULL
	, RankId int NOT NULL
	, AquairedDate datetime NOT NULL
	, IsCurrent bit NOT NULL 

	, CONSTRAINT [PK_RankUsers_Id] PRIMARY KEY NONCLUSTERED (Id)
)

GO

INSERT INTO RanksUsers(UserId, RankId, AquairedDate, IsCurrent)
SELECT
	lu.UserId
	, lr.Id AS RankId
	, GETDATE() AS AquairedDate
	, CASE WHEN lu.CurrentRank = lr.Rank THEN 1 ELSE 0 END AS IsCurrent
FROM
	LeadershipRanks lr
	INNER JOIN LeadershipSystemUsers lu ON lr.Rank <= lu.MaxAccuredRank
WHERE
	lr.RankStatus <> 3
EXCEPT
SELECT
	UserId
	, RankId
	, GETDATE() AS AquairedDate
	, IsCurrent
FROM
	RanksUsers
ORDER BY
	UserId
	, RankId


GO

CREATE VIEW dbo.VRanksUsersStatistic
AS
SELECT 
	ROW_NUMBER() OVER(ORDER BY Username) AS Id
	, *
FROM
(
SELECT
	u.Username
	, clr.RankName as CurrentRankName
	, STUFF((SELECT N', ' + lr2.RankName 
		FROM
			RanksUsers ru2
			INNER JOIN LeadershipRanks lr2 ON ru2.RankId = lr2.Id
			WHERE
				ru2.UserId = u.UserId
				AND lr2.RankStatus <> 3
			ORDER BY lr2.Rank
		FOR XML PATH(N'')), 1, 2, N'') AS AcquiredRank
FROM
	RanksUsers ru
	INNER JOIN Users u ON ru.UserId = u.UserId
	INNER JOIN LeadershipRanks lr ON ru.RankId = lr.Id
	LEFT JOIN LeadershipRanks clr ON ru.RankId = clr.Id AND IsCurrent = 1
WHERE
	clr.Id IS NOT NULL
GROUP BY
	u.UserId
	, u.Username
	, clr.RankName
UNION ALL
SELECT
	u.Username
	, '–' as CurrentRankName
	, STUFF((SELECT N', ' + lr2.RankName 
		FROM
			RanksUsers ru2
			INNER JOIN LeadershipRanks lr2 ON ru2.RankId = lr2.Id
			WHERE
				ru2.UserId = u.UserId
				AND lr2.RankStatus <> 3
			ORDER BY lr2.Rank
		FOR XML PATH(N'')), 1, 2, N'') AS AcquiredRank
FROM
	RanksUsers ru
	INNER JOIN Users u ON ru.UserId = u.UserId
	INNER JOIN LeadershipRanks lr ON ru.RankId = lr.Id
GROUP BY
	u.UserId
	, u.Username
HAVING
	SUM(CAST(IsCurrent as int)) = 0
) a


GO

ALTER TABLE ApplicationSettings ADD ERC20StatsReservedSupply DECIMAL(28,18) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20StatsBurnedSupply DECIMAL(28,18) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ERC20StatsCirculatingSupply DECIMAL(28,18) NOT NULL DEFAULT 0;

GO
ALTER TABLE ApplicationSettings ADD ERC20StatsTotalSupply DECIMAL(28,18) NOT NULL DEFAULT 0;

GO

UPDATE Users SET AccountStatus = 'Expired' WHERE AccountStatusInt = 4

GO

UPDATE CryptocurrencyApis SET Enabled = 1 WHERE TypeInt = (SELECT APIProvider FROM ApplicationSettings);

GO

ALTER TABLE ApplicationSettings
ADD MatrixCrediterInt int NOT NULL DEFAULT(0)

GO

ALTER TABLE ApplicationSettings
ADD
	MatrixCyclesFromRank bit NOT NULL DEFAULT(0)
	, MatrixCyclesPerDay int NOT NULL DEFAULT(0)
	, MatrixCyclesBonusMoneyFromLeg decimal(19,8) NOT NULL DEFAULT(0)
	, MatrixCyclesPrizeMoney decimal(19,8) NOT NULL DEFAULT(0)

GO

ALTER TABLE ApplicationSettings ADD CommasInNumbersEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE Cryptocurrencies
ADD WalletEnabled BIT NOT NULL DEFAULT 0;

GO

UPDATE Cryptocurrencies SET WalletEnabled = (SELECT BTCWalletEnabled FROM ApplicationSettings) WHERE TypeInt = 0

GO

UPDATE Cryptocurrencies SET WalletEnabled = (SELECT ERC20TokenWalletEnabled FROM ApplicationSettings) WHERE TypeInt = 99

GO

ALTER TABLE ApplicationSettings
ADD InvestmentProofsEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentProofsNote VARCHAR(250) NOT NULL DEFAULT '';

GO

ALTER TABLE ApplicationSettings
ADD InvestmentProofsWatermarkEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD InvestmentProofsDownloadEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE InvestmentTickets
ADD UserPlanId INT NOT NULL

GO

ALTER TABLE InvestmentTickets
ADD LevelPrice DECIMAL(19,8) NOT NULL

GO

ALTER TABLE InvestmentTickets
ADD LevelFee DECIMAL(19,8) NOT NULL

GO

ALTER TABLE InvestmentTickets
ADD LevelEarnings DECIMAL(19,8) NOT NULL

GO

ALTER TABLE InvestmentTickets
DROP COLUMN PlanPrice

GO

CREATE TABLE dbo.MatrixCommissionLevels
(
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CommissionLevel] [int] NOT NULL,
	[Commission] [decimal](8, 2) NOT NULL

	, CONSTRAINT [PK_MatrixCommissionLevels_Id] PRIMARY KEY NONCLUSTERED (Id)
)

GO

CREATE TABLE [dbo].Articles (
	[Id] INT IDENTITY(1,1) NOT NULL,
	[Title] NVARCHAR(100) NOT NULL,
	[ShortDescription] NVARCHAR(1000) NOT NULL,
	[Text] NVARCHAR(MAX) NOT NULL,
	[VideoURL] NVARCHAR(300) NOT NULL,
	[ImageURL] NVARCHAR(300) NOT NULL,
	[Geolocation] VARCHAR(MAX) NOT NULL,
	[CategoryId] INT NOT NULL,
	[StatusInt] INT NOT NULL,
	[CreatorUserId] INT NOT NULL,
	[CreatedDate] DATETIME NOT NULL,
	[LastUpdatedDate] DATETIME NOT NULL,
	[Keywords] NVARCHAR(MAX) 
);

GO

CREATE TABLE [dbo].ArticleCategories (
	[Id] INT IDENTITY(1,1) NOT NULL,
	[Text] NVARCHAR(MAX) NOT NULL,
	[StatusInt] INT NOT NULL
);


GO

CREATE TABLE [dbo].ArticleViews (
	[Id] INT IDENTITY(1,1) NOT NULL,
	[ArticleId] INT NOT NULL,
	[IP] VARCHAR(45) NOT NULL,
	[ViewDate] DATETIME NOT NULL,
	[InfluencerUserId] INT NOT NULL,
	[InfluencerCredited] BIT NOT NULL DEFAULT 0,
	[CreatorCredited] BIT NOT NULL DEFAULT 0
);

GO

ALTER TABLE Memberships
ADD ArticleCreatorCPM DECIMAL(19,8) NOT NULL DEFAULT 0.5;

GO

ALTER TABLE Memberships
ADD ArticleInfluencerCPM DECIMAL(19,8) NOT NULL DEFAULT 0.3;

GO

ALTER TABLE PtcAdverts
DROP CONSTRAINT DF__PtcAdvert__Backg__1229A90A;

GO

ALTER TABLE PtcAdverts
ADD CONSTRAINT DF__PtcAdvert__Backg__1229A90A DEFAULT '#ffffff' FOR BackgroundColor;

GO

UPDATE PtcAdverts
SET BackgroundColor = '#ffffff' WHERE BackgroundColor = '#fff';

GO

GO

EXEC sp_rename 'MatrixLevelCommissions', 'MatrixCommissionReferralLevels'

GO

ALTER TABLE PtcAdverts
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE BannerAdverts
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE FacebookAdverts
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE TrafficExchangeAdverts
ADD TargetBalance INT NOT NULL DEFAULT 5;

GO

ALTER TABLE TrafficGridAdverts
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ExternalBannerAdverts
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE InTextAdverts
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE LoginAds
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE CPAOffers
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE CPAOffersOnHold
ADD TargetBalance INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangeStockType INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangePurchaseVia INT NOT NULL DEFAULT 2;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangeBuforTimeMinutes INT NOT NULL DEFAULT 1;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangeBidCommissionPercent DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangeAskCommissionPercent DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ContestLatestWinners ALTER COLUMN Winner1 NVARCHAR(120);

GO

ALTER TABLE ContestLatestWinners ALTER COLUMN Winner2 NVARCHAR(120);

GO

ALTER TABLE ContestLatestWinners ALTER COLUMN Winner3 NVARCHAR(120);

GO

ALTER TABLE AllContestLatestWinners2 ALTER COLUMN Winner1 NVARCHAR(120);

GO

ALTER TABLE AllContestLatestWinners2 ALTER COLUMN Winner2 NVARCHAR(120);

GO

ALTER TABLE AllContestLatestWinners2 ALTER COLUMN Winner3 NVARCHAR(120);

GO

ALTER TABLE ApplicationSettings
DROP COLUMN IsBitCoinWithdrawalEnabled;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCWithdrawalSourceBalance;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MinimumWithdrawBTC;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BtcWithdrawalFee;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCWithdrawalFeePolicyInt;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN APIProvider;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MaxAutomaticBtcPayout;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN DaysToActivateBtcAddress;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MAxValueOfPendingBitcoinRequestsPerDay;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN IsBitCoinDepositEnabled;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MinimumDepositBTC;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCTargetBalance;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BitCoinValue;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCValueEnlargedBy;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCValueMultiplyBy;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BtcWithdrawalFeePercent;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN DepositConfirmationsRequired;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MinimumRippleWithdrawal;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN RippleWithdrawalEnabled;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenName;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenTLA;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenDepositsEnabled;

GO


ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenWithdrawalsEnabled;

GO


ALTER TABLE ApplicationSettings
DROP COLUMN WithdrawalsEnabled;

GO


ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenWithdrawalSourceBalance;

GO


ALTER TABLE ApplicationSettings
DROP COLUMN CachedPrice;

GO


ALTER TABLE ApplicationSettings
DROP COLUMN DaysToActivateAddress;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MaxAutomaticPayoutValue;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN MinimumERC20TokenWithdrawalValue;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN WithdrawalFeePercent;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenName;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenName;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenName;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN BTCWalletEnabled;

GO

ALTER TABLE ApplicationSettings
DROP COLUMN ERC20TokenWalletEnabled;

GO

ALTER TABLE ApplicationSettings
ADD NewsHomepageEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD NewsSharingArticlesEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD NewsWritingArticlesEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD ChoosedLanguages VARCHAR(MAX) NOT NULL DEFAULT 'en-US#pl-PL#es-ES#fr-FR#pt-PT#de-DE#ru-RU#id-ID#tr-TR';

GO

ALTER TABLE ApplicationSettings
ADD DefaultLanguage VARCHAR(10) NOT NULL DEFAULT 'en-US';

GO

ALTER TABLE ArticleCategories
ADD CountryCode varchar(3);

GO

ALTER TABLE Articles
ADD Clicks INT NOT NULL DEFAULT 0;

GO

ALTER TABLE Articles
ADD OriginalTitleLink NVARCHAR(300);

GO

CREATE PROCEDURE dbo.TryAddArticleView 
    @ArticleId INT, 
    @IP varchar(45),
    @InfluencerUserId INT = -1 
AS 
    SET NOCOUNT ON;
    IF NOT EXISTS (SELECT Id FROM ArticleViews WHERE ArticleId = @ArticleId AND IP = @IP) 
	BEGIN
	   INSERT INTO ArticleViews (ArticleId, IP, ViewDate, InfluencerUserId, InfluencerCredited, CreatorCredited)
	   VALUES (@ArticleId, @IP, GETDATE(), @InfluencerUserId, 0, 0);
	   UPDATE Articles SET Clicks = Clicks + 1 WHERE Id = @ArticleId;
	END
GO

CREATE TABLE [dbo].InternalExchangeBids
(
	BidId int IDENTITY(1,1)
	, BidUserId int NOT NULL
	, BidAmount decimal(28,18) NOT NULL
	, BidValue decimal(28,18) NOT NULL
	, BidDate datetime NOT NULL

	, CONSTRAINT [PK_InternalExchangeBids_BidId] PRIMARY KEY NONCLUSTERED (BidId)
)

GO

CREATE TABLE [dbo].InternalExchangeAsks
(
	AskId int IDENTITY(1,1)
	, AskUserId int NOT NULL
	, AskAmount decimal(28,18) NOT NULL
	, AskValue decimal(28,18) NOT NULL
	, AskDate datetime NOT NULL

	, CONSTRAINT [PK_InternalExchangeAsks_AskId] PRIMARY KEY NONCLUSTERED (AskId)
)

GO

CREATE TABLE [dbo].InternalExchangeTransactions
(
	TransactionId int IDENTITY(1,1)
	, AskUserId int NOT NULL
	, BidUserId int NOT NULL
	, TransactionAmount decimal(28,18) NOT NULL
	, TransactionValue decimal(28,18) NOT NULL
	, TransactionDate datetime NOT NULL
	, IsAsk bit NOT NULL
	, GraphGroupId AS
		DATEPART(YEAR, TransactionDate) * 1000000
		+ DATEPART(MONTH, TransactionDate) * 10000
		+ DATEPART(DAY, TransactionDate) * 100
		+ DATEPART(HOUR, TransactionDate)
		+ CAST((DATEPART(MINUTE, TransactionDate) / 15) AS float) / 100
		PERSISTED NOT NULL

	, CONSTRAINT [PK_InternalExchangeTransactions_TransactionId] PRIMARY KEY NONCLUSTERED (TransactionId)
)

GO

ALTER TABLE ApplicationSettings
ADD 
	InternalExchangeLockWithdraw bit NOT NULL DEFAULT(1)
	, InternalExchangeLockWithdrawTime int NOT NULL DEFAULT(60)

GO

CREATE FUNCTION dbo.GetBalanceColumn
(
	@Balance int = 0
)
RETURNS varchar(50)
AS
BEGIN
DECLARE @result varchar(50) =

CASE @Balance
	WHEN 1 THEN 'Balance1'
	WHEN 2 THEN 'Balance3'
	WHEN 3 THEN 'Balance2'
	WHEN 4 THEN 'Balance4'
	WHEN 6 THEN 'CommissionBalance'
	WHEN 7 THEN 'PTCCredits'
	WHEN 8 THEN 'CashBalance'
	WHEN 9 THEN 'InvestmentBalance'
	WHEN 10 THEN 'MarketplaceBalance'
	
	WHEN 11 THEN 'BTC'
	WHEN 12 THEN 'ETH'
	WHEN 13 THEN 'XRP'
	WHEN 14 THEN 'ERC20Token'--'Coin'
	WHEN 15 THEN 'ERCFreezed'--'FreezedCoin'
	ELSE 'Error'
END

RETURN @result

END

GO

CREATE PROCEDURE dbo.up_AddBalance
(
	@UserId int
	, @Note nvarchar(200)
	, @Amount decimal(28,18)
	, @BalanceType int
	, @BalanceLogType int
) AS

-- Choose proper balance column
DECLARE @BalanceColumn varchar(50) = dbo.GetBalanceColumn(@BalanceType)
DECLARE @Balance decimal(28,18)
IF @BalanceColumn = 'Error'
	THROW 50000, 'Unknown Balance Type', 1

-- Select BALANCE value
DECLARE @query nvarchar(Max) =
CASE
	WHEN @BalanceType <= 10 THEN
		N'SELECT @BalanceOut =' + @BalanceColumn + ' FROM Users WHERE UserId = @UserId'
	ELSE
		N'SELECT @BalanceOut = Balance FROM UserCryptocurrencyBalances WHERE UserId = @UserId AND CurrencyCode = ''' + @BalanceColumn + ''''
END

DECLARE @queryParam nvarchar(Max) = N'@UserId int, @BalanceOut decimal(28,18) OUTPUT'

EXEC sp_executesql @query, @queryParam, @UserId = @UserId, @BalanceOut = @Balance OUTPUT

-- If cryptocurrency not exist insert record
IF @Balance IS NULL AND @BalanceType > 10
BEGIN
	INSERT INTO UserCryptocurrencyBalances
	VALUES
	(
		@UserId
		, 0
		, @BalanceColumn
	)

	SET @Balance = 0
END

-- Update Balance
SET @query=
CASE
	WHEN @BalanceType <= 10 THEN
		N'UPDATE Users SET ' + @BalanceColumn + ' = @NewBalance FROM Users WHERE UserId = @UserId'
	ELSE
		N'UPDATE UserCryptocurrencyBalances SET Balance = @NewBalance WHERE UserId = @UserId AND CurrencyCode = ''' + @BalanceColumn + ''''
END

SET @queryParam = N'@UserId int, @NewBalance decimal(28,18)'
SET @Balance = @Balance + @Amount

EXEC sp_executesql @query, @queryParam
	, @UserId = @UserId
	, @NewBalance = @Balance

-- Insert Balance Log
INSERT INTO BalanceLogs
(
	UserId
	, DateOccured
	, Note
	, Amount
	, Balance
	, AccountState
	, BalanceLogType
)
VALUES
(
	@UserId
	, GETDATE()
	, @Note
	, @Amount
	, @BalanceType
	, @Balance
	, @BalanceLogType
)

GO

CREATE PROCEDURE dbo.up_InternalExchangeAsk
(
	@AskUserId int
	, @AskAmount decimal(28,18)
	, @AskValue decimal(28,18)	
)
AS
BEGIN TRANSACTION

BEGIN TRY

IF OBJECT_ID('#AskTransaction', 'U') IS NOT NULL
	DROP TABLE #AskTransaction

DECLARE
	@AskNewOfferAmount decimal(28,18)
	, @AskAmountNegative decimal(28,18)
	, @CommissionPercentBid decimal(19,8)
	, @CommissionPercentAsk decimal(19,8)
DECLARE
	@StockBalanceType int
	, @PriceBalanceType int
	, @BalanceLogType int = 100
DECLARE
	@ResponsAmountTransferd decimal(28,18) = 0
	, @ResponsValueTransferd decimal(28,18) = 0
	, @ResponsAmountPlaced decimal(28,18) = 0
	, @ResponsValuePlaced decimal(28,18) = 0

SELECT
	@StockBalanceType = InternalExchangeStockType
	, @PriceBalanceType = InternalExchangePurchaseVia
	, @CommissionPercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @CommissionPercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

-- UPDATE User ASK Balance
SET @AskAmountNegative = -@AskAmount

EXEC dbo.up_AddBalance
	@UserId = @AskUserId
	, @Note = 'Internal Exchange Ask offer'
	, @Amount = @AskAmountNegative
	, @BalanceType = @StockBalanceType
	, @BalanceLogType = @BalanceLogType

SET @AskAmountNegative = @AskAmountNegative * @AskValue * @CommissionPercentAsk

EXEC dbo.up_AddBalance
	@UserId = @AskUserId
	, @Note = 'Internal Exchange Ask offer fee'
	, @Amount = @AskAmountNegative
	, @BalanceType = @PriceBalanceType
	, @BalanceLogType = @BalanceLogType

--SELECT Possible BID offers
;
WITH bids As
(
	SELECT
		BidId
		, BidAmount
		, BidAmount - @AskAmount AS LeftBidAmount
		, ROW_NUMBER() OVER (ORDER BY BidValue DESC, BidDate ASC) AS BidOrder
	FROM
		InternalExchangeBids b WITH (TABLOCK, HOLDLOCK)
	WHERE
		@AskValue <= b.BidValue
),
transactions AS
(
	SELECT
		BidId
		, BidAmount
		, BidOrder
		, CAST(LeftBidAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN LeftBidAmount < 0
				THEN b.BidAmount
			ELSE
				(b.BidAmount - LeftBidAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		bids b
	WHERE
		BidOrder = 1
	UNION ALL
	SELECT
		b.BidId
		, b.BidAmount
		, b.BidOrder
		, CAST(b.BidAmount + a.LeftBidAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN b.BidAmount + a.LeftBidAmount < 0
				THEN b.BidAmount
			ELSE
				(- a.LeftBidAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		bids b
		INNER JOIN transactions a ON b.BidOrder = a.BidOrder+1
	WHERE
		a.LeftBidAmount < 0
)
SELECT
	*
INTO
	#AskTransaction
FROM
	transactions

-- UPDATE Users Ask and Bid Balances
DECLARE
	@CursorAskUserId int
	, @CursorBidUserId int
	, @CursorAddAskBalance decimal(28,18)
	, @CursorAddBidBalance decimal(28,18)

DECLARE transactions CURSOR FORWARD_ONLY FOR
SELECT
	@AskUserId AS AskUserId
	, b.BidUserId AS BidUserId
	, a.Buyed * b.BidValue AS AddAskBalance
	, a.Buyed AS AddBidBalance
FROM
	#AskTransaction a WITH (TABLOCK, HOLDLOCK)
	INNER JOIN InternalExchangeBids b ON a.BidId = b.BidId

OPEN transactions;
FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorAddBidBalance;
WHILE @@FETCH_STATUS = 0
BEGIN    
	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer finalize'
		, @Amount = @CursorAddAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer finalize'
		, @Amount = @CursorAddBidBalance
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

	SET @ResponsAmountTransferd = @ResponsAmountTransferd + @CursorAddBidBalance
	SET @ResponsValueTransferd = @ResponsValueTransferd + @CursorAddAskBalance

    FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorAddBidBalance;
END;


-- INSERT InternalExchangeTransactions
INSERT INTO InternalExchangeTransactions WITH (TABLOCK, HOLDLOCK)
SELECT
	@AskUserId AS AskUserId
	, b.BidUserId
	, a.Buyed AS TransactionAmount
	, b.BidValue AS TransactionValue
	, GETDATE() AS TransactionDate
	, 1
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId

-- DELETE BID Offers
DELETE b
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId
WHERE
	b.BidAmount - a.Buyed <= 0

-- UPDATE BID Offers amount 
UPDATE b
SET
	BidAmount = b.BidAmount - a.Buyed
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId
WHERE
	b.BidAmount - a.Buyed > 0

-- INSERT ASK Offer if necessery
SELECT
	@AskNewOfferAmount = ISNULL((SELECT -Max(LeftBidAmount) FROM #AskTransaction), @AskAmount)

IF @AskNewOfferAmount > 0
BEGIN
	;
	MERGE InternalExchangeAsks AS t
	USING (SELECT @AskUserId, @AskValue) AS s (AskUserId, AskValue)
		ON (t.AskUserId = s.AskUserId AND t.AskValue = s.AskValue)
	WHEN MATCHED THEN
		UPDATE SET
			AskAmount = AskAmount + @AskNewOfferAmount
	WHEN NOT MATCHED THEN
	INSERT VALUES
	(
		@AskUserId
		, @AskNewOfferAmount
		, @AskValue
		, GETDATE()
	);

	SET @ResponsAmountPlaced = @AskNewOfferAmount
	SET @ResponsValuePlaced = @AskValue
END

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;

SELECT
	1 AS Id
	, @ResponsAmountTransferd AS AmountTransferd
	, @ResponsValueTransferd AS ValueTransferd
	, @ResponsAmountPlaced AS AmountPlaced
	, @ResponsValuePlaced AS ValuePlaced

GO

CREATE PROCEDURE dbo.up_InternalExchangeBid
(
	@BidUserId int
	, @BidAmount decimal(28,18)
	, @BidValue decimal(28,18)
)
AS
BEGIN TRANSACTION

BEGIN TRY

IF OBJECT_ID('#BidTransaction', 'U') IS NOT NULL
	DROP TABLE #BidTransaction

DECLARE
	@BidNewOfferAmount decimal(28,18)
	, @BidValueNegative decimal(28,18)
	, @CommissionPercentBid decimal(19,8)
	, @CommissionPercentAsk decimal(19,8)
DECLARE
	@StockBalanceType int
	, @PriceBalanceType int
	, @BalanceLogType int = 100
DECLARE
	@ResponsAmountTransferd decimal(28,18) = 0
	, @ResponsValueTransferd decimal(28,18) = 0
	, @ResponsAmountPlaced decimal(28,18) = 0
	, @ResponsValuePlaced decimal(28,18) = 0

SELECT
	@StockBalanceType = InternalExchangeStockType
	, @PriceBalanceType = InternalExchangePurchaseVia
	, @CommissionPercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @CommissionPercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

-- UPDATE User ASK Balance

SET @BidValueNegative = -@BidAmount * @BidValue * @CommissionPercentBid

EXEC dbo.up_AddBalance
	@UserId = @BidUserId
	, @Note = 'Internal Exchange Bid offer fee'
	, @Amount = @BidValueNegative
	, @BalanceType = @PriceBalanceType
	, @BalanceLogType = @BalanceLogType

--SELECT Possible ASK offers
;
WITH asks As
(
	SELECT
		AskId
		, AskAmount
		, AskAmount - @BidAmount AS LeftAskAmount
		, ROW_NUMBER() OVER (ORDER BY AskValue ASC, AskDate ASC) AS AskOrder
	FROM
		InternalExchangeAsks a WITH (TABLOCK, HOLDLOCK)
	WHERE
		@BidValue >= a.AskValue
),
transactions AS
(
	SELECT
		AskId
		, AskAmount
		, AskOrder
		, CAST(LeftAskAmount as decimal(28,18)) AS LeftAskAmount
		, CAST(CASE
			WHEN LeftAskAmount < 0
				THEN a.AskAmount
			ELSE
				(a.AskAmount - LeftAskAmount)
		END as decimal(28,18)) AS Selled
	FROM
		asks a
	WHERE
		AskOrder = 1
	UNION ALL
	SELECT
		a.AskId
		, a.AskAmount
		, a.AskOrder
		, CAST(a.AskAmount + b.LeftAskAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN a.AskAmount + b.LeftAskAmount < 0
				THEN a.AskAmount
			ELSE
				(- b.LeftAskAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		asks a
		INNER JOIN transactions b ON a.AskOrder = b.AskOrder+1
	WHERE
		b.LeftAskAmount < 0
)
SELECT
	*
INTO
	#BidTransaction
FROM
	transactions

-- UPDATE Users Ask AND Bid Balances
DECLARE
	@CursorAskUserId int
	, @CursorBidUserId int
	, @CursorAddAskBalance decimal(28,18)
	, @CursorSubAskBalance decimal(28,18)
	, @CursorAddBidBalance decimal(28,18)

DECLARE transactions CURSOR FORWARD_ONLY FOR
SELECT
	a.AskUserId
	, @BidUserId AS BidUserId
	, b.Selled * a.AskValue AS AddAskBalance1
	, -b.Selled * a.AskValue AS SubAskBalance1
	, b.Selled AS AddBidBalance2
FROM
	#BidTransaction b WITH (TABLOCK, HOLDLOCK)
	INNER JOIN InternalExchangeAsks a ON b.AskId = a.AskId


OPEN transactions;
FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorSubAskBalance, @CursorAddBidBalance;
WHILE @@FETCH_STATUS = 0
BEGIN    
	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer finalize'
		, @Amount = @CursorAddAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer finalize'
		, @Amount = @CursorAddBidBalance
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer finalize'
		, @Amount = @CursorSubAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	SET @ResponsAmountTransferd = @ResponsAmountTransferd + @CursorAddBidBalance
	SET @ResponsValueTransferd = @ResponsValueTransferd + @CursorAddAskBalance

    FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorSubAskBalance, @CursorAddBidBalance;
END;

---- INSERT InternalExchangeTransactions
INSERT INTO InternalExchangeTransactions WITH (TABLOCK, HOLDLOCK)
(
	AskUserId
    , BidUserId
    , TransactionAmount
    , TransactionValue
    , TransactionDate
    , IsAsk
)
SELECT
	a.AskUserId
	, @BidUserId AS BidUserId
	, b.Selled AS TransactionAmount
	, a.AskValue AS TransactionValue
	, GETDATE() AS TransactionDate
	, 0
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON b.AskId = a.AskId

-- DELETE ASK Offers
DELETE a
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON a.AskId = b.AskId
WHERE
	a.AskAmount - b.Selled <= 0
	
-- UPDATE ASK Offers amount 
UPDATE a
SET
	AskAmount = a.AskAmount - b.Selled
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON a.AskId = b.AskId
WHERE
	a.AskAmount - b.Selled > 0

-- INSERT BID Offer if necessery
SELECT
	@BidNewOfferAmount = ISNULL((SELECT -Max(LeftAskAmount) FROM #BidTransaction), @BidAmount)

IF @BidNewOfferAmount > 0
BEGIN
	;
	MERGE InternalExchangeBids AS t
	USING (SELECT @BidUserId, @BidValue) AS s (BidUserId, BidValue)
		ON (t.BidUserId = s.BidUserId AND t.BidValue = s.BidValue)
	WHEN MATCHED THEN
		UPDATE SET
			BidAmount = BidAmount + @BidNewOfferAmount
	WHEN NOT MATCHED THEN
	INSERT VALUES
	(
		@BidUserId
		, @BidNewOfferAmount
		, @BidValue
		, GETDATE()
	);


	SET @BidValueNegative = -@BidNewOfferAmount * @BidValue
	EXEC dbo.up_AddBalance
		@UserId = @BidUserId
		, @Note = 'Internal Exchange Bid offer'
		, @Amount = @BidValueNegative
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	SET @ResponsAmountPlaced = @BidNewOfferAmount
	SET @ResponsValuePlaced = @BidValue
END

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;
	
	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT TRANSACTION;

SELECT
	1 AS Id
	, @ResponsAmountTransferd AS AmountTransferd
	, @ResponsValueTransferd AS ValueTransferd
	, @ResponsAmountPlaced AS AmountPlaced
	, @ResponsValuePlaced AS ValuePlaced

GO

CREATE PROCEDURE dbo.up_InternalExchangeWithdrawAsk
(
	@OfferId int
	, @UserId int
)
AS
BEGIN TRANSACTION

BEGIN TRY

	DECLARE
		@StockBalanceType int
		, @PriceBalanceType int
		, @BalanceLogType int = 100
		, @RetrunAmount decimal(28,18)

	SELECT
		@StockBalanceType = InternalExchangeStockType
		, @PriceBalanceType = InternalExchangePurchaseVia
	FROM
		ApplicationSettings

	DECLARE @InternalExchangeAsk TABLE
	(
		AskId int NOT NULL
		, AskUserId int NOT NULL
		, AskAmount decimal(28,18) NOT NULL
		, AskValue decimal(28,18) NOT NULL
		, AskDate datetime NOT NULL
	)

	--Delete Offer
	DELETE InternalExchangeAsks WITH (TABLOCK, HOLDLOCK)
	OUTPUT DELETED.* INTO @InternalExchangeAsk
	WHERE
		AskId = @OfferId
		AND AskUserId = @UserId
	
	--Check is offer available
	IF NOT EXISTS(SELECT * FROM @InternalExchangeAsk)
		THROW 50000, 'This offer is no longer valid', 1
	


	--Return offer Value
	SELECT
		@RetrunAmount = AskAmount
	FROM 
		@InternalExchangeAsk

	EXEC dbo.up_AddBalance
		@UserId = @UserId
		, @Note = 'Internal Exchange Ask offer withdraw'
		, @Amount = @RetrunAmount
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;

GO

CREATE PROCEDURE dbo.up_InternalExchangeWithdrawBid
(
	@OfferId int
	, @UserId int
)
AS
BEGIN TRANSACTION

BEGIN TRY

	DECLARE
		@StockBalanceType int
		, @PriceBalanceType int
		, @BalanceLogType int = 100
		, @RetrunAmount decimal(28,18)

	SELECT
		@StockBalanceType = InternalExchangeStockType
		, @PriceBalanceType = InternalExchangePurchaseVia
	FROM
		ApplicationSettings

	DECLARE @InternalExchangeBid TABLE
	(
		BidId int NOT NULL
		, BidUserId int NOT NULL
		, BidAmount decimal(28,18) NOT NULL
		, BidValue decimal(28,18) NOT NULL
		, BidDate datetime NOT NULL
	)

	--Delete Offer
	DELETE InternalExchangeBids WITH (TABLOCK, HOLDLOCK)
	OUTPUT DELETED.* INTO @InternalExchangeBid
	WHERE
		BidId = @OfferId
		AND BidUserId = @UserId
	
	--Check is offer available
	IF NOT EXISTS(SELECT * FROM @InternalExchangeBid)
		THROW 50000, 'This offer is no longer valid', 1
	

	--Return offer Value
	SELECT
		@RetrunAmount = BidAmount * BidValue
	FROM 
		@InternalExchangeBid

	EXEC dbo.up_AddBalance
		@UserId = @UserId
		, @Note = 'Internal Exchange Bid offer withdraw'
		, @Amount = @RetrunAmount
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	SELECT * FROM UserCryptocurrencyBalances WHERE UserId = @UserId

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;

GO

ALTER TABLE Users
ADD StatsArticlesTotalSharesMoney VARCHAR(MAX) NOT NULL DEFAULT '0.0#0.0#0.0#0.0#0.0#0.0#0.0';

GO

ALTER TABLE Articles
ADD CreatorMoneyEarned DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD TokenCryptocurrencyValueType INT NOT NULL DEFAULT 0;

GO 

ALTER TABLE InvestmentPlatformPlans
ADD MaxPrice  DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

ALTER TABLE InvestmentUsersPlans
ADD Price  DECIMAL(19,8) NOT NULL DEFAULT 0;

GO

UPDATE InvestmentUsersPlans 
SET Price = (SELECT Price from InvestmentPlatformPlans ipp WHERE ipp.Id = PlanId);

GO

ALTER TABLE ApplicationSettings ADD ICOInternalExchangeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ICOInternalExchangeMinimalStockPrice DECIMAL(28,18) NOT NULL DEFAULT 0;

GO

ALTER TABLE InternalExchangeTransactions
ADD
	AskCreateDate datetime	
	, BidCreateDate datetime

GO

UPDATE InternalExchangeTransactions
SET
	AskCreateDate = TransactionDate
	, BidCreateDate = TransactionDate
WHERE
	AskCreateDate IS NULL
	OR BidCreateDate IS NULL
GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN AskCreateDate datetime NOT NULL

GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN BidCreateDate datetime NOT NULL

GO

ALTER TABLE InternalExchangeAsks
ADD OriginalAmount decimal(28,18)

GO

ALTER TABLE InternalExchangeBids
ADD OriginalAmount decimal(28,18)

GO

UPDATE InternalExchangeAsks
SET OriginalAmount = AskAmount
WHERE OriginalAmount IS NULL
	
GO

UPDATE InternalExchangeBids
SET OriginalAmount = BidAmount
WHERE OriginalAmount IS NULL

GO

ALTER TABLE InternalExchangeAsks
ALTER COLUMN OriginalAmount decimal(28,18) NOT NULL

GO

ALTER TABLE InternalExchangeBids
ALTER COLUMN OriginalAmount decimal(28,18) NOT NULL

GO

CREATE FUNCTION dbo.uf_GetUserInternalExchangeAskAmount
(
	@UserId int
)
RETURNS decimal(28,18)
AS
BEGIN 

DECLARE @result decimal(28,18)

SELECT
	@result = ISNULL(SUM(AskAmount), 0)
FROM
	InternalExchangeAsks
WHERE
	AskUserId = @UserId
	AND AskDate > GETDATE()-1

SELECT
	@result = @result + ISNULL(SUM(TransactionAmount), 0)
FROM
	InternalExchangeTransactions
WHERE
	AskUserId = @UserId
	AND AskCreateDate > GETDATE()-1

RETURN @result

END

GO

ALTER PROCEDURE dbo.up_InternalExchangeAsk
(
	@AskUserId int
	, @AskAmount decimal(28,18)
	, @AskValue decimal(28,18)	
)
AS
BEGIN TRANSACTION

BEGIN TRY

IF OBJECT_ID('#AskTransaction', 'U') IS NOT NULL
	DROP TABLE #AskTransaction

DECLARE
	@AskNewOfferAmount decimal(28,18)
	, @AskAmountNegative decimal(28,18)
	, @CommissionPercentBid decimal(28,18)
	, @CommissionPercentAsk decimal(28,18)
DECLARE
	@StockBalanceType int
	, @PriceBalanceType int
	, @BalanceLogType int = 100
DECLARE
	@ResponsAmountTransferd decimal(28,18) = 0
	, @ResponsValueTransferd decimal(28,18) = 0
	, @ResponsAmountPlaced decimal(28,18) = 0
	, @ResponsValuePlaced decimal(28,18) = 0

SELECT
	@StockBalanceType = InternalExchangeStockType
	, @PriceBalanceType = InternalExchangePurchaseVia
	, @CommissionPercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @CommissionPercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

-- UPDATE User ASK Balance
SET @AskAmountNegative = -@AskAmount

EXEC dbo.up_AddBalance
	@UserId = @AskUserId
	, @Note = 'Internal Exchange Ask offer'
	, @Amount = @AskAmountNegative
	, @BalanceType = @StockBalanceType
	, @BalanceLogType = @BalanceLogType

SET @AskAmountNegative = @AskAmountNegative * @AskValue
SET @AskAmountNegative = @AskAmountNegative * @CommissionPercentAsk

EXEC dbo.up_AddBalance
	@UserId = @AskUserId
	, @Note = 'Internal Exchange Ask offer fee'
	, @Amount = @AskAmountNegative
	, @BalanceType = @PriceBalanceType
	, @BalanceLogType = @BalanceLogType

--SELECT Possible BID offers
;
WITH bids As
(
	SELECT
		BidId
		, BidAmount
		, BidAmount - @AskAmount AS LeftBidAmount
		, ROW_NUMBER() OVER (ORDER BY BidValue DESC, BidDate ASC) AS BidOrder
	FROM
		InternalExchangeBids b WITH (TABLOCK, HOLDLOCK)
	WHERE
		@AskValue <= b.BidValue
),
transactions AS
(
	SELECT
		BidId
		, BidAmount
		, BidOrder
		, CAST(LeftBidAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN LeftBidAmount < 0
				THEN b.BidAmount
			ELSE
				(b.BidAmount - LeftBidAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		bids b
	WHERE
		BidOrder = 1
	UNION ALL
	SELECT
		b.BidId
		, b.BidAmount
		, b.BidOrder
		, CAST(b.BidAmount + a.LeftBidAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN b.BidAmount + a.LeftBidAmount < 0
				THEN b.BidAmount
			ELSE
				(- a.LeftBidAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		bids b
		INNER JOIN transactions a ON b.BidOrder = a.BidOrder+1
	WHERE
		a.LeftBidAmount < 0
)
SELECT
	*
INTO
	#AskTransaction
FROM
	transactions

-- UPDATE Users Ask and Bid Balances
DECLARE
	@CursorAskUserId int
	, @CursorBidUserId int
	, @CursorAddAskBalance decimal(28,18)
	, @CursorAddBidBalance decimal(28,18)

DECLARE transactions CURSOR FORWARD_ONLY FOR
SELECT
	@AskUserId AS AskUserId
	, b.BidUserId AS BidUserId
	, a.Buyed * b.BidValue AS AddAskBalance
	, a.Buyed AS AddBidBalance
FROM
	#AskTransaction a WITH (TABLOCK, HOLDLOCK)
	INNER JOIN InternalExchangeBids b ON a.BidId = b.BidId

OPEN transactions;
FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorAddBidBalance;
WHILE @@FETCH_STATUS = 0
BEGIN    
	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer finalize'
		, @Amount = @CursorAddAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer finalize'
		, @Amount = @CursorAddBidBalance
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

	SET @ResponsAmountTransferd = @ResponsAmountTransferd + @CursorAddBidBalance
	SET @ResponsValueTransferd = @ResponsValueTransferd + @CursorAddAskBalance

    FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorAddBidBalance;
END;


-- INSERT InternalExchangeTransactions
INSERT INTO InternalExchangeTransactions WITH (TABLOCK, HOLDLOCK)
(
	AskUserId
    , BidUserId
    , TransactionAmount
    , TransactionValue
    , TransactionDate
    , IsAsk
	, AskCreateDate
	, BidCreateDate
)
SELECT
	@AskUserId AS AskUserId
	, b.BidUserId
	, a.Buyed AS TransactionAmount
	, b.BidValue AS TransactionValue
	, GETDATE() AS TransactionDate
	, 1
	, GETDATE()
	, b.BidDate
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId

-- DELETE BID Offers
DELETE b
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId
WHERE
	b.BidAmount - a.Buyed <= 0

-- UPDATE BID Offers amount 
UPDATE b
SET
	BidAmount = b.BidAmount - a.Buyed
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId
WHERE
	b.BidAmount - a.Buyed > 0

-- INSERT ASK Offer if necessery
SELECT
	@AskNewOfferAmount = ISNULL((SELECT -Max(LeftBidAmount) FROM #AskTransaction), @AskAmount)

IF @AskNewOfferAmount > 0
BEGIN
	;
	MERGE InternalExchangeAsks AS t
	USING (SELECT @AskUserId, @AskValue) AS s (AskUserId, AskValue)
		ON (t.AskUserId = s.AskUserId AND t.AskValue = s.AskValue)
	WHEN MATCHED THEN
		UPDATE SET
			AskAmount = AskAmount + @AskNewOfferAmount
			, OriginalAmount = OriginalAmount + @AskNewOfferAmount
	WHEN NOT MATCHED THEN
	INSERT VALUES
	(
		@AskUserId
		, @AskNewOfferAmount
		, @AskValue
		, GETDATE()
		, @AskAmount
	);

	SET @ResponsAmountPlaced = @AskNewOfferAmount
	SET @ResponsValuePlaced = @AskValue
END

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;

SELECT
	1 AS Id
	, @ResponsAmountTransferd AS AmountTransferd
	, @ResponsValueTransferd AS ValueTransferd
	, @ResponsAmountPlaced AS AmountPlaced
	, @ResponsValuePlaced AS ValuePlaced

ALTER PROCEDURE dbo.up_InternalExchangeBid
(
	@BidUserId int
	, @BidAmount decimal(28,18)
	, @BidValue decimal(28,18)
)
AS
BEGIN TRANSACTION

BEGIN TRY

IF OBJECT_ID('#BidTransaction', 'U') IS NOT NULL
	DROP TABLE #BidTransaction

DECLARE
	@BidNewOfferAmount decimal(28,18)
	, @BidValueNegative decimal(28,18)
	, @CommissionPercentBid decimal(19,8)
	, @CommissionPercentAsk decimal(19,8)
DECLARE
	@StockBalanceType int
	, @PriceBalanceType int
	, @BalanceLogType int = 100
DECLARE
	@ResponsAmountTransferd decimal(28,18) = 0
	, @ResponsValueTransferd decimal(28,18) = 0
	, @ResponsAmountPlaced decimal(28,18) = 0
	, @ResponsValuePlaced decimal(28,18) = 0

SELECT
	@StockBalanceType = InternalExchangeStockType
	, @PriceBalanceType = InternalExchangePurchaseVia
	, @CommissionPercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @CommissionPercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

-- UPDATE User ASK Balance

SET @BidValueNegative = -@BidAmount * @BidValue
SET @BidValueNegative = -@BidValueNegative * @CommissionPercentBid

EXEC dbo.up_AddBalance
	@UserId = @BidUserId
	, @Note = 'Internal Exchange Bid offer fee'
	, @Amount = @BidValueNegative
	, @BalanceType = @PriceBalanceType
	, @BalanceLogType = @BalanceLogType

--SELECT Possible ASK offers
;
WITH asks As
(
	SELECT
		AskId
		, AskAmount
		, AskAmount - @BidAmount AS LeftAskAmount
		, ROW_NUMBER() OVER (ORDER BY AskValue ASC, AskDate ASC) AS AskOrder
	FROM
		InternalExchangeAsks a WITH (TABLOCK, HOLDLOCK)
	WHERE
		@BidValue >= a.AskValue
),
transactions AS
(
	SELECT
		AskId
		, AskAmount
		, AskOrder
		, CAST(LeftAskAmount as decimal(28,18)) AS LeftAskAmount
		, CAST(CASE
			WHEN LeftAskAmount < 0
				THEN a.AskAmount
			ELSE
				(a.AskAmount - LeftAskAmount)
		END as decimal(28,18)) AS Selled
	FROM
		asks a
	WHERE
		AskOrder = 1
	UNION ALL
	SELECT
		a.AskId
		, a.AskAmount
		, a.AskOrder
		, CAST(a.AskAmount + b.LeftAskAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN a.AskAmount + b.LeftAskAmount < 0
				THEN a.AskAmount
			ELSE
				(- b.LeftAskAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		asks a
		INNER JOIN transactions b ON a.AskOrder = b.AskOrder+1
	WHERE
		b.LeftAskAmount < 0
)
SELECT
	*
INTO
	#BidTransaction
FROM
	transactions

-- UPDATE Users Ask AND Bid Balances
DECLARE
	@CursorAskUserId int
	, @CursorBidUserId int
	, @CursorAddAskBalance decimal(28,18)
	, @CursorSubAskBalance decimal(28,18)
	, @CursorAddBidBalance decimal(28,18)

DECLARE transactions CURSOR FORWARD_ONLY FOR
SELECT
	a.AskUserId
	, @BidUserId AS BidUserId
	, b.Selled * a.AskValue AS AddAskBalance1
	, -b.Selled * a.AskValue AS SubAskBalance1
	, b.Selled AS AddBidBalance2
FROM
	#BidTransaction b WITH (TABLOCK, HOLDLOCK)
	INNER JOIN InternalExchangeAsks a ON b.AskId = a.AskId


OPEN transactions;
FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorSubAskBalance, @CursorAddBidBalance;
WHILE @@FETCH_STATUS = 0
BEGIN    
	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer finalize'
		, @Amount = @CursorAddAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer finalize'
		, @Amount = @CursorAddBidBalance
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer finalize'
		, @Amount = @CursorSubAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	SET @ResponsAmountTransferd = @ResponsAmountTransferd + @CursorAddBidBalance
	SET @ResponsValueTransferd = @ResponsValueTransferd + @CursorAddAskBalance

    FETCH NEXT FROM transactions INTO @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorSubAskBalance, @CursorAddBidBalance;
END;

---- INSERT InternalExchangeTransactions
INSERT INTO InternalExchangeTransactions WITH (TABLOCK, HOLDLOCK)
(
	AskUserId
    , BidUserId
    , TransactionAmount
    , TransactionValue
    , TransactionDate
    , IsAsk
	, AskCreateDate
	, BidCreateDate
)
SELECT
	a.AskUserId
	, @BidUserId AS BidUserId
	, b.Selled AS TransactionAmount
	, a.AskValue AS TransactionValue
	, GETDATE() AS TransactionDate
	, 0
	, a.AskDate
	, GETDATE()
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON b.AskId = a.AskId

-- DELETE ASK Offers
DELETE a
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON a.AskId = b.AskId
WHERE
	a.AskAmount - b.Selled <= 0
	
-- UPDATE ASK Offers amount 
UPDATE a
SET
	AskAmount = a.AskAmount - b.Selled
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON a.AskId = b.AskId
WHERE
	a.AskAmount - b.Selled > 0

-- INSERT BID Offer if necessery
SELECT
	@BidNewOfferAmount = ISNULL((SELECT -Max(LeftAskAmount) FROM #BidTransaction), @BidAmount)

IF @BidNewOfferAmount > 0
BEGIN
	;
	MERGE InternalExchangeBids AS t
	USING (SELECT @BidUserId, @BidValue) AS s (BidUserId, BidValue)
		ON (t.BidUserId = s.BidUserId AND t.BidValue = s.BidValue)
	WHEN MATCHED THEN
		UPDATE SET
			BidAmount = BidAmount + @BidNewOfferAmount
			, OriginalAmount = OriginalAmount + @BidNewOfferAmount
	WHEN NOT MATCHED THEN
	INSERT VALUES
	(
		@BidUserId
		, @BidNewOfferAmount
		, @BidValue
		, GETDATE()
		, @BidAmount
	);

	SET @BidValueNegative = -@BidNewOfferAmount * @BidValue
	EXEC dbo.up_AddBalance
		@UserId = @BidUserId
		, @Note = 'Internal Exchange Bid offer'
		, @Amount = @BidValueNegative
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	SET @ResponsAmountPlaced = @BidNewOfferAmount
	SET @ResponsValuePlaced = @BidValue
END

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;
	
	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT TRANSACTION;

SELECT
	1 AS Id
	, @ResponsAmountTransferd AS AmountTransferd
	, @ResponsValueTransferd AS ValueTransferd
	, @ResponsAmountPlaced AS AmountPlaced
	, @ResponsValuePlaced AS ValuePlaced

GO

ALTER TABLE ApplicationSettings
ADD
	InternalExchangeMinimalSellAmount decimal(28,18) NOT NULL DEFAULT(1)

GO

ALTER TABLE ApplicationSettings
ADD
	InternalExchangePeriodMaxSellAmount decimal(28,18) NOT NULL DEFAULT(100)

GO

ALTER TABLE ApplicationSettings
ADD
	InternalExchangePeriodSellAmountTime int NOT NULL DEFAULT(24)


-- REMEMBER TO INCLUDE CREATED TABLES IN “CLEANDB_SQL.TXT”, IF HAVE TO

-- Money: DECIMAL(19,8) 
-- CryptocurrencyMoney: DECIMAL(28,18)

DECLARE curAllStats CURSOR  FOR
SELECT 'DROP STATISTICS ' + Schema_NAME(d.Schema_id) + '.' + 
OBJECT_NAME(a.object_id) + '.' + 
a.name colum_name
FROM sys.stats a
INNER JOIN sys.Objects d ON d.Object_id = a.object_id
WHERE auto_created = 0
 
DECLARE  @StatName NVARCHAR(512)
 
OPEN curAllStats
 
FETCH NEXT FROM curAllStats
INTO @StatName
 
WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC(@StatName)
    
    FETCH NEXT FROM curAllStats
    INTO @StatName
  END -- WHILE
 
CLOSE curAllStats
 
DEALLOCATE curAllStats

GO

IF OBJECT_ID('dbo.uf_GetUserInternalExchangeAskAmount', 'FN') IS NOT NULL
	DROP FUNCTION dbo.uf_GetUserInternalExchangeAskAmount
GO

CREATE FUNCTION dbo.uf_GetUserInternalExchangeAskAmount
(
	@UserId int
)
RETURNS decimal(28,18)
AS
BEGIN 

DECLARE @result decimal(28,18)

SELECT
	@result = ISNULL(SUM(AskAmount), 0)
FROM
	InternalExchangeAsks
WHERE
	AskUserId = @UserId
	AND AskDate >  CAST(GETDATE() as DATE)

SELECT
	@result = @result + ISNULL(SUM(TransactionAmount), 0)
FROM
	InternalExchangeTransactions
WHERE
	AskUserId = @UserId
	AND AskCreateDate >  CAST(GETDATE() as DATE)

RETURN @result

END

GO

ALTER TABLE InternalExchangeTransactions
ADD
	AskCreateDate datetime	
	, BidCreateDate datetime

GO

UPDATE InternalExchangeTransactions
SET
	AskCreateDate = TransactionDate
	, BidCreateDate = TransactionDate
WHERE
	AskCreateDate IS NULL
	OR BidCreateDate IS NULL
GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN AskCreateDate datetime NOT NULL

GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN BidCreateDate datetime NOT NULL

GO

ALTER TABLE InternalExchangeTransactions
ADD
	AskFee decimal(28,18)
	, BidFee decimal(28,18)

GO

DECLARE
	@FeePercentBid decimal(7,6)
	, @FeePercentAsk decimal(7,6)

SELECT
	@FeePercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @FeePercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

UPDATE InternalExchangeTransactions
SET
	AskFee = TransactionAmount * TransactionValue * @FeePercentAsk
	, BidFee = TransactionAmount * @FeePercentBid
WHERE
	AskFee IS NULL
	OR BidFee IS NULL
GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN AskFee decimal(28,18) NOT NULL

GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN BidFee decimal(28,18) NOT NULL

GO

ALTER TABLE InternalExchangeAsks
ADD AskStatus int NOT NULL DEFAULT(1)

GO

ALTER TABLE InternalExchangeBids
ADD BidStatus int NOT NULL DEFAULT(1)

GO

ALTER TABLE InternalExchangeTransactions
ADD
	AskId int
	, BidId int

GO

UPDATE InternalExchangeTransactions
SET
	AskId = 0
	, BidId = 0
WHERE
	AskId IS NULL
	OR BidId IS NULL
GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN AskId int NOT NULL

GO

ALTER TABLE InternalExchangeTransactions
ALTER COLUMN BidId int NOT NULL

GO

ALTER TABLE ApplicationSettings
ADD VideoWidgetEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD VideoWidgetCode NVARCHAR(MAX) NOT NULL DEFAULT '';

GO

ALTER TABLE Memberships
ADD BlockPayoutDays INT NOT NULL DEFAULT 0;

GO

BEGIN
   IF NOT EXISTS(SELECT * FROM MembershipProperties
                   WHERE Name = 'BlockPayoutDays')
   BEGIN
       INSERT INTO MembershipProperties(Name, Hidden)
       VALUES('BlockPayoutDays', 0)
   END
END

GO

CREATE FUNCTION dbo.uf_GetTruncatedDecimal
(
	@Decimal decimal(28,18)
	, @BalanceType int
)
RETURNS decimal(28,18)
AS
BEGIN
DECLARE
	@PowerTenth decimal(19,18) = 0.1
	, @MinDecimal decimal(19,18)
	, @result decimal(28,18) = 0

IF @Decimal < 0
	SET @Decimal = -@Decimal 

SELECT
	@result =
	ROUND(
	@Decimal
	, 
	CASE
		WHEN @BalanceType <= 10	THEN MaxDecimalPlaces
		ELSE CryptocurrencyMaxDecimalPlaces
	END
	, 1)
	, @MinDecimal =
	CASE
		WHEN @BalanceType <= 10
			THEN POWER(@PowerTenth, MaxDecimalPlaces)
		ELSE
			POWER(@PowerTenth, CryptocurrencyMaxDecimalPlaces)
	END
FROM
	CoreSettings

SET @result = CASE WHEN @result < @MinDecimal THEN @MinDecimal ELSE @result END
	
RETURN @result
END

GO

IF OBJECT_ID('dbo.up_InternalExchangeAsk', 'P') IS NOT NULL
	DROP PROCEDURE dbo.up_InternalExchangeAsk
GO

CREATE PROCEDURE dbo.up_InternalExchangeAsk
(
	@AskUserId int
	, @AskAmount decimal(28,18)
	, @AskValue decimal(28,18)	
)
AS
BEGIN TRANSACTION

BEGIN TRY

IF OBJECT_ID('#AskTransaction', 'U') IS NOT NULL
	DROP TABLE #AskTransaction

DECLARE
	@AskId int
	, @AskAmountNegative decimal(28,18)
	, @FeePercentBid decimal(7,6)
	, @FeePercentAsk decimal(7,6)
DECLARE
	@StockBalanceType int
	, @PriceBalanceType int
	, @BalanceLogType int = 100
DECLARE
	@ResponsAmountTransferd decimal(28,18) = 0
	, @ResponsValueTransferd decimal(28,18) = 0
	, @ResponsAmountPlaced decimal(28,18) = 0
	, @ResponsValuePlaced decimal(28,18) = 0

SELECT
	@StockBalanceType = InternalExchangeStockType
	, @PriceBalanceType = InternalExchangePurchaseVia
	, @FeePercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @FeePercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

-- UPDATE User ASK Balance
SET @AskAmountNegative = -@AskAmount

EXEC dbo.up_AddBalance
	@UserId = @AskUserId
	, @Note = 'Internal Exchange Ask offer'
	, @Amount = @AskAmountNegative
	, @BalanceType = @StockBalanceType
	, @BalanceLogType = @BalanceLogType

-- INSERT Ask Offer
INSERT INTO InternalExchangeAsks
	VALUES
	(
		@AskUserId
		, @AskAmount
		, @AskValue
		, GETDATE()
		, @AskAmount
		, 1
	);

SELECT
	@AskId = @@IDENTITY

--SELECT Possible BID offers
;
WITH bids As
(
	SELECT
		BidId
		, BidAmount
		, BidAmount - @AskAmount AS LeftBidAmount
		, ROW_NUMBER() OVER (ORDER BY BidValue DESC, BidDate ASC) AS BidOrder
	FROM
		InternalExchangeBids b WITH (TABLOCK, HOLDLOCK)
	WHERE
		@AskValue <= b.BidValue
		AND b.BidStatus = 1
),
transactions AS
(
	SELECT
		BidId
		, BidAmount
		, BidOrder
		, CAST(LeftBidAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN LeftBidAmount < 0
				THEN b.BidAmount
			ELSE
				(b.BidAmount - LeftBidAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		bids b
	WHERE
		BidOrder = 1
	UNION ALL
	SELECT
		b.BidId
		, b.BidAmount
		, b.BidOrder
		, CAST(b.BidAmount + a.LeftBidAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN b.BidAmount + a.LeftBidAmount < 0
				THEN b.BidAmount
			ELSE
				(- a.LeftBidAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		bids b
		INNER JOIN transactions a ON b.BidOrder = a.BidOrder+1
	WHERE
		a.LeftBidAmount < 0
)
SELECT
	@AskId AS AskId
	, *
	, CAST(NULL AS decimal(28,18)) AS AskFee
	, CAST(NULL AS decimal(28,18)) AS BidFee
INTO
	#AskTransaction
FROM
	transactions

-- UPDATE Users Ask and Bid Balances
DECLARE
	@CursorBidId int
	, @CursorAskUserId int
	, @CursorBidUserId int
	, @CursorAddAskBalance decimal(28,18)
	, @CursorAddBidBalance decimal(28,18)

	, @TransactionAskFee decimal(28,18)
	, @TransactionBidFee decimal(28,18)

DECLARE transactions CURSOR FORWARD_ONLY FOR
SELECT
	a.BidId AS BidId
	, @AskUserId AS AskUserId
	, b.BidUserId AS BidUserId
	, dbo.uf_GetTruncatedDecimal(a.Buyed * b.BidValue, @PriceBalanceType) AS AddAskBalance
	, a.Buyed AS AddBidBalance
FROM
	#AskTransaction a WITH (TABLOCK, HOLDLOCK)
	INNER JOIN InternalExchangeBids b ON a.BidId = b.BidId

OPEN transactions;
FETCH NEXT FROM transactions
INTO @CursorBidId, @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorAddBidBalance;

WHILE @@FETCH_STATUS = 0
BEGIN
	--Transaction AskUser
	SET @TransactionAskFee = @CursorAddAskBalance * @FeePercentAsk
	SET @TransactionAskFee = -dbo.uf_GetTruncatedDecimal(@TransactionAskFee, @PriceBalanceType)

	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer'
		, @Amount = @CursorAddAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer fee'
		, @Amount = @TransactionAskFee
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	--Transaction BidUser
	--SET @TransactionBidFee = -@CursorAddBidBalance * @FeePercentBid
	--SET @TransactionBidFee = dbo.uf_GetTruncatedFee(@TransactionBidFee, @StockBalanceType)
	SET @TransactionBidFee = @CursorAddAskBalance * @FeePercentBid
	SET @TransactionBidFee = -dbo.uf_GetTruncatedDecimal(@TransactionBidFee, @PriceBalanceType)

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer'
		, @Amount = @CursorAddBidBalance
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer fee'
		, @Amount = @TransactionBidFee
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	UPDATE #AskTransaction
	SET
		AskFee = -@TransactionAskFee
		, BidFee = -@TransactionBidFee
	WHERE
		BidId = @CursorBidId

	SET @ResponsAmountTransferd = @ResponsAmountTransferd + @CursorAddBidBalance
	SET @ResponsValueTransferd = @ResponsValueTransferd + @CursorAddAskBalance

    FETCH NEXT FROM transactions
	INTO @CursorBidId, @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorAddBidBalance;
END;


-- INSERT InternalExchangeTransactions
INSERT INTO InternalExchangeTransactions WITH (TABLOCK, HOLDLOCK)
(
	AskUserId
    , BidUserId
    , TransactionAmount
    , TransactionValue
    , TransactionDate
    , IsAsk
	, AskCreateDate
	, BidCreateDate
	, AskFee
	, BidFee
	, AskId
	, BidId
)
SELECT
	@AskUserId AS AskUserId
	, b.BidUserId
	, a.Buyed AS TransactionAmount
	, b.BidValue AS TransactionValue
	, GETDATE() AS TransactionDate
	, 1
	, GETDATE()
	, b.BidDate
	, a.AskFee
	, a.BidFee
	, a.AskId
	, a.BidId
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId

-- UPDATE BID Offers status
UPDATE b
SET
	BidStatus = 2
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId
WHERE
	b.BidAmount - a.Buyed <= 0

-- UPDATE BID Offers amount 
UPDATE b
SET
	BidAmount = b.BidAmount - a.Buyed
FROM
	#AskTransaction a
	INNER JOIN InternalExchangeBids b ON b.BidId = a.BidId

-- INSERT ASK Offer if necessery
DECLARE
	@AskNewOfferAmount decimal(28,18)

SELECT
	@AskNewOfferAmount = ISNULL((SELECT -Max(LeftBidAmount) FROM #AskTransaction), @AskAmount)

IF @AskNewOfferAmount > 0
	BEGIN
		UPDATE InternalExchangeAsks
		SET
			AskAmount = @AskNewOfferAmount
		WHERE
			AskId = @AskId

		SET @ResponsAmountPlaced = @AskNewOfferAmount
		SET @ResponsValuePlaced = @AskValue
	END
ELSE
	BEGIN
		UPDATE InternalExchangeAsks
		SET
			AskStatus = 2
			, AskAmount = 0
		WHERE
			AskId = @AskId
	END



END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;

SELECT
	1 AS Id
	, @ResponsAmountTransferd AS AmountTransferd
	, @ResponsValueTransferd AS ValueTransferd
	, @ResponsAmountPlaced AS AmountPlaced
	, @ResponsValuePlaced AS ValuePlaced

GO

IF OBJECT_ID('dbo.up_InternalExchangeBid', 'P') IS NOT NULL
	DROP PROCEDURE dbo.up_InternalExchangeBid
GO

CREATE PROCEDURE dbo.up_InternalExchangeBid
(
	@BidUserId int
	, @BidAmount decimal(28,18)
	, @BidValue decimal(28,18)
)
AS
BEGIN TRANSACTION

BEGIN TRY

IF OBJECT_ID('#BidTransaction', 'U') IS NOT NULL
	DROP TABLE #BidTransaction

DECLARE
	@BidId int
	, @FeePercentBid decimal(7,6)
	, @FeePercentAsk decimal(7,6)
DECLARE
	@StockBalanceType int
	, @PriceBalanceType int
	, @BalanceLogType int = 100
DECLARE
	@ResponsAmountTransferd decimal(28,18) = 0
	, @ResponsValueTransferd decimal(28,18) = 0
	, @ResponsAmountPlaced decimal(28,18) = 0
	, @ResponsValuePlaced decimal(28,18) = 0

SELECT
	@StockBalanceType = InternalExchangeStockType
	, @PriceBalanceType = InternalExchangePurchaseVia
	, @FeePercentAsk = InternalExchangeAskCommissionPercent / 100.0
	, @FeePercentBid = InternalExchangeBidCommissionPercent / 100.0
FROM
	ApplicationSettings

--INSERT Bid offer
INSERT INTO InternalExchangeBids
	VALUES
	(
		@BidUserId
		, @BidAmount
		, @BidValue
		, GETDATE()
		, @BidAmount
		, 1
	);

SELECT
	@BidId = @@IDENTITY

--SELECT Possible ASK offers
;
WITH asks As
(
	SELECT
		AskId
		, AskAmount
		, AskAmount - @BidAmount AS LeftAskAmount
		, ROW_NUMBER() OVER (ORDER BY AskValue ASC, AskDate ASC) AS AskOrder
	FROM
		InternalExchangeAsks a WITH (TABLOCK, HOLDLOCK)
	WHERE
		@BidValue >= a.AskValue
		AND a.AskStatus = 1
),
transactions AS
(
	SELECT
		AskId
		, AskAmount
		, AskOrder
		, CAST(LeftAskAmount as decimal(28,18)) AS LeftAskAmount
		, CAST(CASE
			WHEN LeftAskAmount < 0
				THEN a.AskAmount
			ELSE
				(a.AskAmount - LeftAskAmount)
		END as decimal(28,18)) AS Selled
	FROM
		asks a
	WHERE
		AskOrder = 1
	UNION ALL
	SELECT
		a.AskId
		, a.AskAmount
		, a.AskOrder
		, CAST(a.AskAmount + b.LeftAskAmount as decimal(28,18)) AS LeftBidAmount
		, CAST(CASE
			WHEN a.AskAmount + b.LeftAskAmount < 0
				THEN a.AskAmount
			ELSE
				(- b.LeftAskAmount)
		END as decimal(28,18)) AS Buyed
	FROM
		asks a
		INNER JOIN transactions b ON a.AskOrder = b.AskOrder+1
	WHERE
		b.LeftAskAmount < 0
)
SELECT
	@BidId AS BidId
	, *
	, CAST(NULL AS decimal(28,18)) AS AskFee
	, CAST(NULL AS decimal(28,18)) AS BidFee
INTO
	#BidTransaction
FROM
	transactions

-- UPDATE Users Ask AND Bid Balances
DECLARE
	@CursorAskId int
	, @CursorAskUserId int
	, @CursorBidUserId int
	, @CursorAddAskBalance decimal(28,18)
	, @CursorSubAskBalance decimal(28,18)
	, @CursorAddBidBalance decimal(28,18)

	, @TransactionAskFee decimal(28,18)
	, @TransactionBidFee decimal(28,18)

DECLARE transactions CURSOR FORWARD_ONLY FOR
SELECT
	a.AskId AS AskId
	, a.AskUserId AS CursorAskUserId
	, @BidUserId AS CursorBidUserId
	, dbo.uf_GetTruncatedDecimal(b.Selled * a.AskValue, @PriceBalanceType) AS CursorAddAskBalance
	, -dbo.uf_GetTruncatedDecimal(b.Selled * a.AskValue, @PriceBalanceType) AS CursorSubAskBalance
	, b.Selled AS CursorAddBidBalance
FROM
	#BidTransaction b WITH (TABLOCK, HOLDLOCK)
	INNER JOIN InternalExchangeAsks a ON b.AskId = a.AskId


OPEN transactions;
FETCH NEXT FROM transactions
INTO @CursorAskId, @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorSubAskBalance, @CursorAddBidBalance;

WHILE @@FETCH_STATUS = 0
BEGIN

	--Transaction AskUser
	SET @TransactionAskFee = @CursorAddAskBalance * @FeePercentAsk
	SET @TransactionAskFee = -dbo.uf_GetTruncatedDecimal(@TransactionAskFee, @PriceBalanceType)

	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer'
		, @Amount = @CursorAddAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorAskUserId
		, @Note = 'Internal Exchange Ask offer fee'
		, @Amount = @TransactionAskFee
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	--Transaction BidUser
	--SET @TransactionBidFee = -@CursorAddBidBalance * @FeePercentBid
	--SET @TransactionBidFee = dbo.uf_GetTruncatedFee(@TransactionBidFee, @StockBalanceType)
	SET @TransactionBidFee = @CursorAddAskBalance * @FeePercentBid
	SET @TransactionBidFee = -dbo.uf_GetTruncatedDecimal(@TransactionBidFee, @PriceBalanceType)

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer'
		, @Amount = @CursorAddBidBalance
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer fee'
		, @Amount = @TransactionBidFee
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	--Actual price to pay upon placing bid
	EXEC dbo.up_AddBalance
		@UserId = @CursorBidUserId
		, @Note = 'Internal Exchange Bid offer'
		, @Amount = @CursorSubAskBalance
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

	UPDATE #BidTransaction
	SET
		AskFee = -@TransactionAskFee
		, BidFee = -@TransactionBidFee
	WHERE
		AskId = @CursorAskId

	SET @ResponsAmountTransferd = @ResponsAmountTransferd + @CursorAddBidBalance
	SET @ResponsValueTransferd = @ResponsValueTransferd + @CursorAddAskBalance

    FETCH NEXT FROM transactions
	INTO @CursorAskId, @CursorAskUserId, @CursorBidUserId, @CursorAddAskBalance, @CursorSubAskBalance, @CursorAddBidBalance;
END;

---- INSERT InternalExchangeTransactions
INSERT INTO InternalExchangeTransactions WITH (TABLOCK, HOLDLOCK)
(
	AskUserId
    , BidUserId
    , TransactionAmount
    , TransactionValue
    , TransactionDate
    , IsAsk
	, AskCreateDate
	, BidCreateDate
	, AskFee
	, BidFee
	, AskId
	, BidId
)
SELECT
	a.AskUserId
	, @BidUserId AS BidUserId
	, b.Selled AS TransactionAmount
	, a.AskValue AS TransactionValue
	, GETDATE() AS TransactionDate
	, 0
	, a.AskDate
	, GETDATE()
	, b.AskFee
	, b.BidFee
	, b.AskId
	, b.BidId
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON b.AskId = a.AskId

-- UPDATE ASK Offers status
UPDATE a
SET
	AskStatus = 2
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON a.AskId = b.AskId
WHERE
	a.AskAmount - b.Selled <= 0
	
-- UPDATE ASK Offers amount 
UPDATE a
SET
	AskAmount = a.AskAmount - b.Selled
FROM
	#BidTransaction b
	INNER JOIN InternalExchangeAsks a ON a.AskId = b.AskId

-- INSERT BID Offer if necessery
DECLARE
	@BidNewOfferAmount decimal(28,18)
	, @BidNewOfferValue decimal(28,18)

SELECT
	@BidNewOfferAmount = ISNULL((SELECT -Max(LeftAskAmount) FROM #BidTransaction), @BidAmount)
	, @BidNewOfferValue = -dbo.uf_GetTruncatedDecimal(@BidNewOfferAmount * @BidValue, @PriceBalanceType)

IF @BidNewOfferAmount > 0
	BEGIN
		UPDATE InternalExchangeBids
			SET
				BidAmount = @BidNewOfferAmount
			WHERE
				BidId = @BidId

		EXEC dbo.up_AddBalance
			@UserId = @BidUserId
			, @Note = 'Internal Exchange Bid offer'
			, @Amount = @BidNewOfferValue
			, @BalanceType = @PriceBalanceType
			, @BalanceLogType = @BalanceLogType

		SET @ResponsAmountPlaced = @BidNewOfferAmount
		SET @ResponsValuePlaced = @BidValue
	END
ELSE
	BEGIN

		UPDATE InternalExchangeBids
		SET
			BidStatus = 2
			, BidAmount = 0
		WHERE
			BidId = @BidId

	END

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;
	
	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT TRANSACTION;

SELECT
	1 AS Id
	, @ResponsAmountTransferd AS AmountTransferd
	, @ResponsValueTransferd AS ValueTransferd
	, @ResponsAmountPlaced AS AmountPlaced
	, @ResponsValuePlaced AS ValuePlaced

GO

ALTER TABLE ApplicationSettings
ADD
	CoinhiveSiteKey varchar(max) NULL

GO

ALTER TABLE ApplicationSettings
ADD
	CoinhiveSecretKey varchar(max) NULL

GO

ALTER TABLE ApplicationSettings
ADD
	CoinhiveHashes int NOT NULL DEFAULT(1024)

GO


ALTER TABLE ApplicationSettings ADD InternalExchangeCurrentOrdersEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangeTradingHistoryEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD InternalExchangeEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings ADD ExternalTradingEnabled BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE ApplicationSettings
ADD
	CaptchaClaimSiteKey varchar(max) NULL

GO

ALTER TABLE ApplicationSettings
ADD
	CaptchaClaimSecretKey varchar(max) NULL

GO

ALTER TABLE ApplicationSettings
ADD
	CaptchaClaimHashes int NOT NULL DEFAULT(1024)

GO

ALTER TABLE ApplicationSettings
ADD
	CaptchaClaimPrizeType int NOT NULL DEFAULT(1)

GO

ALTER TABLE ApplicationSettings
ADD
	CaptchaClaimPrize decimal(28,18) NOT NULL DEFAULT(100)

GO

ALTER TABLE ApplicationSettings
ADD
	EarnCaptchaClaim bit NOT NULL DEFAULT(0)

GO

ALTER TABLE InvestmentPlatformPlans
ADD AvailableFromDate DATETIME NULL;

GO

IF OBJECT_ID('[dbo].[up_InternalExchangeWithdrawAsk]', 'P') IS NOT NULL
	DROP PROCEDURE [dbo].[up_InternalExchangeWithdrawAsk]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[up_InternalExchangeWithdrawAsk]
(
	@OfferId int
	, @UserId int
	, @ForceAdmin bit = 0
)
AS
BEGIN TRANSACTION

BEGIN TRY

	DECLARE
		@StockBalanceType int
		, @PriceBalanceType int
		, @BalanceLogType int = 100
		, @RetrunAmount decimal(28,18)
		, @BalanceLogeNote varchar(128)

	SELECT
		@StockBalanceType = InternalExchangeStockType
		, @PriceBalanceType = InternalExchangePurchaseVia
	FROM
		ApplicationSettings

	DECLARE @InternalExchangeAsk TABLE
	(
		AskAmount decimal(28,18) NOT NULL
		, AskValue decimal(28,18) NOT NULL
	)

	--Update status offer
	UPDATE InternalExchangeAsks WITH (TABLOCK, HOLDLOCK)
	SET
		AskStatus = 3
	OUTPUT
		inserted.AskAmount
		, inserted.AskValue
	INTO @InternalExchangeAsk
	WHERE
		AskId = @OfferId
		AND AskUserId = @UserId
		AND AskStatus = 1
	
	--Check is offer available
	IF NOT EXISTS(SELECT * FROM @InternalExchangeAsk)
		THROW 50000, 'This offer is no longer valid', 1
	
	SET @BalanceLogeNote =
		CASE @ForceAdmin
			WHEN 0 THEN 'Internal Exchange Ask offer withdraw'
			WHEN 1 THEN 'Internal Exchange Ask offer withdrawn by the adminstrator'
		END

	--Return offer Value
	SELECT
		@RetrunAmount = AskAmount
	FROM 
		@InternalExchangeAsk

	EXEC dbo.up_AddBalance
		@UserId = @UserId
		, @Note = @BalanceLogeNote
		, @Amount = @RetrunAmount
		, @BalanceType = @StockBalanceType
		, @BalanceLogType = @BalanceLogType

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;
GO

IF OBJECT_ID('[dbo].[up_InternalExchangeWithdrawBid]', 'P') IS NOT NULL
	DROP PROCEDURE [dbo].[up_InternalExchangeWithdrawBid]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[up_InternalExchangeWithdrawBid]
(
	@OfferId int
	, @UserId int
	, @ForceAdmin bit = 0
)
AS
BEGIN TRANSACTION

BEGIN TRY

	DECLARE
		@StockBalanceType int
		, @PriceBalanceType int
		, @BalanceLogType int = 100
		, @RetrunAmount decimal(28,18)
		, @BalanceLogeNote varchar(128)

	SELECT
		@StockBalanceType = InternalExchangeStockType
		, @PriceBalanceType = InternalExchangePurchaseVia
	FROM
		ApplicationSettings

	DECLARE @InternalExchangeBid TABLE
	(
		BidAmount decimal(28,18) NOT NULL
		, BidValue decimal(28,18) NOT NULL
	)

	--Update status offer
	UPDATE InternalExchangeBids WITH (TABLOCK, HOLDLOCK)
	SET
		BidStatus = 3
	OUTPUT
		inserted.BidAmount
		, inserted.BidValue
	INTO @InternalExchangeBid
	WHERE
		BidId = @OfferId
		AND BidUserId = @UserId
		AND BidStatus = 1
	
	--Check is offer available
	IF NOT EXISTS(SELECT * FROM @InternalExchangeBid)
		THROW 50000, 'This offer is no longer valid', 1
	
	SET @BalanceLogeNote =
		CASE @ForceAdmin
			WHEN 0 THEN 'Internal Exchange Bid offer withdraw'
			WHEN 1 THEN 'Internal Exchange Bid offer withdrawn by the adminstrator'
		END

	--Return offer Value
	SELECT
		@RetrunAmount = BidAmount * BidValue
	FROM 
		@InternalExchangeBid

	EXEC dbo.up_AddBalance
		@UserId = @UserId
		, @Note = @BalanceLogeNote
		, @Amount = @RetrunAmount
		, @BalanceType = @PriceBalanceType
		, @BalanceLogType = @BalanceLogType

END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0  
        ROLLBACK;

	THROW;
END CATCH

IF @@TRANCOUNT > 0  
    COMMIT;
GO



ALTER TABLE ApplicationSettings ADD ShoutboxBannedWordsCaseSensitive BIT NOT NULL DEFAULT 0;

GO

ALTER TABLE InvestmentPlatformPlans
ADD PaymentProcessorInt INT NULL;

GO

ALTER TABLE Articles
ALTER COLUMN Title NVARCHAR(500) NOT NULL;

GO

ALTER TABLE ApplicationSettings
ADD JackpotAllowBuyTicketDirectly bit NOT NULL DEFAULT(0)

GO

ALTER TABLE ApplicationSettings
ADD PointsDepositEnable bit NOT NULL DEFAULT(0)

GO

ALTER TABLE PurchaseOptions
ADD PaymentProcessorEnabled int NOT NULL DEFAULT(2)

GO

UPDATE PurchaseOptions
SET PaymentProcessorEnabled  = 0
WHERE Feature IN ('17')

GO

UPDATE ApplicationSettings
SET MinTotalClicksToRentRefs = 0

GO