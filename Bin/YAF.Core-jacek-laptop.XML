<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YAF.Core</name>
    </assembly>
    <members>
        <member name="T:YAF.Core.YafTaskModule">
            <summary>
            Lifecycle module used to throw events around...
            </summary>
        </member>
        <member name="F:YAF.Core.YafTaskModule._appInstance">
            <summary>
              The _app instance.
            </summary>
        </member>
        <member name="F:YAF.Core.YafTaskModule._moduleInitialized">
            <summary>
              The _module initialized.
            </summary>
        </member>
        <member name="M:YAF.Core.YafTaskModule.Init(System.Web.HttpApplication)">
            <summary>
            Bootstrapping fun
            </summary>
            <param name="httpApplication">
            The http application.
            </param>
        </member>
        <member name="M:YAF.Core.YafTaskModule.System#Web#IHttpModule#Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"/>.
            </summary>
        </member>
        <member name="M:YAF.Core.YafTaskModule.ApplicationPreRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            The application pre request handler execute.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="P:YAF.Core.YafTaskModule.Logger">
            <summary>
              Gets or sets the logger associated with the object.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.PruneTopicTask">
            <summary>
            Run when we want to do migration of users in the background...
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.LongBackgroundTask">
            <summary>
            The long background task.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.IntermittentBackgroundTask">
            <summary>
            The intermittent background task.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.BaseBackgroundTask">
            <summary>
            The base background task.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.BaseBackgroundTask._appContext">
            <summary>
            The _app context.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.BaseBackgroundTask._boardId">
            <summary>
            The _board id.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.BaseBackgroundTask._isRunning">
            <summary>
            The _is running.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.BaseBackgroundTask._lockObject">
            <summary>
            The _lock object.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.BaseBackgroundTask._started">
            <summary>
            The _started.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.BaseBackgroundTask.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.BaseBackgroundTask.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.BaseBackgroundTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.BaseBackgroundTask.Data">
            <summary>
            Gets or sets BoardID.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.BaseBackgroundTask.IsRunning">
            <summary>
            Gets or sets a value indicating whether IsRunning.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.BaseBackgroundTask.Started">
            <summary>
            Gets Started.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.BaseBackgroundTask.ServiceLocator">
            <summary>
            Gets ServiceLocator.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.IntermittentBackgroundTask._intermittentTimer">
            <summary>
            The _intermittent timer.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.IntermittentBackgroundTask._runPeriodMs">
            <summary>
            The _run period ms.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.IntermittentBackgroundTask._startDelayMs">
            <summary>
            The _start delay ms.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.IntermittentBackgroundTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.IntermittentBackgroundTask.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.IntermittentBackgroundTask.TimerCallback(System.Object)">
            <summary>
            The timer callback.
            </summary>
            <param name="sender">
            The sender.
            </param>
        </member>
        <member name="M:YAF.Core.Tasks.IntermittentBackgroundTask.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.IntermittentBackgroundTask.StartDelayMs">
            <summary>
            Gets or sets StartDelayMs.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.IntermittentBackgroundTask.RunPeriodMs">
            <summary>
            Gets or sets RunPeriodMs.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.LongBackgroundTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Tasks.LongBackgroundTask"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.LongBackgroundTask.TimerCallback(System.Object)">
            <summary>
            The timer callback.
            </summary>
            <param name="sender">
            The sender.
            </param>
        </member>
        <member name="F:YAF.Core.Tasks.PruneTopicTask._taskName">
            <summary>
            The _task name.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.PruneTopicTask._days">
            <summary>
            The _days.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.PruneTopicTask._forumId">
            <summary>
            The _forum id.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.PruneTopicTask._permDelete">
            <summary>
            The _perm delete.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.PruneTopicTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Tasks.PruneTopicTask"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.PruneTopicTask.Start(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The start.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <param name="forumId">
            The forum id.
            </param>
            <param name="days">
            The days.
            </param>
            <param name="permDelete">
            The perm delete.
            </param>
            <returns>
            The start.
            </returns>
        </member>
        <member name="M:YAF.Core.Tasks.PruneTopicTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.PruneTopicTask.TaskName">
            <summary>
            Gets TaskName.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.PruneTopicTask.ForumId">
            <summary>
            Gets or sets ForumId.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.PruneTopicTask.Days">
            <summary>
            Gets or sets Days.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.PruneTopicTask.PermDelete">
            <summary>
            Gets or sets a value indicating whether PermDelete.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafTemplateEmail">
            <summary>
            The yaf template email.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafTemplateEmail._htmlEnabled">
            <summary>
            The _html enabled.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafTemplateEmail._templateLanguageFile">
            <summary>
            The _template language file.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafTemplateEmail._templateName">
            <summary>
            The _template name.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafTemplateEmail._templateParams">
            <summary>
            The _template params.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafTemplateEmail"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafTemplateEmail"/> class.
            </summary>
            <param name="templateName">
            The template name.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafTemplateEmail"/> class.
            </summary>
            <param name="templateName">
            The template name.
            </param>
            <param name="htmlEnabled">
            The html enabled.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.ReadTemplate(System.String,System.String)">
            <summary>
            Reads a template from the language file
            </summary>
            <param name="templateName">
            The template Name.
            </param>
            <param name="templateLanguageFile">
            The template Language File.
            </param>
            <returns>
            The template
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.ProcessTemplate(System.String)">
            <summary>
            Creates an email from a template
            </summary>
            <param name="templateName">
            The template Name.
            </param>
            <returns>
            The process template.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.SendEmail(System.Net.Mail.MailAddress,System.String,System.Boolean)">
            <summary>
            The send email.
            </summary>
            <param name="toAddress">
            The to address.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="useSendThread">
            The use send thread.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.SendEmail(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress,System.String,System.Boolean)">
            <summary>
            The send email.
            </summary>
            <param name="fromAddress">
            The from address.
            </param>
            <param name="toAddress">
            The to address.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="useSendThread">
            The use send thread.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafTemplateEmail.CreateWatch(System.Int32,System.Int32,System.Net.Mail.MailAddress,System.String)">
            <summary>
            The create watch.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="userId">
            The user id.
            </param>
            <param name="fromAddress">
            The from address.
            </param>
            <param name="subject">
            The subject.
            </param>
        </member>
        <member name="P:YAF.Core.Services.YafTemplateEmail.TemplateName">
            <summary>
            Gets or sets TemplateName.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafTemplateEmail.TemplateLanguageFile">
            <summary>
            Gets or sets TemplateLanguageFile.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafTemplateEmail.HtmlEnabled">
            <summary>
            Gets or sets a value indicating whether HtmlEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafTemplateEmail.TemplateParams">
            <summary>
            Gets or sets TemplateParams.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafFavoriteTopic">
            <summary>
            Favorite Topic Service for the current user.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafFavoriteTopic._favoriteTopicList">
            <summary>
              The _favorite Topic list.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.AddFavoriteTopic(System.Int32)">
            <summary>
            The add favorite topic.
            </summary>
            <param name="topicId">
            The topic ID.
            </param>
            <returns>
            The add favorite topic.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.ClearFavoriteTopicCache">
            <summary>
            The clear favorite topic cache.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.FavoriteTopicCount(System.Int32)">
            <summary>
            The clear favorite topic cache.
            </summary>
            <param name="topicId">
            The topic Id.
            </param>
            <returns>
            The favorite topic count.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.FavoriteTopicDetails(System.DateTime)">
            <summary>
            the favorite topic details.
            </summary>
            <param name="sinceDate">
            the since date.
            </param>
            <returns>
            a Data table containing all the current user's favorite topics in details.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.IsFavoriteTopic(System.Int32)">
            <summary>
            The is favorite topic.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <returns>
            The is favorite topic.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.RemoveFavoriteTopic(System.Int32)">
            <summary>
            The remove favorite topic.
            </summary>
            <param name="topicId">
            The favorite topic id.
            </param>
            <returns>
            The remove favorite topic.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.InitializeFavoriteTopicList">
            <summary>
            The initialize favorite topic list.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.TopicWatchedId(System.Int32,System.Int32)">
            <summary>
            Returns true if the topic is set to watch for userId
            </summary>
            <param name="userId">
            </param>
            <param name="topicId">
            The topic Id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.UnwatchTopic(System.Int32,System.Int32)">
            <summary>
            Checks if this topic is watched, if not, adds it.
            </summary>
            <param name="userId">
            </param>
            <param name="topicId">
            The topic Id.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafFavoriteTopic.WatchTopic(System.Int32,System.Int32)">
            <summary>
            Checks if this topic is watched, if not, adds it.
            </summary>
            <param name="userId">
            </param>
            <param name="topicId">
            The topic Id.
            </param>
        </member>
        <member name="T:YAF.Core.Services.YafAvatars">
            <summary>
            The yaf avatars.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafAvatars._yafBoardSettings">
            <summary>
            The _yaf board settings.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafAvatars.#ctor(YAF.Classes.YafBoardSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafAvatars"/> class.
            </summary>
            <param name="boardSettings">
            The board settings.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafAvatars.GetAvatarUrlForCurrentUser">
            <summary>
            The get avatar url for current user.
            </summary>
            <returns>
            Returns the Avatar Url 
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafAvatars.GetAvatarUrlForUser(System.Int32)">
            <summary>
            The get avatar url for user.
            </summary>
            <param name="userId">
            The user id. 
            </param>
            <returns>
            Returns the Avatar Url 
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafAvatars.GetAvatarUrlForUser(YAF.Types.Interfaces.IUserData)">
            <summary>
            The get avatar url for user.
            </summary>
            <param name="userData">
            The user data. 
            </param>
            <returns>
            Returns the Avatar Url 
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafAvatars.GetAvatarUrlForUser(System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            The get avatar url for user.
            </summary>
            <param name="userId">
            The user Id. 
            </param>
            <param name="avatarString">
            The avatarString. 
            </param>
            <param name="hasAvatarImage">
            The hasAvatarImage. 
            </param>
            <param name="email">
            The email. 
            </param>
            <returns>
            Returns the Avatar Url 
            </returns>
        </member>
        <member name="T:YAF.Core.Services.ICheckForSpamClient">
            <summary>
            Interface that communicates with a spam client.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.ICheckForSpamClient.CheckCommentForSpam(YAF.Core.Services.IComment)">
            <summary>
            Checks the comment and returns true if it is spam, otherwise false.
            </summary>
            <param name="comment">
            </param>
            <returns>
            The check comment for spam.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.ICheckForSpamClient.SubmitHam(YAF.Core.Services.IComment)">
            <summary>
            Submits a comment to the client that should not have been 
              flagged as SPAM (a false positive).
            </summary>
            <param name="comment">
            </param>
        </member>
        <member name="M:YAF.Core.Services.ICheckForSpamClient.SubmitSpam(YAF.Core.Services.IComment)">
            <summary>
            Submits a comment to the client that should have been 
              flagged as SPAM, but was not flagged.
            </summary>
            <param name="comment">
            </param>
        </member>
        <member name="M:YAF.Core.Services.ICheckForSpamClient.VerifyApiKey">
            <summary>
            Verifies the API key.  You really only need to
              call this once, perhaps at startup.
            </summary>
            <returns>
            The verify api key.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.ICheckForSpamClient.ApiKey">
            <summary>
              Gets or sets the Akismet API key.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="P:YAF.Core.Services.ICheckForSpamClient.Proxy">
            <summary>
              Gets or sets the proxy to use.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:YAF.Core.Services.ICheckForSpamClient.RootUrl">
            <summary>
              Gets or sets the root URL to the blog.
            </summary>
            <value>The blog URL.</value>
        </member>
        <member name="P:YAF.Core.Services.ICheckForSpamClient.Timeout">
            <summary>
              Gets or sets the timeout in milliseconds for the http request to the client.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:YAF.Core.Services.ICheckForSpamClient.UserAgent">
            <summary>
              Gets or sets the User Agent for the Client.  
              Do not confuse this with the user agent for the comment 
              being checked.
            </summary>
        </member>
        <member name="T:YAF.Core.JavaScriptFunction">
            <summary>
            The js script class.
            </summary>
        </member>
        <member name="F:YAF.Core.JavaScriptFunction._inner">
            <summary>
            The _inner builder.
            </summary>
        </member>
        <member name="F:YAF.Core.JavaScriptFunction._params">
            <summary>
            The _function parameters.
            </summary>
        </member>
        <member name="M:YAF.Core.JavaScriptFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.JavaScriptFunction"/> class.
            </summary>
            <param name="inner">
            The inner builder.
            </param>
        </member>
        <member name="M:YAF.Core.JavaScriptFunction.Add(System.String)">
            <summary>
            Add to the script
            </summary>
            <param name="js">
            The js.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.JavaScriptFunction.Build(YAF.Types.Interfaces.IScriptBuilder)">
            <summary>
            Get the script's result as String
            </summary>
            <returns>
            The Completed Script
            </returns>
        </member>
        <member name="M:YAF.Core.JavaScriptFunction.Clear">
            <summary>
            Clears the entire statment.
            </summary>
        </member>
        <member name="P:YAF.Core.JavaScriptFunction.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:YAF.Core.JavaScriptFunction.Params">
            <summary>
            Gets or sets Params.
            </summary>
        </member>
        <member name="T:YAF.Core.Localizer">
            <summary>
            Summary description for Localizer.
            </summary>
        </member>
        <member name="F:YAF.Core.Localizer._currentCulture">
            <summary>
            The _current culture.
            </summary>
        </member>
        <member name="F:YAF.Core.Localizer._currentPage">
            <summary>
              The _current page.
            </summary>
        </member>
        <member name="F:YAF.Core.Localizer._fileName">
            <summary>
              The _file name.
            </summary>
        </member>
        <member name="F:YAF.Core.Localizer._localizationLanguageResources">
            <summary>
            The _localization resources.
            </summary>
        </member>
        <member name="M:YAF.Core.Localizer.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.Localizer"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Localizer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Localizer"/> class.
            </summary>
            <param name="fileName">
            The file name.
            </param>
        </member>
        <member name="M:YAF.Core.Localizer.GetNodesUsingQuery(System.Func{YAF.Types.LanuageResourcesPageResource,System.Boolean})">
            <summary>
            The get nodes using query.
            </summary>
            <param name="predicate">
            The predicate.
            </param>
            <returns>
            The Nodes.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Core.Localizer.GetCountryNodesUsingQuery(System.Func{YAF.Types.LanuageResourcesPageResource,System.Boolean})">
            <summary>
            The get nodes using query.
            </summary>
            <param name="predicate">
            The predicate.
            </param>
            <returns>
            The Nodes.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Core.Localizer.GetRegionNodesUsingQuery(System.Func{YAF.Types.LanuageResourcesPageResource,System.Boolean})">
            <summary>
            The get nodes using query.
            </summary>
            <param name="predicate">
            The predicate.
            </param>
            <returns>
            The Nodes.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Core.Localizer.GetText(System.String,System.String@)">
            <summary>
            The get text.
            </summary>
            <param name="tag">
            The tag.
            </param>
            <param name="localizedText">
            The localized text.
            </param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Core.Localizer.GetText(System.String,System.String)">
            <summary>
            The get text.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The get text.
            </returns>
        </member>
        <member name="M:YAF.Core.Localizer.LoadFile(System.String)">
            <summary>
            The load file.
            </summary>
            <param name="fileName">
            The file name.
            </param>
        </member>
        <member name="M:YAF.Core.Localizer.SetPage(System.String)">
            <summary>
            The set page.
            </summary>
            <param name="page">
            The page.
            </param>
        </member>
        <member name="M:YAF.Core.Localizer.InitCulture">
            <summary>
            The init culture.
            </summary>
        </member>
        <member name="M:YAF.Core.Localizer.LoadFile">
            <summary>
            The load file.
            </summary>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="P:YAF.Core.Localizer.CurrentCulture">
            <summary>
              Gets LanguageCode.
            </summary>
        </member>
        <member name="T:YAF.Core.YafContext">
            <summary>
            Context class that accessible with the same instance from all locations
            </summary>
        </member>
        <member name="T:YAF.Core.UserPageBase">
            <summary>
            User Page Class.
            </summary>
        </member>
        <member name="F:YAF.Core.UserPageBase._initUserPage">
            <summary>
              The _init user page.
            </summary>
        </member>
        <member name="F:YAF.Core.UserPageBase._page">
            <summary>
              The _page.
            </summary>
        </member>
        <member name="F:YAF.Core.UserPageBase._userFlags">
            <summary>
              The _user flags.
            </summary>
        </member>
        <member name="M:YAF.Core.UserPageBase.PageIsNull">
            <summary>
            Helper function to see if the Page variable is populated
            </summary>
            <returns>
            The page is null.
            </returns>
        </member>
        <member name="M:YAF.Core.UserPageBase.InitUserAndPage">
            <summary>
            Initialize the user data and page data...
            </summary>
        </member>
        <member name="M:YAF.Core.UserPageBase.AccessNotNull(System.String)">
            <summary>
            Helper function used for redundant "access" fields internally
            </summary>
            <param name="field">
            The field.
            </param>
            <returns>
            The access not null.
            </returns>
        </member>
        <member name="M:YAF.Core.UserPageBase.PageValueAsBool(System.String)">
            <summary>
            Internal helper function used for redundant page variable access (bool)
            </summary>
            <param name="field">
            The field.
            </param>
            <returns>
            The page value as bool.
            </returns>
        </member>
        <member name="M:YAF.Core.UserPageBase.PageValueAsInt(System.String)">
            <summary>
            Internal helper function used for redundant page variable access (int)
            </summary>
            <param name="field">
            The field.
            </param>
            <returns>
            The page value as int.
            </returns>
        </member>
        <member name="M:YAF.Core.UserPageBase.PageValueAsString(System.String)">
            <summary>
            Internal helper function used for redundant page variable access (string)
            </summary>
            <param name="field">
            The field.
            </param>
            <returns>
            The page value as string.
            </returns>
        </member>
        <member name="P:YAF.Core.UserPageBase.BoardVoteAccess">
            <summary>
              Gets a value indicating whether the current user has access to vote on polls in the current BoardVoteAccess (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.CultureUser">
            <summary>
              Gets the culture code for the user
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.DSTUser">
            <summary>
              Gets a value indicating whether the time zone offset for the user
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumDeleteAccess">
            <summary>
              Gets a value indicating whether the current user can delete own messages in the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumDownloadAccess">
            <summary>
              Gets a value indicating whether the current user can download attachments (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumEditAccess">
            <summary>
              Gets a value indicating whether the current user can edit own messages in the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumModeratorAccess">
            <summary>
              Gets a value indicating whether the current user is a moderator of the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumPollAccess">
            <summary>
              Gets a value indicating whether the current user has access to create polls in the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumPostAccess">
            <summary>
              Gets a value indicating whether the current user has post access in the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumPriorityAccess">
            <summary>
              Gets a value indicating whether the current user has access to create priority topics in the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumReadAccess">
            <summary>
              Gets a value indicating whether the current user has read access in the current forum (True)
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumReplyAccess">
            <summary>
              Gets a value indicating whether the current user has reply access in the current forum (True)
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumUploadAccess">
            <summary>
              Gets a value indicating whether the current user can upload attachments (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.ForumVoteAccess">
            <summary>
              Gets a value indicating whether the current user has access to vote on polls in the current forum (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsAdmin">
            <summary>
              Gets a value indicating whether the  current user is an administrator (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsCaptchaExcluded">
            <summary>
              Gets a value indicating whether the user is excluded from CAPTCHA check (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsCrawler">
            <summary>
              Gets a value indicating whether the current user IsCrawler (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsForumModerator">
            <summary>
              Gets a value indicating whether the current user is a forum moderator (mini-admin) (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsGuest">
            <summary>
              Gets a value indicating whether the current user is a guest (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsHostAdmin">
            <summary>
              Gets a value indicating whether the current user host admin (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsMobileDevice">
            <summary>
              Gets a value indicating whether the current user uses a mobile device (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsModerator">
            <summary>
              Gets a value indicating whether the current user is a modeator for at least one forum (True);
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsDirty">
            <summary>
              Gets a value indicating whether the current user personal data was changed and not handled by a code;
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsFacebookUser">
            <summary>
              Gets a value indicating whether the current user is logged in via Facebook
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsTwitterUser">
            <summary>
              Gets a value indicating whether the current user is logged in via Twitter
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.IsSuspended">
            <summary>
              Gets a value indicating whether the current user is suspended (True).
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.LanguageFile">
            <summary>
              Gets the language file name for the user
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.LastPendingBuddies">
            <summary>
              Gets the number of pending buddy requests.
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.LastUnreadPm">
            <summary>
              Gets LastUnreadPm.
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.NumAlbums">
            <summary>
              Gets the number of albums which a user already has
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.Page">
            <summary>
              Gets or sets Page.
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageBoardID">
            <summary>
              Gets PageBoardID.
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageCategoryID">
            <summary>
              Gets the CategoryID for the current page, or 0 if not in any category
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageCategoryName">
            <summary>
              Gets the Name of category for the current page, or an empty string if not in any category
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageForumID">
            <summary>
              Gets the ForumID for the current page, or 0 if not in any forum
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageForumName">
            <summary>
              Gets the Name of forum for the current page, or an empty string if not in any forum
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageTopicID">
            <summary>
              Gets the  TopicID of the current page, or 0 if not in any topic
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageTopicName">
            <summary>
              Gets the Name of topic for the current page, or an empty string if not in any topic
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageUserID">
            <summary>
              Gets the UserID of the current user.
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PageUserName">
            <summary>
              Gets PageUserName.
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.PendingBuddies">
            <summary>
              Gets the number of pending buddy requests
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.Reputation">
            <summary>
              Gets the number of Reputation Points
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.SuspendedUntil">
            <summary>
              Gets the DateTime the user is suspended until
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.TextEditor">
            <summary>
              Gets the user text editor
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.TimeZoneUser">
            <summary>
              Gets the time zone offset for the user
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.UnreadPrivate">
            <summary>
              Gets the number of private messages that are unread
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.UserHasBuddies">
            <summary>
              Gets a value indicating whether a user has buddies
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.UserStyle">
            <summary>
              Gets the UserStyle for the user
            </summary>
        </member>
        <member name="P:YAF.Core.UserPageBase.UsrAlbums">
            <summary>
              Gets the number of albums which a user can have
            </summary>
        </member>
        <member name="F:YAF.Core.YafContext._contextLifetimeContainer">
            <summary>
            The _context lifetime container.
            </summary>
        </member>
        <member name="F:YAF.Core.YafContext._currentForumPage">
            <summary>
              The _current forum page.
            </summary>
        </member>
        <member name="F:YAF.Core.YafContext._repository">
            <summary>
              The _repository.
            </summary>
        </member>
        <member name="F:YAF.Core.YafContext._singleInstanceFactory">
            <summary>
              The _single instance factory.
            </summary>
        </member>
        <member name="F:YAF.Core.YafContext._variables">
            <summary>
              The _variables.
            </summary>
        </member>
        <member name="F:YAF.Core.YafContext._user">
            <summary>
              The _user.
            </summary>
        </member>
        <member name="M:YAF.Core.YafContext.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.YafContext"/> class. 
              YafContext Constructor
            </summary>
        </member>
        <member name="M:YAF.Core.YafContext.AddLoadMessage(System.String)">
            <summary>
            Helper Function that adds a "load message" to the load message class.
            </summary>
            <param name="loadMessage">
            </param>
        </member>
        <member name="M:YAF.Core.YafContext.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="E:YAF.Core.YafContext.Init">
            <summary>
              On YafContext Constructor Call
            </summary>
        </member>
        <member name="E:YAF.Core.YafContext.Unload">
            <summary>
              On YafContext Unload Call
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Current">
            <summary>
              Get the instance of the Forum Context
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Application">
            <summary>
            Returns the current application.
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.BoardSettings">
            <summary>
              Current Board Settings
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.CurrentForumPage">
            <summary>
              Forum page instance of the current forum page.
              May not be valid until everything is initialized.
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.CurrentUserData">
            <summary>
              Instance of the Combined UserData for the current user.
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.EditorModuleManager">
            <summary>
              Current Page Instance of the Module Manager
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.ForumPageType">
            <summary>
              Get the current page as the forumPage Enum (for comparison)
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Globals">
            <summary>
              Access to the Context Global Variable Repository Class
              which is a helper class that accesses YafContext.Vars with strongly
              typed properties for primary variables.
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.LoadMessage">
            <summary>
              Current Page Load Message
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.PageElements">
            <summary>
              Current Page Elements
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Profile">
            <summary>
              Current Page User Profile
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.QueryIDs">
            <summary>
              Current Page Query ID Helper
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.ServiceLocator">
            <summary>
              Provides access to the Service Locatorer
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Settings">
            <summary>
              Current Page Control Settings from Forum Control
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Theme">
            <summary>
            Gets Theme.
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.UrlBuilder">
            <summary>
              Gets the UrlBuilder
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.User">
            <summary>
              Current Membership User
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Vars">
            <summary>
              YafContext Global Instance Variables
              Use for plugins or other situations where a value is needed per instance.
            </summary>
        </member>
        <member name="P:YAF.Core.YafContext.Item(System.String)">
            <summary>
              Returns a value from the YafContext Global Instance Variables (Vars) collection.
            </summary>
            <param name = "varName"></param>
            <returns>Value if it's found, null if it doesn't exist.</returns>
        </member>
        <member name="E:YAF.Core.YafContext.AfterInit">
            <summary>
              The after init.
            </summary>
        </member>
        <member name="E:YAF.Core.YafContext.BeforeInit">
            <summary>
              The before init.
            </summary>
        </member>
        <member name="T:YAF.Core.UpdateProviderOnInitEvent">
            <summary>
            The update provider on init event.
            </summary>
        </member>
        <member name="F:YAF.Core.UpdateProviderOnInitEvent._boardSettings">
            <summary>
            The _board settings.
            </summary>
        </member>
        <member name="F:YAF.Core.UpdateProviderOnInitEvent._membershipProvider">
            <summary>
            The _membership provider.
            </summary>
        </member>
        <member name="F:YAF.Core.UpdateProviderOnInitEvent._roleProvider">
            <summary>
            The _role provider.
            </summary>
        </member>
        <member name="M:YAF.Core.UpdateProviderOnInitEvent.#ctor(System.Web.Security.MembershipProvider,System.Web.Security.RoleProvider,YAF.Classes.YafBoardSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.UpdateProviderOnInitEvent"/> class.
            </summary>
            <param name="membershipProvider">
            The membership provider.
            </param>
            <param name="roleProvider">
            The role provider.
            </param>
            <param name="boardSettings">
            The board settings.
            </param>
        </member>
        <member name="M:YAF.Core.UpdateProviderOnInitEvent.Handle(YAF.Types.EventProxies.ForumPageInitEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.UpdateProviderOnInitEvent.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="T:YAF.Core.YafTheme">
            <summary>
            The yaf theme.
            </summary>
        </member>
        <member name="F:YAF.Core.YafTheme._themeFile">
            <summary>
              The _theme file.
            </summary>
        </member>
        <member name="F:YAF.Core.YafTheme._themeResources">
            <summary>
            The _theme resources.
            </summary>
        </member>
        <member name="M:YAF.Core.YafTheme.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.YafTheme"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.YafTheme.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafTheme"/> class.
            </summary>
            <param name="newThemeFile">
            The new theme file. 
            </param>
        </member>
        <member name="M:YAF.Core.YafTheme.IsValidTheme(System.String)">
            <summary>
            Basic testing of the theme's validity...
            </summary>
            <param name="themeFile">
            </param>
            <returns>
            The is valid theme. 
            </returns>
        </member>
        <member name="M:YAF.Core.YafTheme.BuildThemePath(System.String)">
            <summary>
            Gets full path to the given theme file.
            </summary>
            <param name="filename">
            Short name of theme file. 
            </param>
            <returns>
            The build theme path. 
            </returns>
        </member>
        <member name="M:YAF.Core.YafTheme.GetItem(System.String,System.String)">
            <summary>
            The get item.
            </summary>
            <param name="page">
            The page. 
            </param>
            <param name="tag">
            The tag. 
            </param>
            <returns>
            The get item. 
            </returns>
        </member>
        <member name="M:YAF.Core.YafTheme.GetItem(System.String,System.String,System.String)">
            <summary>
            The get item.
            </summary>
            <param name="page">
            The page. 
            </param>
            <param name="tag">
            The tag. 
            </param>
            <param name="defaultValue">
            The default value. 
            </param>
            <returns>
            The get item. 
            </returns>
        </member>
        <member name="M:YAF.Core.YafTheme.GetMappedThemeFile(System.String)">
            <summary>
            The get mapped theme file.
            </summary>
            <param name="themeFile">
            The theme file.
            </param>
            <returns>
            The get mapped theme file.
            </returns>
        </member>
        <member name="M:YAF.Core.YafTheme.LoadThemeFile">
            <summary>
            The load theme file.
            </summary>
        </member>
        <member name="P:YAF.Core.YafTheme.LogMissingThemeItem">
            <summary>
              Gets or sets a value indicating whether LogMissingThemeItem.
            </summary>
        </member>
        <member name="P:YAF.Core.YafTheme.ThemeDir">
            <summary>
              Gets ThemeDir.
            </summary>
        </member>
        <member name="P:YAF.Core.YafTheme.ThemeFile">
            <summary>
              Get or Set the current Theme File
            </summary>
        </member>
        <member name="T:YAF.Core.DigestSendTask">
            <summary>
            The digest send task.
            </summary>
        </member>
        <member name="F:YAF.Core.DigestSendTask._taskName">
            <summary>
              The _task name.
            </summary>
        </member>
        <member name="M:YAF.Core.DigestSendTask.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.DigestSendTask"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.DigestSendTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="M:YAF.Core.DigestSendTask.IsTimeToSendDigestForBoard(YAF.Core.YafLoadBoardSettings)">
            <summary>
            The is time to send digest for board.
            </summary>
            <param name="boardSettings">
            The board settings.
            </param>
            <returns>
            The is time to send digest for board.
            </returns>
        </member>
        <member name="M:YAF.Core.DigestSendTask.SendDigest">
            <summary>
            The send digest.
            </summary>
        </member>
        <member name="M:YAF.Core.DigestSendTask.SendDigestToUsers(System.Collections.Generic.IEnumerable{YAF.Types.Objects.TypedUserFind},System.Int32,System.String)">
            <summary>
            The send digest to users.
            </summary>
            <param name="usersWithDigest">
              The users with digest.
            </param>
            <param name="boardId"></param>
            <param name="forumName"></param>
        </member>
        <member name="P:YAF.Core.DigestSendTask.TaskName">
            <summary>
              Gets TaskName.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafUserIgnored">
            <summary>
            User Ignored Service for the current user.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafUserIgnored._dbBroker">
            <summary>
            The _db broker.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafUserIgnored._userIgnoreList">
            <summary>
              The _user ignore list.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafUserIgnored.#ctor(System.Web.HttpSessionStateBase,YAF.Types.Interfaces.IDBBroker)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafUserIgnored"/> class.
            </summary>
            <param name="sessionStateBase">
            The session state base.
            </param>
            <param name="dbBroker">
            The db broker.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafUserIgnored.AddIgnored(System.Int32)">
            <summary>
            The add ignored.
            </summary>
            <param name="ignoredUserId">
            The ignored user id.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafUserIgnored.ClearIgnoreCache">
            <summary>
            The clear ignore cache.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafUserIgnored.IsIgnored(System.Int32)">
            <summary>
            The is ignored.
            </summary>
            <param name="ignoredUserId">
            The ignored user id.
            </param>
            <returns>
            The is ignored.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafUserIgnored.RemoveIgnored(System.Int32)">
            <summary>
            The remove ignored.
            </summary>
            <param name="ignoredUserId">
            The ignored user id.
            </param>
        </member>
        <member name="P:YAF.Core.Services.YafUserIgnored.SessionStateBase">
            <summary>
            Gets or sets SessionStateBase.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafFormatMessage">
            <summary>
            YafFormatMessage provides functions related to formatting the post messages.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafFormatMessage._Options">
            <summary>
              format message regex
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.#ctor(YAF.Types.Interfaces.IServiceLocator,System.Web.HttpServerUtilityBase,System.Func{System.Collections.Generic.IEnumerable{System.Boolean},YAF.Types.Interfaces.IProcessReplaceRules})">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafFormatMessage"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="httpServer">
            The http server.
            </param>
            <param name="processReplaceRuleFactory">
            The process replace rule factory.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.BBCodeForbiddenDetector(System.String,System.String,System.Char)">
            <summary>
            The method to detect a forbidden BBCode tag from delimited by 'delim' list 
              'stringToMatch'
            </summary>
            <param name="stringToClear">
            Input string
            </param>
            <param name="stringToMatch">
            String with delimiter
            </param>
            <param name="delim">
            The delim.
            </param>
            <returns>
            Returns a string containing a forbidden BBCode or a null string
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.CheckHtmlTags(System.String,System.String,System.Char)">
            <summary>
            The method used to get response string, if a forbidden tag is detected.
            </summary>
            <param name="checkString">
            The string to check.
            </param>
            <param name="acceptedTags">
            The list of accepted tags.
            </param>
            <param name="delim">
            The delimeter in a tags list.
            </param>
            <returns>
            A message string.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.FormatMessage(System.String,YAF.Types.Flags.MessageFlags,System.Boolean,System.DateTime)">
            <summary>
            The format message.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="messageFlags">
            The message flags.
            </param>
            <param name="targetBlankOverride">
            The target blank override.
            </param>
            <param name="messageLastEdited">
            The message last edited.
            </param>
            <returns>
            The formatted message.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.FormatSyndicationMessage(System.String,YAF.Types.Flags.MessageFlags,System.Boolean,System.Int32)">
            <summary>
            The format syndication message.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="messageFlags">
            The message flags.
            </param>
            <param name="altItem">
            The alt Item.
            </param>
            <param name="charsToFetch">
            The chars To Fetch.
            </param>
            <returns>
            The formatted message.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.GetCleanedTopicMessage(System.Object,System.Object)">
            <summary>
            The get cleaned topic message. Caches cleaned topic message by TopicID.
            </summary>
            <param name="topicMessage">
            The message to clean.
            </param>
            <param name="topicId">
              The topic id.
            </param>
            <returns>
            The get cleaned topic message.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.HtmlTagForbiddenDetector(System.String,System.String,System.Char)">
            <summary>
            The method to detect a forbidden HTML code from delimited by 'delim' list
            </summary>
            <param name="stringToClear">
            The string To Clear.
            </param>
            <param name="stringToMatch">
            The string To Match.
            </param>
            <param name="delim">
            The delim.
            </param>
            <returns>
            Returns a forbidden HTML tag or a null string
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RemoveNestedQuotes(System.String)">
            <summary>
            Removes nested YafBBCode quotes from the given message body.
            </summary>
            <param name="body">
            Message body test to remove nested quotes from
            </param>
            <returns>
            A version of <paramref name="body"/> that contains no nested quotes.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RemoveHiddenBBCodeContent(System.String)">
            <summary>
            Removes BBCode Posted Hidden Content
            </summary>
            <param name="body">
            Message body to remove the hidden content from
            </param>
            <returns>
            The Cleaned body.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RemoveCustomBBCodes(System.String)">
            <summary>
            Removes Custom BBCodes
            </summary>
            <param name="body">
            Message body to remove the hidden content from
            </param>
            <returns>
            The Cleaned body.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RepairHtml(System.String,System.Boolean)">
            <summary>
            The repair html.
            </summary>
            <param name="html">
            The html.
            </param>
            <param name="allowHtml">
            The allow html.
            </param>
            <returns>
            The repaired html.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RepairHtml(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The repair html.
            </summary>
            <param name="html">
            The html.
            </param>
            <param name="allowHtml">
            The allow html.
            </param>
            <param name="matchList">
            The match List.
            </param>
            <returns>
            The repaired html.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RepairHtmlFeeds(System.String,System.Boolean)">
            <summary>
            The repair html.
            </summary>
            <param name="html">
            The html.
            </param>
            <param name="allowHtml">
            The allow html.
            </param>
            <returns>
            The repaired html.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.SurroundWordList(System.String,System.Collections.Generic.IList{System.String},System.String,System.String)">
            <summary>
            Surrounds a word list with prefix/postfix. Case insensitive.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="wordList">
            The word List.
            </param>
            <param name="prefix">
            The prefix.
            </param>
            <param name="postfix">
            The postfix.
            </param>
            <returns>
            The surround word list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.MakeMatchList(System.String,System.String)">
            <summary>
            The make match list.
            </summary>
            <param name="matchRegEx">
            The match reg ex.
            </param>
            <param name="text">
            The text.
            </param>
            <returns>
            The make match list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.MatchAndPerformAction(System.String,System.String,System.Action{System.String,System.Int32,System.Int32})">
            <summary>
            The match and perform action.
            </summary>
            <param name="matchRegEx">
            The match reg ex.
            </param>
            <param name="text">
            The text.
            </param>
            <param name="matchAction">
            The match action.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafFormatMessage.RemoveHtmlByList(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            remove html by list.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="matchList">
            The match list.
            </param>
            <returns>
            The remove html by list.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.YafFormatMessage.ServiceLocator">
            <summary>
            Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafFormatMessage.HttpServer">
            <summary>
            Gets or sets HttpServer.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafFormatMessage.ProcessReplaceRuleFactory">
            <summary>
            Gets or sets ProcessReplaceRuleFactory.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.CheckForSpam.TrainComment">
            <summary>
            The train comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.TrainComment.comment">
            <summary>
            Gets or sets comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.TrainComment.train">
            <summary>
            Gets or sets train.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.InvalidResponseException">
            <summary>
            Exception thrown when a response other than 200 is returned.
            </summary>
            <remarks>
            This exception does not have any custom properties, 
              thus it does not implement ISerializable.
            </remarks>
        </member>
        <member name="F:YAF.Core.Services.InvalidResponseException.status">
            <summary>
            The status.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.InvalidResponseException.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.Services.InvalidResponseException"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.InvalidResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.InvalidResponseException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:YAF.Core.Services.InvalidResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.InvalidResponseException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="innerException">
            The inner exception.
            </param>
        </member>
        <member name="M:YAF.Core.Services.InvalidResponseException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.InvalidResponseException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="status">
            The status.
            </param>
        </member>
        <member name="M:YAF.Core.Services.InvalidResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.InvalidResponseException"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="P:YAF.Core.Services.InvalidResponseException.HttpStatus">
            <summary>
              Gets the HTTP status returned by the service.
            </summary>
            <value>The HTTP status.</value>
        </member>
        <member name="T:YAF.Core.Nntp.Article">
            <summary>
            The article.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Article.articleId">
            <summary>
            The article id.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Article.body">
            <summary>
            The body.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Article.children">
            <summary>
            The children.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Article.header">
            <summary>
            The header.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Article.lastReply">
            <summary>
            The last reply.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Article.messageId">
            <summary>
            The message id.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Article.MessageId">
            <summary>
            Gets or sets MessageId.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Article.ArticleId">
            <summary>
            Gets or sets ArticleId.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Article.Header">
            <summary>
            Gets or sets Header.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Article.Body">
            <summary>
            Gets or sets Body.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Article.LastReply">
            <summary>
            Gets or sets LastReply.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Article.Children">
            <summary>
            Gets or sets Children.
            </summary>
        </member>
        <member name="T:YAF.Core.LoadSerializedXmlFile`1">
            <summary>
            The load serialized xml file.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:YAF.Core.LoadSerializedXmlFile`1.FromFile(System.String,System.String,System.Action{`0})">
            <summary>
            The attempt load file.
            </summary>
            <param name="xmlFileName">
            The File Name. 
            </param>
            <param name="cacheName">
            The cache Name. 
            </param>
            <param name="transformResource">
            The transform Resource.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.LoadSerializedXmlFile`1.GetEncodingForXmlFile(System.String)">
            <summary>
            The get encoding for xml file.
            </summary>
            <param name="xmlFileName">
            The xml file name. 
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.LocalizationProvider">
            <summary>
            The localization handler.
            </summary>
        </member>
        <member name="F:YAF.Core.LocalizationProvider._initCulture">
            <summary>
              The _init culture.
            </summary>
        </member>
        <member name="F:YAF.Core.LocalizationProvider._initLocalization">
            <summary>
              The _init localization.
            </summary>
        </member>
        <member name="F:YAF.Core.LocalizationProvider._localization">
            <summary>
              The _localization.
            </summary>
        </member>
        <member name="F:YAF.Core.LocalizationProvider._transPage">
            <summary>
              The _trans page.
            </summary>
        </member>
        <member name="M:YAF.Core.LocalizationProvider.InitCulture">
            <summary>
            Set the culture and UI culture to the browser's accept language
            </summary>
        </member>
        <member name="M:YAF.Core.LocalizationProvider.InitLocalization">
            <summary>
            Set up the localization
            </summary>
        </member>
        <member name="E:YAF.Core.LocalizationProvider.AfterInit">
            <summary>
              The after init.
            </summary>
        </member>
        <member name="E:YAF.Core.LocalizationProvider.BeforeInit">
            <summary>
              The before init.
            </summary>
        </member>
        <member name="P:YAF.Core.LocalizationProvider.Localization">
            <summary>
              Gets or sets Localization.
            </summary>
        </member>
        <member name="P:YAF.Core.LocalizationProvider.TranslationPage">
            <summary>
              Current TransPage for Localization
            </summary>
        </member>
        <member name="T:YAF.Core.GlobalContainer">
            <summary>
            Instance of the Global Container... yes, a God class. It's the best way to do it, though.
            </summary>
        </member>
        <member name="F:YAF.Core.GlobalContainer._syncObject">
            <summary>
            The _sync object.
            </summary>
        </member>
        <member name="F:YAF.Core.GlobalContainer._container">
            <summary>
              The _container.
            </summary>
        </member>
        <member name="M:YAF.Core.GlobalContainer.CreateContainer">
            <summary>
            The create container.
            </summary>
        </member>
        <member name="P:YAF.Core.GlobalContainer.Container">
            <summary>
              Gets Container.
            </summary>
        </member>
        <member name="T:YAF.Core.ServiceLocatorEventRaiser">
            <summary>
            The autofac event raiser.
            </summary>
        </member>
        <member name="F:YAF.Core.ServiceLocatorEventRaiser._serviceLocator">
            <summary>
            The _service locator.
            </summary>
        </member>
        <member name="M:YAF.Core.ServiceLocatorEventRaiser.#ctor(YAF.Types.Interfaces.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ServiceLocatorEventRaiser"/> class.
            </summary>
            <param name="serviceLocator">
            The service Locator.
            </param>
        </member>
        <member name="M:YAF.Core.ServiceLocatorEventRaiser.Raise``1(``0)">
            <summary>
            The event raiser.
            </summary>
            <param name="eventObject">
            The event object.
            </param>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:YAF.Core.ServiceLocatorEventRaiser.RaiseIssolated``1(``0,System.Action{System.String,System.Exception})">
            <summary>
            Raise all events using try/catch block.
            </summary>
            <typeparam name="T">
            </typeparam>
            <param name="eventObject">
            </param>
            <param name="logExceptionAction">
            </param>
        </member>
        <member name="T:YAF.Core.UnloadSessionForumModule">
            <summary>
            The unload session module.
            </summary>
        </member>
        <member name="T:YAF.Core.BaseForumModule">
            <summary>
            The base forum module.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseForumModule.Init">
            <summary>
            The initialization function.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseForumModule.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:YAF.Core.BaseForumModule.Active">
            <summary>
              Gets a value indicating whether Active.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseForumModule.Description">
            <summary>
              Gets Description.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseForumModule.ForumControlObj">
            <summary>
              Gets or sets ForumControlObj.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseForumModule.ModuleId">
            <summary>
              Gets ModuleId.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseForumModule.PageContext">
            <summary>
            Gets PageContext.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseForumModule.ServiceLocator">
            <summary>
              Gets ServiceLocator.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseForumModule.Localization">
            <summary>
              Gets ServiceLocator.
            </summary>
        </member>
        <member name="M:YAF.Core.UnloadSessionForumModule.Init">
            <summary>
            The init.
            </summary>
        </member>
        <member name="M:YAF.Core.UnloadSessionForumModule.UnloadSessionModule_Unload(System.Object,System.EventArgs)">
            <summary>
            The unload session module_ unload.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="P:YAF.Core.UnloadSessionForumModule.UnloadSession">
            <summary>
              Gets or sets a value indicating whether UnloadSession.
            </summary>
        </member>
        <member name="T:YAF.Core.HttpRuntimeCache">
            <summary>
            The http runtime cache -- uses HttpRuntime cache to store cache information.
            </summary>
        </member>
        <member name="F:YAF.Core.HttpRuntimeCache._eventRaiser">
            <summary>
              The _event raiser.
            </summary>
        </member>
        <member name="F:YAF.Core.HttpRuntimeCache._haveLockObject">
            <summary>
              The _have lock object.
            </summary>
        </member>
        <member name="F:YAF.Core.HttpRuntimeCache._treatCacheKey">
            <summary>
              The _treat cache key.
            </summary>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.#ctor(YAF.Types.Interfaces.IRaiseEvent,YAF.Types.Interfaces.IHaveLockObject,YAF.Types.Interfaces.ITreatCacheKey)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.HttpRuntimeCache"></see>
              class.
            </summary>
            <param name="eventRaiser">
            The event raiser.
            </param>
            <param name="haveLockObject">
            The have lock object.
            </param>
            <param name="treatCacheKey">
            The treat Cache Key.
            </param>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.GetAll``1">
            <summary>
            The get all.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.GetOrSet``1(System.String,System.Func{``0},System.TimeSpan)">
            <summary>
            The get or set.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="getValue">
            The get value.
            </param>
            <param name="timeout">
            The timeout.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.GetOrSet``1(System.String,System.Func{``0})">
            <summary>
            The get or set.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="getValue">
            The get value.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            The set.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
            <param name="timeout">
            The timeout.
            </param>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.Get(System.String)">
            <summary>
            The get.
            </summary>
            <param name="originalKey">
            The key.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.Remove(System.String)">
            <summary>
            The remove.
            </summary>
            <param name="key">
            The key.
            </param>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.Set(System.String,System.Object)">
            <summary>
            The set.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.CreateKey(System.String)">
            <summary>
            The create key.
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            The create key.
            </returns>
        </member>
        <member name="M:YAF.Core.HttpRuntimeCache.GetOrSetInternal``1(System.String,System.Func{``0},System.Action{``0})">
            <summary>
            The get or set internal.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="getValue">
            The get value.
            </param>
            <param name="addToCacheFunction">
            The add to cache function.
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Core.HttpRuntimeCache.Item(System.String)">
            <summary>
              The this.
            </summary>
            <param name = "key">
              The key.
            </param>
        </member>
        <member name="T:YAF.Core.YafTaskModuleNotRegisteredException">
            <summary>
            The yaf task module not registered exception.
            </summary>
        </member>
        <member name="M:YAF.Core.YafTaskModuleNotRegisteredException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafTaskModuleNotRegisteredException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="T:YAF.Core.YafBaseContainerModule">
            <summary>
            The module for all singleton scoped items...
            </summary>
        </member>
        <member name="T:YAF.Core.IHaveComponentRegistry">
            <summary>
            The i have component registry.
            </summary>
        </member>
        <member name="P:YAF.Core.IHaveComponentRegistry.ComponentRegistry">
            <summary>
            Gets or sets ComponentRegistry.
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.Configure(Autofac.Core.IComponentRegistry)">
            <summary>
            Apply the module to the component registry.
            </summary>
            <param name="componentRegistry">
            Component registry to apply configuration to.
            </param>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterBasicBindings">
            <summary>
            The register basic bindings.
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterEventBindings">
            <summary>
            Register event bindings
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterExternalModules">
            <summary>
            The register external modules.
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterDynamicServices(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            The register services.
            </summary>
            <exception cref="T:System.NotSupportedException"><c>NotSupportedException</c>.</exception>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterMembershipProviders">
            <summary>
            Register membership providers
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterModules">
            <summary>
            The register modules.
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterPages">
            <summary>
            The register pages
            </summary>
        </member>
        <member name="M:YAF.Core.YafBaseContainerModule.RegisterServices">
            <summary>
            The register services.
            </summary>
        </member>
        <member name="P:YAF.Core.YafBaseContainerModule.ComponentRegistry">
            <summary>
              Gets or sets ComponentRegistry.
            </summary>
        </member>
        <member name="P:YAF.Core.YafBaseContainerModule.ExtensionAssemblies">
            <summary>
              Gets or sets ExtensionAssemblies.
            </summary>
        </member>
        <member name="T:YAF.Core.Syndication.YafSyndicationFeed">
            <summary>
            Summary description for YafSyndicationFeed.
            </summary>
        </member>
        <member name="F:YAF.Core.Syndication.YafSyndicationFeed.FeedCategories">
            <summary>
            The feed categories.
            </summary>
        </member>
        <member name="M:YAF.Core.Syndication.YafSyndicationFeed.#ctor(System.String,YAF.Types.Constants.YafRssFeeds,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Syndication.YafSyndicationFeed"/> class.
            </summary>
            <param name="subTitle">
            </param>
            <param name="feedType">
            The feed source.
            </param>
            <param name="sf">
            The feed type Atom/Rss.
            </param>
            <param name="urlAlphaNum">
            The alphanumerically encoded base site Url.
            </param>
        </member>
        <member name="T:YAF.Core.Services.YafSendNotification">
            <summary>
            The yaf send notification.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSendNotification.#ctor(YAF.Types.Interfaces.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafSendNotification"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendNotification.ToModeratorsThatMessageNeedsApproval(System.Int32,System.Int32)">
            <summary>
            Sends Notifications to Moderators that Message Needs Approval
            </summary>
            <param name="forumId">
            The forum id.
            </param>
            <param name="newMessageId">
            The new message id.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendNotification.ToModeratorsThatMessageWasReported(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sends Notifications to Moderators that a Message was Reported
            </summary>
            <param name="pageForumID">
            The page Forum ID.
            </param>
            <param name="reportedMessageId">
            The reported message id.
            </param>
            <param name="reporter">
            The reporter.
            </param>
            <param name="reportText">
            The report Text.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendNotification.ToPrivateMessageRecipient(System.Int32,System.String)">
            <summary>
            Sends notification about new PM in user's inbox.
            </summary>
            <param name="toUserId">
            User supposed to receive notification about new PM.
            </param>
            <param name="subject">
            Subject of PM user is notified about.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendNotification.ToWatchingUsers(System.Int32)">
            <summary>
            The to watching users.
            </summary>
            <param name="newMessageId">
            The new message id.
            </param>
        </member>
        <member name="P:YAF.Core.Services.YafSendNotification.ServiceLocator">
            <summary>
            Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafDateTime">
            <summary>
            The yaf date time.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafDateTime.timeZoneName">
            <summary>
              Time zone suffix for Guests
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.FormatDateLong(System.DateTime)">
            <summary>
            Formats a datetime value into 7. february 2003
            </summary>
            <param name="dateTime">
            The date to be formatted
            </param>
            <returns>
            The format date long.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.FormatDateShort(System.DateTime)">
            <summary>
            Formats a datetime value into 07.03.2003
            </summary>
            <param name="dateTime">
            The date Time.
            </param>
            <returns>
            Short formatted date.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.FormatDateTime(System.DateTime)">
            <summary>
            Formats a datetime value into 07.03.2003 22:32:34
            </summary>
            <param name="dateTime">
            The date Time.
            </param>
            <returns>
            Formatted  <see cref="T:System.String"/> of the formatted <see cref="T:System.DateTime"/> Object.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.FormatDateTimeShort(System.DateTime)">
            <summary>
            This formats a DateTime into a short string
            </summary>
            <param name="dateTime">
            The date Time.
            </param>
            <returns>
            The formatted string created from the DateTime object.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.FormatDateTimeTopic(System.DateTime)">
            <summary>
            Formats a datatime value into 07.03.2003 00:00:00 except if 
              the date is yesterday or today -- in which case it says that.
            </summary>
            <param name="dateTime">
            The date Time.
            </param>
            <returns>
            Formatted string of DateTime object
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.FormatTime(System.DateTime)">
            <summary>
            Formats a datetime value into 22:32:34
            </summary>
            <param name="dateTime">
            The date to be formatted
            </param>
            <returns>
            The format time.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDateTime.AccountForDST(System.DateTime)">
            <summary>
            Determines if the given date falls during DST and updates accordingly if the user chosen to allow for DST.
            </summary>
            <param name="dtCurrent">
            The date to be checked
            </param>
            <returns>
            DateTime object account for DST (if required).
            </returns>
        </member>
        <member name="P:YAF.Core.Services.YafDateTime.TimeOffset">
            <summary>
              Gets the time zone offset 
              for the current user.
            </summary>
        </member>
        <member name="T:YAF.Core.JavaScriptStatement">
            <summary>
            Java Script Statement Builder
            </summary>
        </member>
        <member name="F:YAF.Core.JavaScriptStatement.builder">
            <summary>
              The String builder used to build the script.
            </summary>
        </member>
        <member name="M:YAF.Core.JavaScriptStatement.Add(System.String)">
            <summary>
            Append to the script
            </summary>
            <param name="js">
            The js.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.JavaScriptStatement.Build(YAF.Types.Interfaces.IScriptBuilder)">
            <summary>
            Get the script's result as String
            </summary>
            <param name="scriptScriptBuilder">
            The script Builder.
            </param>
            <returns>
            The Complete Script
            </returns>
        </member>
        <member name="M:YAF.Core.JavaScriptStatement.Clear">
            <summary>
            Clears the entire script.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.AntiSpamTypePadClient">
            <summary>
            The AntiSpam TypePad client: http://antispam.typepad.com
            </summary>
        </member>
        <member name="T:YAF.Core.Services.CheckForSpamClientBase">
            <summary>
            The client class used to communicate with the spam service.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.httpClient">
            <summary>
              The http client.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.apiKey">
            <summary>
              The api key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.proxy">
            <summary>
              The proxy.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.rootUrl">
            <summary>
              The root url.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.submitCheckUrl">
            <summary>
              The check url.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.submitHamUrl">
            <summary>
              The submit ham url.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.submitSpamUrl">
            <summary>
              The submit spam url.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.timeout">
            <summary>
              The timeout.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.userAgent">
            <summary>
              The user agent.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.verifyUrl">
            <summary>
              The verify url.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpamClientBase.version">
            <summary>
              The version.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.#ctor(System.String,System.Uri,YAF.Core.Services.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.CheckForSpamClientBase"/> class.
            </summary>
            <remarks>
            This constructor takes in all the dependencies to allow for 
              dependency injection and unit testing. Seems like overkill, 
              but it's worth it.
            </remarks>
            <param name="apiKey">
            The Akismet API key.
            </param>
            <param name="blogUrl">
            The root url of the blog.
            </param>
            <param name="httpClient">
            Client class used to make the underlying requests.
            </param>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.CheckForSpamClientBase"/> class.
            </summary>
            <param name="apiKey">
            The Akismet API key.
            </param>
            <param name="rootUrl">
            The root url of the site using Akismet.
            </param>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.BuildUserAgent(System.String)">
            <summary>
            Helper method for building a user agent string in the format 
              preferred by Akismet.
            </summary>
            <param name="applicationName">
            Name of the application.
            </param>
            <returns>
            The build user agent.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.CheckCommentForSpam(YAF.Core.Services.IComment)">
            <summary>
            Checks the comment and returns true if it is spam, otherwise false.
            </summary>
            <param name="comment">
            </param>
            <returns>
            The check comment for spam.
            </returns>
            <exception cref="T:YAF.Core.Services.InvalidResponseException">
            Akismet returned an empty response
            </exception>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.SubmitHam(YAF.Core.Services.IComment)">
            <summary>
            Submits a comment to Akismet that should not have been 
              flagged as SPAM (a false positive).
            </summary>
            <param name="comment">
            </param>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.SubmitSpam(YAF.Core.Services.IComment)">
            <summary>
            Submits a comment to Akismet that should have been 
              flagged as SPAM, but was not flagged by Akismet.
            </summary>
            <param name="comment">
            </param>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.VerifyApiKey">
            <summary>
            Verifies the API key.  You really only need to
              call this once, perhaps at startup.
            </summary>
            <returns>
            The verify api key.
            </returns>
            <exception type="Sytsem.Web.WebException">
            If it cannot make a request of Akismet.
            </exception>
            <exception cref="T:YAF.Core.Services.InvalidResponseException">
            Akismet returned an empty response
            </exception>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.SetServiceUrls">
            <summary>
            The set service urls.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpamClientBase.SubmitComment(YAF.Core.Services.IComment,System.Uri)">
            <summary>
            The submit comment.
            </summary>
            <param name="comment">
            The comment.
            </param>
            <param name="url">
            The url.
            </param>
            <returns>
            The submit comment.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.ApiKey">
            <summary>
              Gets or sets the Akismet API key.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.Proxy">
            <summary>
              Gets or sets the proxy to use.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.RootUrl">
            <summary>
              Gets or sets the root URL to the blog.
            </summary>
            <value>The blog URL.</value>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.Timeout">
            <summary>
              Gets or sets the timeout in milliseconds for the http request to Akismet. 
              By default 5000 (5 seconds).
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.UserAgent">
            <summary>
              Gets or sets the Usera Agent for the Akismet Client.  
              Do not confuse this with the user agent for the comment 
              being checked.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.CheckUrlFormat">
            <summary>
            Gets CheckUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.SubmitHamUrlFormat">
            <summary>
            Gets SubmitHamUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.SubmitSpamUrlFormat">
            <summary>
            Gets SubmitSpamUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpamClientBase.SubmitVerifyKeyFormat">
            <summary>
            Gets SubmitVerifyKeyFormat.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.AntiSpamTypePadClient.#ctor(System.String,System.Uri,YAF.Core.Services.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.AntiSpamTypePadClient"/> class.
            </summary>
            <param name="apiKey">
            The api key.
            </param>
            <param name="blogUrl">
            The blog url.
            </param>
            <param name="httpClient">
            The http client.
            </param>
        </member>
        <member name="M:YAF.Core.Services.AntiSpamTypePadClient.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.AntiSpamTypePadClient"/> class.
            </summary>
            <param name="apiKey">
            The api key.
            </param>
            <param name="rootUrl">
            The root url.
            </param>
        </member>
        <member name="P:YAF.Core.Services.AntiSpamTypePadClient.CheckUrlFormat">
            <summary>
            Gets CheckUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.AntiSpamTypePadClient.SubmitHamUrlFormat">
            <summary>
            Gets SubmitHamUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.AntiSpamTypePadClient.SubmitSpamUrlFormat">
            <summary>
            Gets SubmitSpamUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.AntiSpamTypePadClient.SubmitVerifyKeyFormat">
            <summary>
            Gets SubmitVerifyKeyFormat.
            </summary>
        </member>
        <member name="T:YAF.Core.MsSqlDynamicDbConnectionManager">
            <summary>
            The yaf dynamic db conn manager.
            </summary>
        </member>
        <member name="P:YAF.Core.MsSqlDynamicDbConnectionManager.ConnectionString">
            <summary>
            Gets ConnectionString.
            </summary>
        </member>
        <member name="T:YAF.Core.ISendMailExtensions">
            <summary>
            The yaf send mail extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ISendMailExtensions.Queue(YAF.Types.Interfaces.ISendMail,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Queues an e-mail message for asynchronous delivery
            </summary>
            <param name="sendMail">
            The send Mail.
            </param>
            <param name="fromEmail">
            The from Email.
            </param>
            <param name="fromName">
            The from Name.
            </param>
            <param name="toEmail">
            The to Email.
            </param>
            <param name="toName">
            The to Name.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="bodyText">
            The body Text.
            </param>
            <param name="bodyHtml">
            The body Html.
            </param>
        </member>
        <member name="M:YAF.Core.ISendMailExtensions.Queue(YAF.Types.Interfaces.ISendMail,System.String,System.String,System.String,System.String)">
            <summary>
            Queues an e-mail messagage for asynchronous delivery
            </summary>
            <param name="sendMail">
            The send Mail.
            </param>
            <param name="fromEmail">
            </param>
            <param name="toEmail">
            </param>
            <param name="subject">
            </param>
            <param name="body">
            </param>
        </member>
        <member name="M:YAF.Core.ISendMailExtensions.Send(YAF.Types.Interfaces.ISendMail,System.String,System.String,System.String,System.String)">
            <summary>
            The send.
            </summary>
            <param name="sendMail">
            The send Mail.
            </param>
            <param name="fromEmail">
            The from email.
            </param>
            <param name="toEmail">
            The to email.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="body">
            The body.
            </param>
        </member>
        <member name="M:YAF.Core.ISendMailExtensions.Send(YAF.Types.Interfaces.ISendMail,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The send.
            </summary>
            <param name="sendMail">
            The send mail.
            </param>
            <param name="fromEmail">
            The from email.
            </param>
            <param name="fromName">
            The from name.
            </param>
            <param name="toEmail">
            The to email.
            </param>
            <param name="toName">
            The to name.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="bodyText">
            The body text.
            </param>
            <param name="bodyHtml">
            The body html.
            </param>
        </member>
        <member name="M:YAF.Core.ISendMailExtensions.Send(YAF.Types.Interfaces.ISendMail,System.Net.Mail.MailAddress,System.Net.Mail.MailAddress,System.String,System.String)">
            <summary>
            The send.
            </summary>
            <param name="sendMail">
            The send Mail.
            </param>
            <param name="fromAddress">
            The from address.
            </param>
            <param name="toAddress">
            The to address.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="bodyText">
            The body text.
            </param>
        </member>
        <member name="M:YAF.Core.ISendMailExtensions.Send(YAF.Types.Interfaces.ISendMail,System.Net.Mail.MailAddress,System.Net.Mail.MailAddress,System.String,System.String,System.String)">
            <summary>
            The send.
            </summary>
            <param name="sendMail">
            The send mail.
            </param>
            <param name="fromAddress">
            The from address.
            </param>
            <param name="toAddress">
            The to address.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="bodyText">
            The body text.
            </param>
            <param name="bodyHtml">
            The body html.
            </param>
        </member>
        <member name="T:YAF.Core.IPermissionsExtensions">
            <summary>
            The i permissions extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IPermissionsExtensions.Check(YAF.Types.Interfaces.IPermissions,System.Int32)">
            <summary>
            The check.
            </summary>
            <param name="permissions">
            The permissions.
            </param>
            <param name="permission">
            The permission.
            </param>
            <returns>
            The check.
            </returns>
        </member>
        <member name="M:YAF.Core.IPermissionsExtensions.HandleRequest(YAF.Types.Interfaces.IPermissions,System.Int32)">
            <summary>
            The handle request.
            </summary>
            <param name="permissions">
            The permissions.
            </param>
            <param name="permission">
            The permission.
            </param>
        </member>
        <member name="T:YAF.Core.CurrentRoleProvider">
            <summary>
            The current role provider.
            </summary>
        </member>
        <member name="P:YAF.Core.CurrentRoleProvider.Instance">
            <summary>
              The instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.AdminPage">
            <summary>
            Admin page with extra security. All admin pages need to be derived from this base class.
            </summary>
        </member>
        <member name="T:YAF.Core.ForumPage">
            <summary>
            The class that all YAF forum pages are derived from.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._pageCache">
            <summary>
              Cache for the page
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._transPage">
            <summary>
              The _trans page.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._noDataBase">
            <summary>
              No Database Toggle
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._showFooter">
            <summary>
              The _show footer.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._showToolBar">
            <summary>
              The _show tool bar.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._topPageControl">
            <summary>
              The _top page control.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumPage._isProtected">
            <summary>
            The is protected.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.ForumPage"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ForumPage"/> class.
            </summary>
            <param name="transPage">
            The trans page.
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.IsNull(System.String)">
            <summary>
            The is null.
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            The is null.
            </returns>
        </member>
        <member name="M:YAF.Core.ForumPage.GetCollapsiblePanelImageURL(System.String,YAF.Types.Constants.CollapsiblePanelState)">
            <summary>
            Gets the collapsible panel image url (expanded or collapsed).
            </summary>
            <param name="panelID">
            ID of collapsible panel
            </param>
            <param name="defaultState">
            Default Panel State
            </param>
            <returns>
            Image URL
            </returns>
        </member>
        <member name="M:YAF.Core.ForumPage.GetThemeContents(System.String,System.String)">
            <summary>
            Get a value from the currently configured forum theme.
            </summary>
            <param name="page">
            Page to look under
            </param>
            <param name="tag">
            Theme item
            </param>
            <returns>
            Converted Theme information
            </returns>
        </member>
        <member name="M:YAF.Core.ForumPage.GetThemeContents(System.String,System.String,System.String)">
            <summary>
            Get a value from the currently configured forum theme.
            </summary>
            <param name="page">
            Page to look under
            </param>
            <param name="tag">
            Theme item
            </param>
            <param name="defaultValue">
            Value to return if the theme item doesn't exist
            </param>
            <returns>
            Converted Theme information or Default Value if it doesn't exist
            </returns>
        </member>
        <member name="M:YAF.Core.ForumPage.HtmlEncode(System.Object)">
            <summary>
            The html encode.
            </summary>
            <param name="data">
            The data.
            </param>
            <returns>
            The html encode.
            </returns>
        </member>
        <member name="M:YAF.Core.ForumPage.RedirectNoAccess">
            <summary>
            The redirect no access.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaiseInit">
            <summary>
            The raise init.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaiseLoad">
            <summary>
            The raise load.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaisePreRender">
            <summary>
            The raise pre render.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.CreatePageLinks">
            <summary>
            The create page links.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.InsertCssRefresh(System.Web.UI.Control)">
            <summary>
            The insert css refresh.
            </summary>
            <param name="addTo">
            The add to.
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.OnPreRender(System.EventArgs)">
            <summary>
            The on pre render.
            </summary>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the document
            </summary>
            <param name="writer">
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.SetupHeaderElements">
            <summary>
            The setup header elements.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPage.ForumPage_Init(System.Object,System.EventArgs)">
            <summary>
            Called first to initialize the context
            </summary>
            <param name="sender">
            </param>
            <param name="e">
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.ForumPage_Load(System.Object,System.EventArgs)">
            <summary>
            Called when page is loaded
            </summary>
            <param name="sender">
            </param>
            <param name="e">
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.ForumPage_PreRender(System.Object,System.EventArgs)">
            <summary>
            The forum page_ pre render.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:YAF.Core.ForumPage.ForumPage_Unload(System.Object,System.EventArgs)">
            <summary>
            Called when the page is unloaded
            </summary>
            <param name="sender">
            </param>
            <param name="e">
            </param>
        </member>
        <member name="E:YAF.Core.ForumPage.ForumPageRendered">
            <summary>
              The forum page rendered.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.AllowAsPopup">
            <summary>
              Gets or sets a value indicating whether AllowAsPopup.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.CanLogin">
            <summary>
              Gets a value indicating whether CanLogin.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.DataCache">
            <summary>
              Gets or sets DataCache.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ForumFooter">
            <summary>
              Gets or sets ForumFooter.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ForumHeader">
            <summary>
              Gets or sets ForumHeader.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ForumTopControl">
            <summary>
              Gets or sets ForumTopControl.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ForumURL">
            <summary>
              Gets ForumURL.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.IsAdminPage">
            <summary>
              Gets or sets a value indicating whether Is Admin Page.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.IsHostAdminOnly">
            <summary>
              Gets a value indicating whether Is Host Admin Only.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.IsProtected">
            <summary>
              Gets or sets a value indicating whether Is Protected.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.IsRegisteredPage">
            <summary>
              Gets or sets a value indicating whether IsRegisteredPage.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.LoadMessage">
            <summary>
              Gets LoadMessage.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.Localization">
            <summary>
              Gets the Localization.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.Logger">
            <summary>
              Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.Notification">
            <summary>
              Gets or sets the Notification.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.PageCache">
            <summary>
              Gets cache associated with this page.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.PageContext">
            <summary>
              Gets the current forum Context (helper reference)
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.PageName">
            <summary>
              Gets PageName.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.RefreshTime">
            <summary>
              Gets or sets RefreshTime.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.RefreshURL">
            <summary>
              Gets or sets Adds a message that is displayed to the user when the page is loaded.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ServiceLocator">
            <summary>
              Gets ServiceLocator.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ShowFooter">
            <summary>
              Gets or sets a value indicating whether ShowFooter.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.ShowToolBar">
            <summary>
              Gets or sets a value indicating whether 
              if you don't want the menus at top and bottom. 
              Only admin pages will set this to false
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.TopPageControl">
            <summary>
              Gets TopPageControl.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.User">
            <summary>
              Gets the current user.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumPage.NoDataBase">
            <summary>
              Sets a value indicating whether  Set to <see langword = "true" /> if this is the start page. Should only be set by the page that initialized the database.
            </summary>
        </member>
        <member name="M:YAF.Core.AdminPage.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.AdminPage"/> class. 
              Creates the Administration page.
            </summary>
        </member>
        <member name="M:YAF.Core.AdminPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.AdminPage"/> class.
            </summary>
            <param name="transPage">
            The trans page.
            </param>
        </member>
        <member name="M:YAF.Core.AdminPage.AdminPage_Load(System.Object,System.EventArgs)">
            <summary>
            The admin page_ load.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="P:YAF.Core.AdminPage.PageName">
            <summary>
            Gets PageName.
            </summary>
        </member>
        <member name="T:YAF.Core.IPDetails">
            <summary>
            Summary description for IPLocater
            </summary>
        </member>
        <member name="M:YAF.Core.IPDetails.GetData(System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            IP Details From IP Address
            </summary>
            <param name="ip">
            The ip.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="culture">
            The culture.
            </param>
            <param name="browser">
            The browser.
            </param>
            <param name="os">
            The os.
            </param>
            <returns>
            IPLocator Class
            </returns>
        </member>
        <member name="T:YAF.Core.IpLocator">
            <summary>
            The ip locator.
            </summary>
        </member>
        <member name="F:YAF.Core.IpLocator.gmtoffset">
            <summary>
            The gmtoffset.
            </summary>
        </member>
        <member name="F:YAF.Core.IpLocator.isdst">
            <summary>
            The isdst.
            </summary>
        </member>
        <member name="F:YAF.Core.IpLocator.regioncode">
            <summary>
            The regioncode.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.StatusMessage">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.IP">
            <summary>
            Gets or sets IP.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.CountryCode">
            <summary>
            Gets or sets CountryCode.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.CountryName">
            <summary>
            Gets or sets CountryName.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.RegionName">
            <summary>
            Gets or sets RegionName.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.City">
            <summary>
            Gets or sets City.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.Zip">
            <summary>
            Gets or sets Zip.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.Latitude">
            <summary>
            Gets or sets Latitude.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.Longitude">
            <summary>
            Gets or sets Longitude.
            </summary>
        </member>
        <member name="P:YAF.Core.IpLocator.TimezoneName">
            <summary>
            Gets or sets TimezoneName.
            </summary>
        </member>
        <member name="T:YAF.Core.LoadPageLazyUserData">
            <summary>
            The load page lazy user data.
            </summary>
        </member>
        <member name="F:YAF.Core.LoadPageLazyUserData._dbBroker">
            <summary>
              The _db broker.
            </summary>
        </member>
        <member name="M:YAF.Core.LoadPageLazyUserData.#ctor(YAF.Types.Interfaces.IServiceLocator,YAF.Types.Interfaces.IDBBroker)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.LoadPageLazyUserData"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="dbBroker">
            The db broker.
            </param>
            <param name="dataCache">
            The data Cache.
            </param>
        </member>
        <member name="M:YAF.Core.LoadPageLazyUserData.Handle(YAF.Types.EventProxies.InitPageLoadEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.LoadPageLazyUserData.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageLazyUserData.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.NoValidGuestUserForBoardException">
            <summary>
            The no valid guest user for board exception.
            </summary>
        </member>
        <member name="M:YAF.Core.NoValidGuestUserForBoardException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.NoValidGuestUserForBoardException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="T:YAF.Core.Tasks.ICriticalBackgroundTask">
            <summary>
            Marker interface for a task that is very important and shouldn't be stopped
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafReadTrackCurrentUser">
            <summary>
            YAF Read Tracking Methods
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafReadTrackCurrentUser._boardSettings">
            <summary>
              The _board settings.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafReadTrackCurrentUser._sessionState">
            <summary>
            The _session state.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafReadTrackCurrentUser._yafSession">
            <summary>
              The _yaf session.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.#ctor(YAF.Types.Interfaces.IYafSession,YAF.Classes.YafBoardSettings,System.Web.HttpSessionStateBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafReadTrackCurrentUser"/> class. The yaf read track current user.
            </summary>
            <param name="yafSession">
            </param>
            <param name="boardSettings">
            </param>
            <param name="sessionState">
            The session State.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.GetForumRead(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            The get forum read.
            </summary>
            <param name="forumID">
            </param>
            <param name="readTimeOverride">
            The read Time Override. 
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.GetTopicRead(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            The get topic read.
            </summary>
            <param name="topicID">
            </param>
            <param name="readTimeOverride">
            The read Time Override. 
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.SetForumRead(System.Int32)">
            <summary>
            The set forum read.
            </summary>
            <param name="forumID">
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.SetTopicRead(System.Int32)">
            <summary>
            The set topic read.
            </summary>
            <param name="topicID">
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.GetSessionForumRead(System.Int32)">
            <summary>
            The get session forum read.
            </summary>
            <param name="forumId">
            The forum id. 
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafReadTrackCurrentUser.GetSessionTopicRead(System.Int32)">
            <summary>
            The get session topic read.
            </summary>
            <param name="topicId">
            The topic id. 
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Core.Services.YafReadTrackCurrentUser.LastRead">
            <summary>
              The last visit.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafReadTrackCurrentUser.CurrentUserID">
            <summary>
              The current user id.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafReadTrackCurrentUser.IsGuest">
            <summary>
              The is guest.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafDBBroker">
            <summary>
            Class used for multi-step DB operations so they can be cached, etc.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.#ctor(YAF.Types.Interfaces.IServiceLocator,System.Web.HttpSessionStateBase,YAF.Types.Interfaces.IDataCache)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafDBBroker"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="httpSessionState">
            The http session state.
            </param>
            <param name="dataCache">
            The data cache.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.ActiveUserLazyData(System.Int32)">
            <summary>
            The user lazy data.
            </summary>
            <param name="userId">
            The user ID.
            </param>
            <returns>
            Returns the Active User
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.AddThanksInfo(System.Collections.Generic.IEnumerable{System.Data.DataRow})">
            <summary>
            Adds the Thanks info to a dataTable
            </summary>
            <param name="dataRows">
            The data Rows.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.BoardLayout(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns the layout of the board
            </summary>
            <param name="boardID">
            The board ID.
            </param>
            <param name="userID">
            The user ID.
            </param>
            <param name="categoryID">
            The category ID.
            </param>
            <param name="parentID">
            The parent ID.
            </param>
            <returns>
            The board layout.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.FavoriteTopicList(System.Int32)">
            <summary>
            The favorite topic list.
            </summary>
            <param name="userID">
            The user ID.
            </param>
            <returns>
            Returns The favorite topic list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetActiveList(System.Boolean,System.Boolean)">
            <summary>
            The get active list.
            </summary>
            <param name="guests">
            The guests.
            </param>
            <param name="crawlers">
            The bots.
            </param>
            <returns>
            Returns the active list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetActiveList(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            The get active list.
            </summary>
            <param name="activeTime">
            The active time.
            </param>
            <param name="guests">
            The guests.
            </param>
            <param name="crawlers">
            The crawlers.
            </param>
            <returns>
            Returns the active list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetAllModerators">
            <summary>
            The get all moderators.
            </summary>
            <returns>
            Returns List with all moderators
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetCustomBBCode">
            <summary>
            The get custom bb code.
            </summary>
            <returns>
            Returns List with Custom BBCodes
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetLatestTopics(System.Int32)">
            <summary>
            The get latest topics.
            </summary>
            <param name="numberOfPosts">
            The number of posts.
            </param>
            <returns>
            Returns List with Latest Topics.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetLatestTopics(System.Int32,System.Int32)">
            <summary>
            The get latest topics by User.
            </summary>
            <param name="numberOfPosts">
            The number of posts.
            </param>
            <param name="userId">
            The user id.
            </param>
            <returns>
             Returns List with Latest Topics.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetLatestTopics(System.Int32,System.Int32,System.String[])">
            <summary>
            The get latest topics.
            </summary>
            <param name="numberOfPosts">
            The number of posts.
            </param>
            <param name="userId">
            The user id.
            </param>
            <param name="styleColumnNames">
            The style Column Names.
            </param>
            <returns>
            Returns List with Latest Topics.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetModerators">
            <summary>
            Get all moderators by Groups and User
            </summary>
            <returns>
            Returns the Moderator List
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetRecentUsers(System.Int32)">
            <summary>
            Get the list of recently logged in users.
            </summary>
            <param name="timeSinceLastLogin">
            The time since last login in minutes.
            </param>
            <returns>
            The list of users in Datatable format.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetShoutBoxMessages(System.Int32)">
            <summary>
            The get shout box messages.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <returns>
            Retuns the shout box messages.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetSimpleForumTopic(System.Int32,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Get a simple forum/topic listing.
            </summary>
            <param name="boardId">
            The board Id.
            </param>
            <param name="userId">
            The user Id.
            </param>
            <param name="timeFrame">
            The time Frame.
            </param>
            <param name="maxCount">
            The max Count.
            </param>
            <returns>
            The get simple forum topic.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.GetSmilies">
            <summary>
            The get smilies.
            </summary>
            <returns>
            Table with list of smiles
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.LoadMessageText(System.Collections.Generic.IEnumerable{System.Data.DataRow})">
            <summary>
            Loads the message text into the paged data if "Message" and "MessageID" exists.
            </summary>
            <param name="dataRows">
            The data Rows.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.StyleTransformDataTable(System.Data.DataTable)">
            <summary>
            The style transform func wrap.
            </summary>
            <param name="dt">
            The DateTable
            </param>
            <returns>
            The style transform wrap.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.StyleTransformDataTable(System.Data.DataTable,System.String[])">
            <summary>
            The style transform func wrap.
            </summary>
            <param name="dt">
            The DateTable
            </param>
            <param name="styleColumns">
            Style columns names
            </param>
            <returns>
            The style transform wrap.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.UserBuddyList(System.Int32)">
            <summary>
            The Buddy list for the user with the specified UserID.
            </summary>
            <param name="userID">
            The User ID.
            </param>
            <returns>
            The user buddy list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.UserIgnoredList(System.Int32)">
            <summary>
            The user ignored list.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <returns>
            Returns the user ignored list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.UserMedals(System.Int32)">
            <summary>
            The user medals.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <returns>
            Returns the User Medals
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDBBroker.LoadSimpleTopic(System.Data.DataRow,YAF.Types.Objects.SimpleForum)">
            <summary>
            The load simple topic.
            </summary>
            Creates a Simple Topic item.
            <param name="row">
            The row.
            </param>
            <param name="forum">
            The forum.
            </param>
            <returns>
            Returns the simple topic.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.YafDBBroker.DataCache">
            <summary>
              Gets or sets DataCache.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafDBBroker.HttpSessionState">
            <summary>
              Gets or sets HttpSessionState.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafDBBroker.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafBadWordReplace">
            <summary>
            The yaf bad word replace.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafBadWordReplace._options">
            <summary>
              The _options.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafBadWordReplace.#ctor(YAF.Types.Interfaces.IObjectStore,YAF.Types.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafBadWordReplace"/> class.
            </summary>
            <param name="objectStore">
            The object Store.
            </param>
            <param name="logger">
            The logger.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafBadWordReplace.Replace(System.String)">
            <summary>
            Searches through SearchText and replaces "bad words" with "good words"
            as defined in the database.
            </summary>
            <param name="searchText">
            The string to search through.
            </param>
            <returns>
            The replace.
            </returns>
            <exception cref="T:System.Exception">
            <c>Exception</c>.
            </exception>
        </member>
        <member name="P:YAF.Core.Services.YafBadWordReplace.Logger">
            <summary>
            Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafBadWordReplace.ObjectStore">
            <summary>
            Gets or sets ObjectStore.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafBadWordReplace.ReplaceItems">
            <summary>
              Gets ReplaceItems.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.HttpClient">
            <summary>
            Class used to make the actual HTTP requests.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.HttpClient.GetRequest(System.Uri,System.String,System.Int32,System.Net.IWebProxy)">
            <summary>
            Gets the content of a web page.
            </summary>
            <param name="url">
            The URL.
            </param>
            <param name="userAgent">
            The user agent.
            </param>
            <param name="timeout">
            The timeout in miliseconds.
            </param>
            <param name="proxy">
            The proxy.
            </param>
            <returns>
            The string value of requested web page.
            </returns>
            <exception cref="T:YAF.Core.Services.InvalidResponseException"><c>InvalidResponseException</c>.</exception>
        </member>
        <member name="M:YAF.Core.Services.HttpClient.PostRequest(System.Uri,System.String,System.Int32,System.String)">
            <summary>
            Posts the request and returns a text response.  
              This is all that is needed for Akismet.
            </summary>
            <param name="url">
            The URL.
            </param>
            <param name="userAgent">
            The user agent.
            </param>
            <param name="timeout">
            The timeout.
            </param>
            <param name="formParameters">
            The properly formatted parameters.
            </param>
            <returns>
            The post request.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.HttpClient.PostRequest(System.Uri,System.String,System.Int32,System.String,System.Net.IWebProxy)">
            <summary>
            Posts the request.
            </summary>
            <param name="url">
            The URL.
            </param>
            <param name="userAgent">
            The user agent.
            </param>
            <param name="timeout">
            The timeout in milliseconds.
            </param>
            <param name="formParameters">
            The form parameters.
            </param>
            <param name="proxy">
            The proxy.
            </param>
            <returns>
            The post request.
            </returns>
            <exception cref="T:YAF.Core.Services.InvalidResponseException"><c>InvalidResponseException</c>.</exception>
        </member>
        <member name="T:YAF.Core.YafLocalization">
            <summary>
            The yaf localization.
            </summary>
        </member>
        <member name="F:YAF.Core.YafLocalization._culture">
            <summary>
              The _culture.
            </summary>
        </member>
        <member name="F:YAF.Core.YafLocalization._defaultLocale">
            <summary>
              The _default locale.
            </summary>
        </member>
        <member name="F:YAF.Core.YafLocalization._languageFileName">
            <summary>
              The _language file name.
            </summary>
        </member>
        <member name="F:YAF.Core.YafLocalization._localizer">
            <summary>
              The _localizer.
            </summary>
        </member>
        <member name="M:YAF.Core.YafLocalization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafLocalization"/> class. 
              Initializes a new instance of the <see cref="N:YAF.Core"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.YafLocalization.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafLocalization"/> class. 
            Initializes a new instance of the <see cref="N:YAF.Core"/> class.
            </summary>
            <param name="transPage">
            The trans page.
            </param>
        </member>
        <member name="M:YAF.Core.YafLocalization.FormatDateTime(System.String,System.DateTime)">
            <summary>
            Formats date using given formatting string and current culture.
            </summary>
            <param name="format">
            Format string.
            </param>
            <param name="date">
            Date to format.
            </param>
            <returns>
            Formatted string.
            </returns>
            <remarks>
            If current localization culture is neutral, it's not used in formatting.
            </remarks>
        </member>
        <member name="M:YAF.Core.YafLocalization.FormatString(System.String,System.Object[])">
            <summary>
            Formats string using current culture.
            </summary>
            <param name="format">
            Format string.
            </param>
            <param name="args">
            Parameters used in format string.
            </param>
            <returns>
            Formatted string.
            </returns>
            <remarks>
            If current localization culture is neutral, it's not used in formatting.
            </remarks>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetNodesUsingQuery(System.String,System.Func{YAF.Types.LanuageResourcesPageResource,System.Boolean})">
            <summary>
            The get nodes using query.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="predicate">
            The predicate.
            </param>
            <returns>
            The Nodes
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetCountryNodesUsingQuery(System.String,System.Func{YAF.Types.LanuageResourcesPageResource,System.Boolean})">
            <summary>
            The get nodes using query.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="predicate">
            The predicate.
            </param>
            <returns>
            The Nodes
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetRegionNodesUsingQuery(System.String,System.Func{YAF.Types.LanuageResourcesPageResource,System.Boolean})">
            <summary>
            The get nodes using query.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="predicate">
            The predicate.
            </param>
            <returns>
            The Nodes
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetText(System.String)">
            <summary>
            The get text.
            </summary>
            <param name="text">
            The text.
            </param>
            <returns>
            The get text.
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetText(System.String,System.String)">
            <summary>
            The get text.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The get text.
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetText(System.String,System.String,System.String)">
            <summary>
            The get text, with a Specific Language.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="tag">
            The tag.
            </param>
            <param name="languageFile">
            The Language file
            </param>
            <returns>
            The get text.
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetTextExists(System.String,System.String)">
            <summary>
            The get text exists.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            Returns value if text exists.
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetTextFormatted(System.String,System.Object[])">
            <summary>
            Formats a localized string -- but verifies the parameter count matches
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="args">
            The args.
            </param>
            <returns>
            Returns the Formatted Text
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.LoadTranslation(System.String)">
            <summary>
            The load translation.
            </summary>
            <param name="fileName">
            The file name.
            </param>
            <returns>
            Returns the translation Culture Info.
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.LoadTranslation">
            <summary>
            The load translation.
            </summary>
            <returns>
            The load translation.
            </returns>
        </member>
        <member name="M:YAF.Core.YafLocalization.GetLocalizedTextInternal(System.String,System.String)">
            <summary>
            The get localized text internal.
            </summary>
            <param name="page">
            The page.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            Returns the localized text internal.
            </returns>
        </member>
        <member name="P:YAF.Core.YafLocalization.Culture">
            <summary>
              Gets Culture.
            </summary>
        </member>
        <member name="P:YAF.Core.YafLocalization.LanguageCode">
            <summary>
              Gets LanguageCode.
            </summary>
        </member>
        <member name="P:YAF.Core.YafLocalization.LanguageFileName">
            <summary>
              Gets LanguageFileName.
            </summary>
        </member>
        <member name="P:YAF.Core.YafLocalization.TransPage">
            <summary>
              Gets or sets What section of the xml is used to translate this page
            </summary>
        </member>
        <member name="P:YAF.Core.YafLocalization.TranslationLoaded">
            <summary>
              Gets a value indicating whether TranslationLoaded.
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.FontSizeRegexReplaceRule">
            <summary>
            For the font size with replace
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule">
            <summary>
            For complex regex with variable/default and truncate support
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule">
            <summary>
            For basic regex with no variables
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.BaseReplaceRule">
            <summary>
            Base class for all replacement rules.
              Provides compare functionality based on the rule rank.
              Override replace to handle replacement differently.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.BaseReplaceRule.RuleRank">
            <summary>
              The rule rank.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.BaseReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.BaseReplaceRule.CompareTo(System.Object)">
            <summary>
            The compare to.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The compare to.
            </returns>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="P:YAF.Core.BBCode.ReplaceRules.BaseReplaceRule.RuleDescription">
            <summary>
              Gets RuleDescription.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule._regExReplace">
            <summary>
              The _reg ex replace.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule._regExSearch">
            <summary>
              The _reg ex search.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule.#ctor(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule.GetInnerValue(System.String)">
            <summary>
            The get inner value.
            </summary>
            <param name="innerValue">
            The inner value.
            </param>
            <returns>
            The get inner value.
            </returns>
        </member>
        <member name="P:YAF.Core.BBCode.ReplaceRules.SimpleRegexReplaceRule.RuleDescription">
            <summary>
              Gets RuleDescription.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule._truncateLength">
            <summary>
              The _truncate length.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule._variableDefaults">
            <summary>
              The _variable defaults.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule._variables">
            <summary>
              The _variables.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.#ctor(System.Text.RegularExpressions.Regex,System.String,System.String[],System.String[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="variables">
            The variables.
            </param>
            <param name="varDefaults">
            The var defaults.
            </param>
            <param name="truncateLength">
            The truncate length.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.#ctor(System.Text.RegularExpressions.Regex,System.String,System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="variables">
            The variables.
            </param>
            <param name="varDefaults">
            The var defaults.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.#ctor(System.Text.RegularExpressions.Regex,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="variables">
            The variables.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String[],System.String[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
            <param name="variables">
            The variables.
            </param>
            <param name="varDefaults">
            The var defaults.
            </param>
            <param name="truncateLength">
            The truncate length.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
            <param name="variables">
            The variables.
            </param>
            <param name="varDefaults">
            The var defaults.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
            <param name="variables">
            The variables.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.VariableRegexReplaceRule.ManageVariableValue(System.String,System.String,System.String)">
            <summary>
            Override to change default variable handling...
            </summary>
            <param name="variableName">
            </param>
            <param name="variableValue">
            </param>
            <param name="handlingValue">
            variable transfermation desired
            </param>
            <returns>
            The manage variable value.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.FontSizeRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.FontSizeRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.FontSizeRegexReplaceRule.ManageVariableValue(System.String,System.String,System.String)">
            <summary>
            The manage variable value.
            </summary>
            <param name="variableName">
            The variable name.
            </param>
            <param name="variableValue">
            The variable value.
            </param>
            <param name="handlingValue">
            The handling value.
            </param>
            <returns>
            The manage variable value.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.FontSizeRegexReplaceRule.GetFontSize(System.String)">
            <summary>
            The get font size.
            </summary>
            <param name="inputStr">
            The input str.
            </param>
            <returns>
            The get font size.
            </returns>
        </member>
        <member name="T:YAF.Core.BaseControl">
            <summary>
            Summary description for BaseControl.
            </summary>
        </member>
        <member name="F:YAF.Core.BaseControl._localization">
            <summary>
              The _localization.
            </summary>
        </member>
        <member name="F:YAF.Core.BaseControl._logger">
            <summary>
            The _logger.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseControl.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.BaseControl"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseControl.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaiseInit">
            <summary>
            The raise init.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseControl.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaiseLoad">
            <summary>
            The raise load.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseControl.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaisePreRender">
            <summary>
            The raise pre render.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseControl.Localization">
            <summary>
              Gets Localization.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseControl.Logger">
            <summary>
              Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseControl.PageContext">
            <summary>
              Gets PageContext.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseControl.ServiceLocator">
            <summary>
              Gets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafSendMailThreaded">
            <summary>
            Separate class since SendThreaded isn't needed functionality for any instance except the <see cref="!:HttpModule"/> instance.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafSendMailThreaded._uniqueId">
            <summary>
              The _unique id.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSendMailThreaded.#ctor(YAF.Types.Interfaces.ISendMail,YAF.Types.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafSendMailThreaded"/> class.
            </summary>
            <param name="sendMail">
            The send mail. 
            </param>
            <param name="logger">
            The logger.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendMailThreaded.SendThreaded">
            <summary>
            The send threaded.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSendMailThreaded.ConstructMessageList(System.Collections.Generic.IDictionary{System.Net.Mail.MailMessage,YAF.Types.Objects.TypedMailList},System.Collections.Generic.IEnumerable{YAF.Types.Objects.TypedMailList})">
            <summary>
            The construct message list.
            </summary>
            <param name="mailMessages">
            The mail messages.
            </param>
            <param name="mailList">
            The mail list.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendMailThreaded.GetMailListSafe">
            <summary>
            The get mail list safe.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Core.Services.YafSendMailThreaded.Logger">
            <summary>
            Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSendMailThreaded.SendMail">
            <summary>
              Gets or sets SendMail.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafDigest">
            <summary>
            The yaf digest.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafDigest.#ctor(YAF.Types.Interfaces.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafDigest"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafDigest.GetDigestHtml(System.Int32,System.Int32,System.Boolean)">
            <summary>
            The get digest html.
            </summary>
            <param name="userId">The user id.</param>
            <param name="boardId">The board id.</param>
            <param name="showErrors">if set to <c>true</c> [show errors].</param>
            <returns>
            The get digest html.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDigest.GetDigestUrl(System.Int32,System.Int32)">
            <summary>
            The get digest url.
            </summary>
            <param name="userId">The user id.</param>
            <param name="boardId">The board id.</param>
            <returns>
            The get digest url.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDigest.GetDigestUrl(System.Int32,System.Int32,System.Boolean)">
            <summary>
            The get digest url.
            </summary>
            <param name="userId">The user id.</param>
            <param name="boardId">The board id.</param>
            <param name="showErrors">Show errors creating the digest.</param>
            <returns>
            The get digest url.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafDigest.SendDigest(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sends the digest html to the email/name specified.
            </summary>
            <param name="digestHtml">
            The digest html.
            </param>
            <param name="forumName">
            The forum name.
            </param>
            <param name="toEmail">
            The to email.
            </param>
            <param name="toName">
            The to name.
            </param>
            <param name="sendQueued">
            The send queued.
            </param>
        </member>
        <member name="P:YAF.Core.Services.YafDigest.ServiceLocator">
            <summary>
            Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.JavaScriptBuilder">
            <summary>
            The java script builder.
            </summary>
        </member>
        <member name="F:YAF.Core.JavaScriptBuilder._statements">
            <summary>
            The _statements.
            </summary>
        </member>
        <member name="M:YAF.Core.JavaScriptBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The build.
            </returns>
        </member>
        <member name="P:YAF.Core.JavaScriptBuilder.ScriptSelector">
            <summary>
              Gets the ScriptSelector.
            </summary>
        </member>
        <member name="P:YAF.Core.JavaScriptBuilder.Statements">
            <summary>
            Gets Statements.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.Attachment">
            <summary>
            The attachment.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Attachment.binaryData">
            <summary>
            The binary data.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Attachment.filename">
            <summary>
            The filename.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Attachment.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.Attachment.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.Attachment"/> class.
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="filename">
            The filename.
            </param>
            <param name="binaryData">
            The binary data.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.Attachment.SaveAs(System.String)">
            <summary>
            The save as.
            </summary>
            <param name="path">
            The path.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.Attachment.SaveAs(System.String,System.Boolean)">
            <summary>
            The save as.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="isOverwrite">
            The is overwrite.
            </param>
        </member>
        <member name="P:YAF.Core.Nntp.Attachment.Id">
            <summary>
            Gets Id.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Attachment.Filename">
            <summary>
            Gets Filename.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Attachment.BinaryData">
            <summary>
            Gets BinaryData.
            </summary>
        </member>
        <member name="T:YAF.Core.CurrentProfileProvider">
            <summary>
            The current profile provider.
            </summary>
        </member>
        <member name="P:YAF.Core.CurrentProfileProvider.Instance">
            <summary>
              The instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.BinaryExtensions.BinaryAnd(System.Int32,System.Int32)">
            <summary>
            The binary and.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="checkAgainst">
            The check against.
            </param>
            <returns>
            The binary and.
            </returns>
        </member>
        <member name="M:YAF.Core.BinaryExtensions.BinaryAnd(System.Object,System.Object)">
            <summary>
            The binary and.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="checkAgainst">
            The check against.
            </param>
            <returns>
            The binary and.
            </returns>
        </member>
        <member name="T:YAF.Core.Services.PageElementRegister">
            <summary>
            Helper Class providing functions to register page elements.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.PageElementRegister._registeredElements">
            <summary>
              The _registered elements.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.AddPageElement(System.String)">
            <summary>
            Adds a page element to the collection.
            </summary>
            <param name="name">
            Unique name of the page element to register.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.PageElementExists(System.String)">
            <summary>
            Validates if an page element exists.
            </summary>
            <param name="name">
            Unique name of the page element to test for
            </param>
            <returns>
            <see langword="true"/> if it exists
            </returns>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterCssBlock(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Adds the given CSS to the page header within a <![CDATA[<style>]]> tag
            </summary>
            <param name="element">
            Control to add element
            </param>
            <param name="name">
            Name of this element so it is not added more then once (not case sensitive)
            </param>
            <param name="cssContents">
            The contents of the text/css style block
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterCssBlock(System.String,System.String)">
            <summary>
            Register a CSS block in the page header.
            </summary>
            <param name="name">
            Unique name of the CSS block
            </param>
            <param name="cssContents">
            CSS contents
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterCssInclude(System.String)">
            <summary>
            Add the given CSS to the page header within a style tag
            </summary>
            <param name="cssUrl">
            Url of the CSS file to add
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterCssInclude(System.Web.UI.Control,System.String)">
            <summary>
            Adds the given CSS to the page header within a <![CDATA[<style>]]> tag
            </summary>
            <param name="element">
            Control to add element
            </param>
            <param name="cssUrl">
            Url of the CSS file to add
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterCssIncludeResource(System.String)">
            <summary>
            Add the given CSS to the page header within a style tag
            </summary>
            <param name="cssUrlResource">
            Url of the CSS Resource file to add
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJQuery">
            <summary>
            The register j query.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJQuery(System.Web.UI.Control)">
            <summary>
            Register jQuery
            </summary>
            <param name="element">
            The element.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJQueryUI">
            <summary>
            The register jquery ui.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJQueryUI(System.Web.UI.Control)">
            <summary>
            Register the JQuery UI library in the header.
            </summary>
            <param name="element">
            Control element to put in
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsBlock(System.String,System.String)">
            <summary>
            Registers a Javascript block using the script manager. Adds script tags.
            </summary>
            <param name="name">
            Unique name of JS Block
            </param>
            <param name="script">
            Script code to register
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsBlock(System.String,YAF.Types.Interfaces.IScriptStatementContext)">
            <summary>
            Registers a Javascript block using the script manager. Adds script tags.
            </summary>
            <param name="name">
            Unique name of JS Block
            </param>
            <param name="scriptStatement">
            Script code to register
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsBlock(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Registers a Javascript block using the script manager. Adds script tags.
            </summary>
            <param name="thisControl">
            The this Control.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="script">
            The script.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsBlockStartup(System.String,System.String)">
            <summary>
            Registers a Javascript block using the script manager. Adds script tags.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="script">
            The script.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsBlockStartup(System.String,YAF.Types.Interfaces.IScriptStatementContext)">
            <summary>
            Registers a Javascript block using the script manager. Adds script tags.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="scriptStatement">
            The script Statement.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsBlockStartup(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Registers a Javascript block using the script manager. Adds script tags.
            </summary>
            <param name="thisControl">
            The this Control.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="script">
            The script.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsInclude(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Registers a Javascript include using the script manager.
            </summary>
            <param name="thisControl">
            The this Control.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="url">
            The url.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsInclude(System.String,System.String)">
            <summary>
            Registers a Javascript include using the script manager.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="url">
            The url.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsResourceInclude(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Registers a Javascript resource include using the script manager.
            </summary>
            <param name="thisControl">
            The this Control.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="relativeResourceUrl">
            The relative Resource Url.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageElementRegister.RegisterJsResourceInclude(System.String,System.String)">
            <summary>
            Registers a Javascript resource include using the script manager.
            </summary>
            <param name="name">
            Unique name of the JS include
            </param>
            <param name="relativeResourceUrl">
            URL to the JS resource
            </param>
        </member>
        <member name="P:YAF.Core.Services.PageElementRegister.RegisteredElements">
            <summary>
              Gets elements (using in the head or header) that are registered on the page.
              Used mostly by RegisterPageElementHelper.
            </summary>
        </member>
        <member name="T:YAF.Core.IModuleManagerExtensions">
            <summary>
            The i module manager extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IModuleManagerExtensions.ActiveAsDataTable``1(YAF.Types.Interfaces.IModuleManager{``0},System.String)">
            <summary>
            The get editors table.
            </summary>
            <typeparam name="TModule">
            </typeparam>
            <param name="moduleManager">
            The module Manager.
            </param>
            <param name="tableName">
            The table Name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.IModuleManagerExtensions.ActiveAsDictionary``1(YAF.Types.Interfaces.IModuleManager{``0})">
            <summary>
            Get a dictionary list discribing the active modules.
            </summary>
            <typeparam name="TModule">
            </typeparam>
            <param name="moduleManager">
            The module Manager.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.IModuleManagerExtensions.GetAll``1(YAF.Types.Interfaces.IModuleManager{``0})">
            <summary>
            Get all active modules.
            </summary>
            <typeparam name="TModule">
            </typeparam>
            <param name="moduleManager">
            The module Manager.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.ControlExtensions">
            <summary>
            The control extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ControlExtensions.GetExtendedID(System.Web.UI.Control,System.String)">
            <summary>
            Creates a ID Based on the Control Structure
            </summary>
            <param name="currentControl">
            The current Control.
            </param>
            <param name="prefix">
            </param>
            <returns>
            The get extended id.
            </returns>
        </member>
        <member name="M:YAF.Core.ControlExtensions.GetUniqueID(System.Web.UI.Control,System.String)">
            <summary>
            Creates a Unique ID
            </summary>
            <param name="currentControl">
            The current Control.
            </param>
            <param name="prefix">
            </param>
            <returns>
            The get unique id.
            </returns>
        </member>
        <member name="M:YAF.Core.ControlExtensions.HtmlEncode(System.Web.UI.Control,System.Object)">
            <summary>
            The html encode.
            </summary>
            <param name="currentControl">
            The current Control.
            </param>
            <param name="data">
            The data.
            </param>
            <returns>
            The html encode.
            </returns>
        </member>
        <member name="M:YAF.Core.ControlExtensions.PageContext(System.Web.UI.Control)">
            <summary>
            Gets PageContext.
            </summary>
            <param name="currentControl">
            The current Control.
            </param>
        </member>
        <member name="T:YAF.Core.BasePanel">
            <summary>
            Control derived from Panel that includes a reference to the <see cref="T:YAF.Core.YafContext"/>.
            </summary>
        </member>
        <member name="F:YAF.Core.BasePanel._localization">
            <summary>
              The _localization.
            </summary>
        </member>
        <member name="F:YAF.Core.BasePanel._logger">
            <summary>
            The _logger.
            </summary>
        </member>
        <member name="M:YAF.Core.BasePanel.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.BasePanel"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.BasePanel.GetExtendedID(System.String)">
            <summary>
            Creates a ID Based on the Control Structure
            </summary>
            <param name="prefix">
            </param>
            <returns>
            The get extended id.
            </returns>
        </member>
        <member name="M:YAF.Core.BasePanel.GetUniqueID(System.String)">
            <summary>
            Creates a Unique ID
            </summary>
            <param name="prefix">
            </param>
            <returns>
            The get unique id.
            </returns>
        </member>
        <member name="P:YAF.Core.BasePanel.Localization">
            <summary>
              Gets Localization.
            </summary>
        </member>
        <member name="P:YAF.Core.BasePanel.Logger">
            <summary>
              Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.BasePanel.PageContext">
            <summary>
              Gets PageContext.
            </summary>
        </member>
        <member name="P:YAF.Core.BasePanel.ServiceLocator">
            <summary>
              Gets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.PageRequestLoadServices">
            <summary>
            The page request load services.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.PageRequestLoadServices.#ctor(YAF.Types.Interfaces.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.PageRequestLoadServices"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageRequestLoadServices.Handle(YAF.Types.EventProxies.EventPreRequestPageExecute)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="M:YAF.Core.Services.PageRequestLoadServices.RequestedPage_PreInit(System.Object,System.EventArgs)">
            <summary>
            The requested page_ pre init.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:YAF.Core.Services.PageRequestLoadServices.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.PageRequestLoadServices.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.PageRequestLoadServices.RequestPage">
            <summary>
            Gets or sets RequestPage.
            </summary>
        </member>
        <member name="T:YAF.Core.ScriptStatementContextExtensions">
            <summary>
            the script statement extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.Add(YAF.Types.Interfaces.IScriptStatementContext,System.String)">
            <summary>
            Adds a script string without a closeing;
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="js">
            The js.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.Add(YAF.Types.Interfaces.IScriptStatementContext,YAF.Types.Interfaces.IScriptStatement)">
            <summary>
            The add a script statement without a closing;
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="addStatement">
            The add builder.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddArray(YAF.Types.Interfaces.IScriptStatementContext,System.String,System.Object[])">
            <summary>
            Adds an array to the output: var arrayName = Array(parameters);
            </summary>
            <param name="scriptStatement">
            The script statement.
            </param>
            <param name="arrayName">
            The array name.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddCall(YAF.Types.Interfaces.IScriptStatementContext,System.String,System.Object[])">
            <summary>
            Adds a call. E.g. functionName(parameters) to the statement.
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="functionName">
            The function Name.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddDocumentReady(YAF.Types.Interfaces.IScriptStatementContext,System.Action{YAF.Types.Interfaces.IScriptFunctionContext})">
            <summary>
            Add a document.ready event to the statement.
            </summary>
            <param name="scriptStatement">
            The script Builder.
            </param>
            <param name="buildInner">
            The build Inner.
            </param>
            <returns>
            The jquery document ready script.
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddFormat(YAF.Types.Interfaces.IScriptStatementContext,System.String,System.Object[])">
            <summary>
            Adds a formatted string to the statement.
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="js">
            The js.
            </param>
            <param name="args">
            The args.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddFunc(YAF.Types.Interfaces.IScriptStatementContext,System.Action{YAF.Types.Interfaces.IScriptFunctionContext})">
            <summary>
            Adds a function (using the IScriptFunctionContext) to the statement.
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="buildFunction">
            The build function.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddFunc(YAF.Types.Interfaces.IScriptStatementContext,System.String)">
            <summary>
            Adds a simple annonymous function to the statement.
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="jsInner">
            The js inner.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddIf(YAF.Types.Interfaces.IScriptStatementContext,System.String,System.Action{YAF.Types.Interfaces.IScriptStatementContext})">
            <summary>
            The add a script statement if.
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="condition">
            The condition.
            </param>
            <param name="doInner">
            The do Inner.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddLine(YAF.Types.Interfaces.IScriptStatementContext)">
            <summary>
            Adds a line.
            </summary>
            <param name="scriptStatement">
            The script statement.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddSelector(YAF.Types.Interfaces.IScriptStatementContext,System.String)">
            <summary>
            Adds a jQuery selector to the builder statement. E.g.: jQuery('selector')
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="selector">
            The selector.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddSelectorFormat(YAF.Types.Interfaces.IScriptStatementContext,System.String,System.Object[])">
            <summary>
            Adds a jQuery selector to the builder statement. E.g.: jQuery('selector') with formatting
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="selector">
            The selector.
            </param>
            <param name="args">
            The args.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddString(YAF.Types.Interfaces.IScriptStatementContext,System.String)">
            <summary>
            Adds a quoted escaped string to the statement: e.g. "jsString"
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="jsString">
            The js String.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddWithEnd(YAF.Types.Interfaces.IScriptStatementContext,System.String)">
            <summary>
            The add a script statement without a closing ;
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <param name="js">
            The Javascript to Add
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.Build(YAF.Types.Interfaces.IScriptStatementContext)">
            <summary>
            Builds the Statement from the context and returns the built string.
            </summary>
            <param name="scriptStatementContext">
            The script statement context.
            </param>
            <returns>
            The build.
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.Dot(YAF.Types.Interfaces.IScriptStatementContext)">
            <summary>
            Adds a dot.
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.End(YAF.Types.Interfaces.IScriptStatementContext)">
            <summary>
            The add an end to the statement. E.g. ;
            </summary>
            <param name="scriptStatement">
            the script statement.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptStatementContextExtensions.AddParameters(YAF.Types.Interfaces.IScriptStatementContext,System.Boolean,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Add parameters to the script statement.
            </summary>
            <param name="scriptStatement">
            The script statement.
            </param>
            <param name="allowStatement">
            The allow statement.
            </param>
            <param name="parameters">
            The parameters.
            </param>
        </member>
        <member name="T:YAF.Core.Services.CheckForSpam.Stats">
            <summary>
            The stats.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.Stats.ok">
            <summary>
            Gets or sets ok.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.Stats.spam">
            <summary>
            Gets or sets spam.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.IComment">
            <summary>
            Defines the base information about a comment submitted to the client.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.Author">
            <summary>
              The name submitted with the comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.AuthorEmail">
            <summary>
              The email submitted with the comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.AuthorUrl">
            <summary>
              The url submitted if provided.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.CommentType">
            <summary>
              May be one of the following: {blank}, "comment", "trackback", "pingback", or a made-up value 
              like "registration".
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.Content">
            <summary>
              Content of the comment
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.IPAddress">
            <summary>
              IPAddress of the submitter
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.Permalink">
            <summary>
              Permanent location of the entry the comment was 
              submitted to.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.Referrer">
            <summary>
              The HTTP_REFERRER header value of the 
              originating comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.ServerEnvironmentVariables">
            <summary>
              Optional collection of various server environment variables.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.IComment.UserAgent">
            <summary>
              User agent of the requester. (Required)
            </summary>
        </member>
        <member name="T:YAF.Core.Services.CheckForSpam.BlogSpamComment">
            <summary>
            The Blog Spam Comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.agent">
            <summary>
            Gets or sets agent.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.comment">
            <summary>
            Gets or sets comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.email">
            <summary>
            Gets or sets email.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.ip">
            <summary>
            Gets or sets ip.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.link">
            <summary>
            Gets or sets link.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.name">
            <summary>
            Gets or sets name.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.options">
            <summary>
            Gets or sets options.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.site">
            <summary>
            Gets or sets site.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.subject">
            <summary>
            Gets or sets subject.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamComment.version">
            <summary>
            Gets or sets version.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.BaseStartupService">
            <summary>
            The root service.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.BaseStartupService.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.BaseStartupService.RunService">
            <summary>
            The run service.
            </summary>
            <returns>
            The run service.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.BaseStartupService.Initialized">
            <summary>
              Gets a value indicating whether Initialized.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.BaseStartupService.Priority">
            <summary>
              Gets Priority.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.BaseStartupService.InitVarName">
            <summary>
              Gets InitVarName.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.NntpUtil">
            <summary>
            The nntp util.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpUtil.base64PemCode">
            <summary>
              The base 64 pem code.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpUtil.base64PemConvertCode">
            <summary>
              The base 64 pem convert code.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpUtil.hexValue">
            <summary>
              The hex value.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.#cctor">
            <summary>
              Initializes static members of the <see cref="T:YAF.Core.Nntp.NntpUtil"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.Base64Decode(System.String,System.Text.Encoding)">
            <summary>
            The base 64 decode.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="outputStream">
            The output stream.
            </param>
            <returns>
            The base 64 decode.
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.Base64HeaderDecode(System.String)">
            <summary>
            The base 64 header decode.
            </summary>
            <param name="line">
            The line.
            </param>
            <returns>
            The base 64 header decode.
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.ConvertListToTree(System.Collections.ArrayList)">
            <summary>
            The convert list to tree.
            </summary>
            <param name="list">
            The list.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.DecodeUTC(System.String,System.Int32@)">
            <summary>
            Date from an Article Header converted to UTC
            </summary>
            <param name="nntpDateTime">
            </param>
            <param name="tzi">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.DispatchMIMEContent(System.IO.StreamReader,YAF.Core.Nntp.MIMEPart,System.String)">
            <summary>
            The dispatch mime content.
            </summary>
            <param name="sr">
            The sr.
            </param>
            <param name="part">
            The part.
            </param>
            <param name="seperator">
            The seperator.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.QuotedPrintableDecode(System.String,System.IO.Stream)">
            <summary>
            The quoted printable decode.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="outputStream">
            The output stream.
            </param>
            <returns>
            The quoted printable decode.
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.QuotedPrintableDecode(System.Char[],System.IO.Stream)">
            <summary>
            The quoted printable decode.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="outputStream">
            The output stream.
            </param>
            <returns>
            The quoted printable decode.
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.UUDecode(System.String,System.IO.Stream)">
            <summary>
            The uu decode.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="outputStream">
            The output stream.
            </param>
            <returns>
            The uu decode.
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpUtil.UUDecode(System.Char[],System.IO.Stream)">
            <summary>
            The uu decode.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="outputStream">
            The output stream.
            </param>
            <returns>
            The uu decode.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="T:YAF.Core.Nntp.NntpConnection">
            <summary>
            The nntp connection.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.connectedGroup">
            <summary>
            The connected group.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.connectedServer">
            <summary>
            The connected server.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.password">
            <summary>
            The password.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.port">
            <summary>
            The port.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.sr">
            <summary>
            The sr.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.sw">
            <summary>
            The sw.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.tcpClient">
            <summary>
            The tcp client.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.username">
            <summary>
            The username.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.Reset">
            <summary>
            The reset.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.MakeRequest(System.String)">
            <summary>
            The make request.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetHeader(System.String,YAF.Core.Nntp.MIMEPart@)">
            <summary>
            The get header.
            </summary>
            <param name="messageId">
            The message id.
            </param>
            <param name="part">
            The part.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetNormalBody(System.String)">
            <summary>
            The get normal body.
            </summary>
            <param name="messageId">
            The message id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetMIMEBody(System.String,YAF.Core.Nntp.MIMEPart)">
            <summary>
            The get mime body.
            </summary>
            <param name="messageId">
            The message id.
            </param>
            <param name="part">
            The part.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.ConvertMIMEContent(System.String,YAF.Core.Nntp.MIMEPart,System.Text.StringBuilder,System.Collections.ArrayList)">
            <summary>
            The convert mime content.
            </summary>
            <param name="messageId">
            The message id.
            </param>
            <param name="part">
            The part.
            </param>
            <param name="sb">
            The sb.
            </param>
            <param name="attachmentList">
            The attachment list.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.NntpConnection"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.ConnectServer(System.String,System.Int32)">
            <summary>
            The connect server.
            </summary>
            <param name="server">
            The server.
            </param>
            <param name="port">
            The port.
            </param>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.ProvideIdentity(System.String,System.String)">
            <summary>
            The provide identity.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="password">
            The password.
            </param>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.SendIdentity">
            <summary>
            The send identity.
            </summary>
            <returns>
            The send identity.
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.ConnectGroup(System.String)">
            <summary>
            The connect group.
            </summary>
            <param name="group">
            The group.
            </param>
            <returns>
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetGroupList">
            <summary>
            The get group list.
            </summary>
            <returns>
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetMessageId(System.Int32)">
            <summary>
            The get message id.
            </summary>
            <param name="articleId">
            The article id.
            </param>
            <returns>
            The get message id.
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetArticleId(System.String)">
            <summary>
            The get article id.
            </summary>
            <param name="messageId">
            The message id.
            </param>
            <returns>
            The get article id.
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetArticleList(System.Int32,System.Int32)">
            <summary>
            The get article list.
            </summary>
            <param name="low">
            The low.
            </param>
            <param name="high">
            The high.
            </param>
            <returns>
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetArticle(System.Int32)">
            <summary>
            The get article.
            </summary>
            <param name="articleId">
            The article id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.GetArticle(System.String)">
            <summary>
            The get article.
            </summary>
            <param name="messageId">
            The message id.
            </param>
            <returns>
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.PostArticle(YAF.Core.Nntp.Article)">
            <summary>
            The post article.
            </summary>
            <param name="article">
            The article.
            </param>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.Disconnect">
            <summary>
            The disconnect.
            </summary>
            <exception cref="T:YAF.Core.Nntp.NntpException">
            </exception>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="E:YAF.Core.Nntp.NntpConnection.onRequest">
            <summary>
            The on request.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.Timeout">
            <summary>
            Gets or sets Timeout.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.ConnectedServer">
            <summary>
            Gets ConnectedServer.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.ConnectedGroup">
            <summary>
            Gets ConnectedGroup.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.Port">
            <summary>
            Gets Port.
            </summary>
        </member>
        <member name="E:YAF.Core.Nntp.NntpConnection.OnRequest">
            <summary>
            The on request.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.NntpConnection.Response">
            <summary>
            The response.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.Response.code">
            <summary>
            The code.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.Response.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpConnection.Response.request">
            <summary>
            The request.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpConnection.Response.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.NntpConnection.Response"/> class.
            </summary>
            <param name="code">
            The code.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.Response.Code">
            <summary>
            Gets or sets Code.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.Response.Message">
            <summary>
            Gets or sets Message.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpConnection.Response.Request">
            <summary>
            Gets or sets Request.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.Newsgroup">
            <summary>
            The newsgroup.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Newsgroup.group">
            <summary>
            The group.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Newsgroup.high">
            <summary>
            The high.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.Newsgroup.low">
            <summary>
            The low.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.Newsgroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.Newsgroup"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.Newsgroup.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.Newsgroup"/> class.
            </summary>
            <param name="group">
            The group.
            </param>
            <param name="low">
            The low.
            </param>
            <param name="high">
            The high.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.Newsgroup.CompareTo(System.Object)">
            <summary>
            The compare to.
            </summary>
            <param name="r">
            The r.
            </param>
            <returns>
            The compare to.
            </returns>
        </member>
        <member name="P:YAF.Core.Nntp.Newsgroup.Group">
            <summary>
            Gets or sets Group.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Newsgroup.Low">
            <summary>
            Gets or sets Low.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.Newsgroup.High">
            <summary>
            Gets or sets High.
            </summary>
        </member>
        <member name="T:YAF.Core.StaticDataHelper">
            <summary>
            The static data helper.
            </summary>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.AllowDisallow">
            <summary>
            The allow disallow.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Country(YAF.Types.Interfaces.ILocalization)">
            <summary>
            The country names list(localized).
            </summary>
            <param name="localization">
            The localization.
            </param>
            <param name="addEmptyRow">
            Add empty row to data table for dropdown lists with empty selection option.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Country">
            <summary>
            The country names list(localized).
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Country(System.String)">
            <summary>
            The country names list(localized).
            </summary>
            <param name="forceLanguage">
            The force a specific language.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Region(YAF.Types.Interfaces.ILocalization,System.String)">
            <summary>
            The country names list(localized).
            </summary>
            <param name="localization">
            The localization.
            </param>
            <param name="addEmptyRow">
            Add empty row to data table for dropdown lists with empty selection option.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Region(System.String)">
            <summary>
            The country names list(localized).
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Cultures">
            <summary>
            The cultures IetfLangTags (4-letter).
            </summary>
            <returns>
            The cultures filtered by first 2 letters in the language tag in a language file
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.CultureDefaultFromFile(System.String)">
            <summary>
            Gets language tag info from language file tag.  
            </summary>
            <param name="fileName"></param>
            <returns>A default full 4-letter culture from the existing language file.</returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Languages">
            <summary>
            The languages.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.Themes">
            <summary>
            The themes.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.JqueryUIThemes">
            <summary>
            The themes.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.TimeZones(YAF.Types.Interfaces.ILocalization)">
            <summary>
            The time zones.
            </summary>
            <param name="localization">
            The localization.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.TimeZones">
            <summary>
            The time zones.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.TimeZones(System.String)">
            <summary>
            The time zones.
            </summary>
            <param name="forceLanguage">
            The force language.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StaticDataHelper.TopicTimes">
            <summary>
            The topic times.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.YafLanguageNodeComparer">
            <summary>
            The yaf language node comparer.
            </summary>
        </member>
        <member name="M:YAF.Core.YafLanguageNodeComparer.Compare(YAF.Types.LanuageResourcesPageResource,YAF.Types.LanuageResourcesPageResource)">
            <summary>
            The compare.
            </summary>
            <param name="x">
            The x.
            </param>
            <param name="y">
            The y.
            </param>
            <returns>
            The compare.
            </returns>
        </member>
        <member name="T:YAF.Core.IHaveServiceLocatorExtensions">
            <summary>
            The i have service locator extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IHaveServiceLocatorExtensions.RunStartupServices(YAF.Types.Interfaces.IHaveServiceLocator)">
            <summary>
            The run startup services.
            </summary>
            <param name="serviceLocator">
            The instnace that has a service locator.
            </param>
        </member>
        <member name="M:YAF.Core.IHaveServiceLocatorExtensions.WithParameters(YAF.Types.Interfaces.IHaveServiceLocator,YAF.Types.Interfaces.IServiceLocationParameter[])">
            <summary>
            The with parameters.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.ContextVariableRepository">
            <summary>
            Place to put helper properties for context variables inside.
            </summary>
        </member>
        <member name="F:YAF.Core.ContextVariableRepository._dic">
            <summary>
              The _dic.
            </summary>
        </member>
        <member name="M:YAF.Core.ContextVariableRepository.#ctor(YAF.Classes.Pattern.TypeDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ContextVariableRepository"/> class.
            </summary>
            <param name="dictionary">
            The dictionary.
            </param>
        </member>
        <member name="P:YAF.Core.ContextVariableRepository.IsSuspendCheckEnabled">
            <summary>
              Flag set if the system should check if the user is suspended and redirect appropriately. Defaults to true.
              Setting to false effectively disables suspend checking.
            </summary>
        </member>
        <member name="P:YAF.Core.ContextVariableRepository.Vars">
            <summary>
              Gets Vars.
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.YafBBCode">
            <summary>
            Yaf BBCode Class to Format Message From BB Code to HTML and Reverse.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._Options">
            <summary>
              The _options.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxBBCodeLocalizationTag">
            <summary>
              The _rgx bb code localization tag.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxBr">
            <summary>
              The _rgx br.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxColor">
            <summary>
              The _rgx color.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxFont">
            <summary>
              The _rgx font.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxHighlighted">
            <summary>
              The _rgx Highlighted.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxHr">
            <summary>
              The _rgx hr.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxItalic">
            <summary>
              The _rgx italic.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxCenter">
            <summary>
              The _rgx center.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxLeft">
            <summary>
              The _rgx left.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxRight">
            <summary>
              The _rgx right.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxBullet">
            <summary>
              The _rgx bullet.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxList1">
            <summary>
              The _rgx list 1.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxListNumber">
            <summary>
              The List Number Regex
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxListLowerRoman">
            <summary>
              The List Lower Roman Regex
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxListUpperRoman">
            <summary>
            The List Upper Roman Regex
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxListLowerAlpha">
            <summary>
              The List Lower Alphabet Regex
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxListUpperAlpha">
            <summary>
            The List Upper Alphabet Regex
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxSize">
            <summary>
              The _rgx size.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxStrike">
            <summary>
              The _rgx strike.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxTopic">
            <summary>
              The _rgx topic.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxPost">
            <summary>
              The _rgx post.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._RgxUnderline">
            <summary>
              The _rgx underline.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxNoParse">
            <summary>
              The _rgx noparse.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxBold">
            <summary>
              The _rgx bold.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxEmail1">
            <summary>
              The _rgx email 1.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxEmail2">
            <summary>
              The _rgx email 2.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxCode1">
            <summary>
              The _rgx code 1.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._regexCodeWithLanguage">
            <summary>
              The regex code with language string.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._regexCodeWithLanguage2">
            <summary>
              The regex code with language and highlight string.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxImg">
            <summary>
              The _rgx img.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxImgEmptyTitle">
            <summary>
              The _rgx img Title.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxImgTitle">
            <summary>
              The _rgx img Title.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxQuote1">
            <summary>
              The _rgx quote 1.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxQuote2">
            <summary>
              The _rgx quote 2.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxQuote3">
            <summary>
              The _rgx quote 3.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxModalUrl1">
            <summary>
              The _rgx url 1.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxModalUrl2">
            <summary>
              The _rgx url 2.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxUrl1">
            <summary>
              The _rgx url 1.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.YafBBCode._rgxUrl2">
            <summary>
              The _rgx url 2.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.#ctor(YAF.Types.Interfaces.IServiceLocator,System.Func{System.Collections.Generic.IEnumerable{System.Boolean},YAF.Types.Interfaces.IProcessReplaceRules})">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.YafBBCode"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="processReplaceRulesFactory">
            The process replace rules factory.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.AddSmiles(YAF.Types.Interfaces.IProcessReplaceRules)">
            <summary>
            Adds smiles replacement rules to the collection from the DB
            </summary>
            <param name="rules">
            The rules.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.ConvertBBCodeToHtmlForEdit(System.String)">
            <summary>
            Converts a message containing YafBBCode to HTML appropriate for editing in a rich text editor.
            </summary>
            <remarks>
            YafBBCode quotes are not converted to HTML.  "[quote]...[/quote]" will remain in the string 
              returned, as to appear in plain text in rich text editors.
            </remarks>
            <param name="message">
            String containing the body of the message to convert
            </param>
            <returns>
            The converted text
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.ConvertHtmltoBBCodeForEdit(System.String)">
            <summary>
            Converts a message containing HTML to YafBBCode for editing in a rich bbcode editor.
            </summary>
            <param name="message">
            String containing the body of the message to convert
            </param>
            <returns>
            The converted text
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.CreateBBCodeRules(YAF.Types.Interfaces.IProcessReplaceRules,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates the rules that convert <see cref="T:YAF.Core.BBCode.YafBBCode"/> to HTML
            </summary>
            <param name="ruleEngine">
            The rule Engine.
            </param>
            <param name="doFormatting">
            The do Formatting.
            </param>
            <param name="targetBlankOverride">
            The target Blank Override.
            </param>
            <param name="useNoFollow">
            The use No Follow.
            </param>
            <param name="convertBBQuotes">
            The convert BB Quotes.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.CreateHtmlRules(YAF.Types.Interfaces.IProcessReplaceRules,System.Boolean,System.Boolean)">
            <summary>
            Creates the rules that convert HTML to <see cref="T:YAF.Core.BBCode.YafBBCode"/>
            </summary>
            <param name="ruleEngine">
            The rule Engine.
            </param>
            <param name="doFormatting">
            The do Formatting.
            </param>
            <param name="convertBBQuotes">
            The convert BB Quotes.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.LocalizeCustomBBCodeElement(System.String)">
            <summary>
            Handles localization for a Custom YafBBCode Elements using
              the code [localization=tag]default[/localization]
            </summary>
            <param name="strToLocalize">
            The string to localize.
            </param>
            <returns>
            The localize custom bb code element.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.MakeHtml(System.String,System.Boolean,System.Boolean)">
            <summary>
            Converts a string containing YafBBCode to the equivalent HTML string.
            </summary>
            <param name="inputString">
            Input string containing YafBBCode to convert to HTML
            </param>
            <param name="doFormatting">
            The do Formatting.
            </param>
            <param name="targetBlankOverride">
            The target Blank Override.
            </param>
            <returns>
            The make html.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.RegisterCustomBBCodePageElements(System.Web.UI.Page,System.Type)">
            <summary>
            Helper function that dandles registering "custom bbcode" javascript (if there is any)
              for all the custom YafBBCode.
            </summary>
            <param name="currentPage">
            The current Page.
            </param>
            <param name="currentType">
            The current Type.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.RegisterCustomBBCodePageElements(System.Web.UI.Page,System.Type,System.String)">
            <summary>
            Helper function that dandles registering "custom bbcode" javascript (if there is any)
              for all the custom YafBBCode. Defining editorID make the system also show "editor js" (if any).
            </summary>
            <param name="currentPage">
            The current Page.
            </param>
            <param name="currentType">
            The current Type.
            </param>
            <param name="editorID">
            The editor ID.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.YafBBCode.AddCustomBBCodeRules(YAF.Types.Interfaces.IProcessReplaceRules)">
            <summary>
            Applies Custom YafBBCode Rules from the YafBBCode table
            </summary>
            <param name="rulesEngine">
            The rules Engine.
            </param>
        </member>
        <member name="P:YAF.Core.BBCode.YafBBCode.ProcessReplaceRulesFactory">
            <summary>
              Gets or sets ProcessReplaceRulesFactory.
            </summary>
        </member>
        <member name="P:YAF.Core.BBCode.YafBBCode.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.CodeRegexReplaceRule">
            <summary>
            Simple code block regular express replace
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.CodeRegexReplaceRule.#ctor(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.CodeRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.CodeRegexReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.CodeRegexReplaceRule.GetInnerValue(System.String)">
            <summary>
            This just overrides how the inner value is handled
            </summary>
            <param name="innerValue">
            </param>
            <returns>
            The get inner value.
            </returns>
        </member>
        <member name="T:YAF.Core.StandardModuleManager`1">
            <summary>
            The standard module manager.
            </summary>
            <typeparam name="TModule">
            The module type based on IBaseModule.
            </typeparam>
        </member>
        <member name="F:YAF.Core.StandardModuleManager`1._modules">
            <summary>
            The _modules.
            </summary>
        </member>
        <member name="M:YAF.Core.StandardModuleManager`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.StandardModuleManager`1"/> class.
            </summary>
            <param name="modules">
            The modules.
            </param>
        </member>
        <member name="M:YAF.Core.StandardModuleManager`1.GetAll(System.Boolean)">
            <summary>
            Get all instances of modules available.
            </summary>
            <param name="getInactive">
            The get Inactive.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.StandardModuleManager`1.GetBy(System.String,System.Boolean)">
            <summary>
            Get an instance of a module (based on it's id).
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="getInactive">
            The get Inactive.
            </param>
            <returns>
            Instance of TModule or null if not found.
            </returns>
        </member>
        <member name="M:YAF.Core.StandardModuleManager`1.GetBy(System.String)">
            <summary>
            Get an instance of a module (based on it's id).
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            Instance of TModule or null if not found.
            </returns>
        </member>
        <member name="T:YAF.Core.AppInitTaskManager">
            <summary>
            The app init task manager.
            </summary>
        </member>
        <member name="T:YAF.Core.BaseTaskModuleManager">
            <summary>
            The base task module manager.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseTaskModuleManager.IsTaskRunning(System.String)">
            <summary>
            Check if a Task is Running.
            </summary>
            <param name="instanceName">
            </param>
            <returns>
            The is task running.
            </returns>
        </member>
        <member name="M:YAF.Core.BaseTaskModuleManager.StartTask(System.String,System.Func{YAF.Types.Interfaces.IBackgroundTask})">
            <summary>
            Start a non-running task -- will set the <see cref="T:System.Web.HttpApplication"/> instance.
            </summary>
            <param name="instanceName">
            Unique name of this task
            </param>
            <param name="start">
            Task to run
            </param>
        </member>
        <member name="M:YAF.Core.BaseTaskModuleManager.TaskExists(System.String)">
            <summary>
            Check if a task exists in the task manager. May not be running.
            </summary>
            <param name="instanceName">
            </param>
            <returns>
            The task exists.
            </returns>
        </member>
        <member name="M:YAF.Core.BaseTaskModuleManager.TryGetTask(System.String,YAF.Types.Interfaces.IBackgroundTask@)">
            <summary>
            Attempt to get the instance of the task.
            </summary>
            <param name="instanceName">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.BaseTaskModuleManager.TryRemoveTask(System.String)">
            <summary>
            The try remove task.
            </summary>
            <param name="instanceName">
            The instance name.
            </param>
            <returns>
            The try remove task.
            </returns>
        </member>
        <member name="M:YAF.Core.BaseTaskModuleManager.StopTask(System.String)">
            <summary>
            Stops a task from running if it's not critical
            </summary>
            <param name="instanceName">
            </param>
        </member>
        <member name="P:YAF.Core.BaseTaskModuleManager.TaskCount">
            <summary>
              Gets TaskCount.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseTaskModuleManager.TaskManagerInstances">
            <summary>
              All the names of tasks running.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseTaskModuleManager.TaskManagerSnapshot">
            <summary>
              Gets TaskManagerSnapshot.
            </summary>
        </member>
        <member name="F:YAF.Core.AppInitTaskManager._appInstance">
            <summary>
              The _app instance.
            </summary>
        </member>
        <member name="M:YAF.Core.AppInitTaskManager.#ctor(YAF.Types.Interfaces.IServiceLocator,YAF.Types.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.AppInitTaskManager"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="logger">
            The logger.
            </param>
        </member>
        <member name="M:YAF.Core.AppInitTaskManager.StartTask(System.String,System.Func{YAF.Types.Interfaces.IBackgroundTask})">
            <summary>
            Start a non-running task -- will set the <see cref="T:System.Web.HttpApplication"/> instance.
            </summary>
            <param name="instanceName">
            Unique name of this task
            </param>
            <param name="start">
            Task to run
            </param>
        </member>
        <member name="M:YAF.Core.AppInitTaskManager.Handle(YAF.Types.EventProxies.HttpApplicationInitEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.AppInitTaskManager.Logger">
            <summary>
            Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.AppInitTaskManager.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.AppInitTaskManager.ServiceLocator">
            <summary>
            Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafSpamCheck">
            <summary>
            Yaf Spam Checking
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSpamCheck.IsPostSpam(System.String,System.String,System.String)">
            <summary>
            Check a Post for SPAM against the BlogSpam.NET API or Akismet Service
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="postSubject">The post subject.</param>
            <param name="postMessage">The post message.</param>
            <returns>
            Returns if Post is SPAM or not
            </returns>
        </member>
        <member name="T:YAF.Core.ModerateForumPage">
            <summary>
            The moderate forum page.
            </summary>
        </member>
        <member name="M:YAF.Core.ModerateForumPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ModerateForumPage"/> class.
            </summary>
            <param name="transPage">
            The trans page.
            </param>
        </member>
        <member name="M:YAF.Core.ModerateForumPage.Page_Load(System.Object,System.EventArgs)">
            <summary>
            The page_ load.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="P:YAF.Core.ModerateForumPage.PageName">
            <summary>
            Gets PageName.
            </summary>
        </member>
        <member name="T:YAF.Core.AutoFacServiceLocatorProvider">
            <summary>
            The auto fac service locator provider.
            </summary>
        </member>
        <member name="F:YAF.Core.AutoFacServiceLocatorProvider.DefaultFlags">
            <summary>
              The default flags.
            </summary>
        </member>
        <member name="F:YAF.Core.AutoFacServiceLocatorProvider._injectionCache">
            <summary>
            The _injection cache.
            </summary>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.#ctor(Autofac.ILifetimeScope)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.AutoFacServiceLocatorProvider"/> class.
            </summary>
            <param name="container">
            The container.
            </param>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.InjectMarked``1(System.Object)">
            <summary>
            Inject an object with services.
            </summary>
            <typeparam name="TAttribute">
            TAttribute is the attribute that marks properties to inject to.
            </typeparam>
            <param name="instance">
            the object to inject
            </param>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.Get(System.Type)">
            <summary>
            The get.
            </summary>
            <param name="serviceType">
            The service type.
            </param>
            <returns>
            The get.
            </returns>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.Get(System.Type,System.Collections.Generic.IEnumerable{YAF.Types.Interfaces.IServiceLocationParameter})">
            <summary>
            The get.
            </summary>
            <param name="serviceType">
            The service type.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The get.
            </returns>
            <exception cref="T:System.NotSupportedException">
            <c>NotSupportedException</c>.
            </exception>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.Get(System.Type,System.String)">
            <summary>
            The get.
            </summary>
            <param name="serviceType">
            The service type.
            </param>
            <param name="named">
            The named.
            </param>
            <returns>
            The get.
            </returns>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.Get(System.Type,System.String,System.Collections.Generic.IEnumerable{YAF.Types.Interfaces.IServiceLocationParameter})">
            <summary>
            The get.
            </summary>
            <param name="serviceType">
            The service type.
            </param>
            <param name="named">
            The named.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The get.
            </returns>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.TryGet(System.Type,System.Object@)">
            <summary>
            The try get.
            </summary>
            <param name="serviceType">
            The service type.
            </param>
            <param name="instance">
            The instance.
            </param>
            <returns>
            The try get.
            </returns>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.TryGet(System.Type,System.String,System.Object@)">
            <summary>
            The try get.
            </summary>
            <param name="serviceType">
            The service type.
            </param>
            <param name="named">
            The named.
            </param>
            <param name="instance">
            The instance.
            </param>
            <returns>
            The try get.
            </returns>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <returns>
            A service object of type <paramref name="serviceType"/>.
              -or- 
              null if there is no service object of type <paramref name="serviceType"/>.
            </returns>
            <param name="serviceType">
            An object that specifies the type of service object to get. 
            </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:YAF.Core.AutoFacServiceLocatorProvider.ConvertToAutofacParameters(System.Collections.Generic.IEnumerable{YAF.Types.Interfaces.IServiceLocationParameter})">
            <summary>
            The convert to autofac parameters.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:System.NotSupportedException">
            <c>NotSupportedException</c>.
            </exception>
        </member>
        <member name="P:YAF.Core.AutoFacServiceLocatorProvider.Container">
            <summary>
              Gets or sets Container.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafPermissions">
            <summary>
            The yaf permissions.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafPermissions.Check(YAF.Types.Constants.ViewPermissions)">
            <summary>
            The check.
            </summary>
            <param name="permission">
            The permission.
            </param>
            <returns>
            The check.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafPermissions.HandleRequest(YAF.Types.Constants.ViewPermissions)">
            <summary>
            The handle request.
            </summary>
            <param name="permission">
            The permission.
            </param>
        </member>
        <member name="T:YAF.Core.ScriptStatementContext">
            <summary>
            The script statement context.
            </summary>
        </member>
        <member name="M:YAF.Core.ScriptStatementContext.#ctor(YAF.Types.Interfaces.IScriptBuilder,YAF.Types.Interfaces.IScriptStatement)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ScriptStatementContext"/> class.
            </summary>
            <param name="scriptBuilder">
            The script builder.
            </param>
            <param name="scriptStatement">
            The script statement.
            </param>
        </member>
        <member name="P:YAF.Core.ScriptStatementContext.ScriptBuilder">
            <summary>
            Gets or sets ScriptBuilder.
            </summary>
        </member>
        <member name="P:YAF.Core.ScriptStatementContext.ScriptStatement">
            <summary>
            Gets or sets ScriptStatement.
            </summary>
        </member>
        <member name="T:YAF.Core.IYafThemeExtensions">
            <summary>
            The i yaf theme extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IYafThemeExtensions.GetCollapsiblePanelImageURL(YAF.Types.Interfaces.ITheme,System.String,YAF.Types.Constants.CollapsiblePanelState)">
            <summary>
            Gets the collapsible panel image url (expanded or collapsed).
            </summary>
            <param name="theme">
            The theme.
            </param>
            <param name="panelID">
            ID of collapsible panel
            </param>
            <param name="defaultState">
            Default Panel State
            </param>
            <returns>
            Image URL
            </returns>
        </member>
        <member name="T:YAF.Core.IFormatMessageExtensions">
            <summary>
            The i format message extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IFormatMessageExtensions.FormatMessage(YAF.Types.Interfaces.IFormatMessage,System.String,YAF.Types.Flags.MessageFlags)">
            <summary>
            The format message.
            </summary>
            <param name="formatMessage">
            The format Message.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="messageFlags">
            The message flags.
            </param>
            <returns>
            The formatted message.
            </returns>
        </member>
        <member name="M:YAF.Core.IFormatMessageExtensions.FormatMessage(YAF.Types.Interfaces.IFormatMessage,System.String,YAF.Types.Flags.MessageFlags,System.Boolean)">
            <summary>
            The format message.
            </summary>
            <param name="formatMessage">
            The format Message.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="messageFlags">
            The message flags.
            </param>
            <param name="targetBlankOverride">
            The target blank override.
            </param>
            <returns>
            The formated message.
            </returns>
        </member>
        <member name="T:YAF.Core.TreatCacheKeyWithBoard">
            <summary>
            The treat cache key with board.
            </summary>
        </member>
        <member name="M:YAF.Core.TreatCacheKeyWithBoard.#ctor(YAF.Types.Interfaces.IHaveBoardId)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.TreatCacheKeyWithBoard"/> class.
            </summary>
            <param name="haveBoardId">
            The board id.
            </param>
        </member>
        <member name="M:YAF.Core.TreatCacheKeyWithBoard.Treat(System.String)">
            <summary>
            The treat.
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            The treat.
            </returns>
        </member>
        <member name="P:YAF.Core.TreatCacheKeyWithBoard.HaveBoardId">
            <summary>
            Gets or sets HaveBoardId.
            </summary>
        </member>
        <member name="T:YAF.Core.LoadPageVariablesFromQuery">
            <summary>
            The load page variables from query.
            </summary>
        </member>
        <member name="M:YAF.Core.LoadPageVariablesFromQuery.#ctor(YAF.Types.Interfaces.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.LoadPageVariablesFromQuery"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
        </member>
        <member name="M:YAF.Core.LoadPageVariablesFromQuery.Handle(YAF.Types.EventProxies.InitPageLoadEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.LoadPageVariablesFromQuery.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageVariablesFromQuery.ServiceLocator">
            <summary>
            Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.CombinedUserDataHelper">
            <summary>
            Helps get a complete user profile from various locations
            </summary>
        </member>
        <member name="F:YAF.Core.CombinedUserDataHelper._membershipUser">
            <summary>
              The _membership user.
            </summary>
        </member>
        <member name="F:YAF.Core.CombinedUserDataHelper._rowConvert">
            <summary>
              The _row convert.
            </summary>
        </member>
        <member name="F:YAF.Core.CombinedUserDataHelper._userDBRow">
            <summary>
              The _user db row.
            </summary>
        </member>
        <member name="F:YAF.Core.CombinedUserDataHelper._userID">
            <summary>
              The _user id.
            </summary>
        </member>
        <member name="F:YAF.Core.CombinedUserDataHelper._userProfile">
            <summary>
              The _user profile.
            </summary>
        </member>
        <member name="M:YAF.Core.CombinedUserDataHelper.#ctor(System.Web.Security.MembershipUser,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.CombinedUserDataHelper"/> class.
            </summary>
            <param name="membershipUser">
            The membership user.
            </param>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Core.CombinedUserDataHelper.#ctor(System.Web.Security.MembershipUser)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.CombinedUserDataHelper"/> class.
            </summary>
            <param name="membershipUser">
            The membership user.
            </param>
        </member>
        <member name="M:YAF.Core.CombinedUserDataHelper.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.CombinedUserDataHelper"/> class.
            </summary>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Core.CombinedUserDataHelper.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.CombinedUserDataHelper"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.CombinedUserDataHelper.InitUserData">
            <summary>
            The init user data.
            </summary>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.UseSingleSignOn">
            <summary>
              Gets a value indicating whether Use Single Sign On.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.AutoWatchTopics">
            <summary>
              Gets a value indicating whether AutoWatchTopics.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Avatar">
            <summary>
              Gets Avatar.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.CultureUser">
            <summary>
              Gets Culture.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.TextEditor">
            <summary>
              Gets User's Text Editor.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.DBRow">
            <summary>
              Gets DBRow.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.DSTUser">
            <summary>
              Gets a value indicating whether  DST is Enabled.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.DailyDigest">
            <summary>
            Gets a value indicating whether DailyDigest.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.DisplayName">
            <summary>
              Gets DisplayName.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Email">
            <summary>
              Gets Email.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.HasAvatarImage">
            <summary>
              Gets a value indicating whether HasAvatarImage.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.IsActiveExcluded">
            <summary>
              Gets a value indicating whether IsActiveExcluded.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.IsGuest">
            <summary>
              Gets a value indicating whether IsGuest.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Joined">
            <summary>
              Gets Joined.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.LanguageFile">
            <summary>
              Gets LanguageFile.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.LastVisit">
            <summary>
              Gets LastVisit.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Membership">
            <summary>
              Gets Membership.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.NotificationSetting">
            <summary>
            Gets NotificationSetting.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.NumPosts">
            <summary>
              Gets NumPosts.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.UseMobileTheme">
            <summary>
              Gets a value indicating whether UseMobileTheme.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.PMNotification">
            <summary>
              Gets a value indicating whether PMNotification.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Points">
            <summary>
              Gets Points.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Profile">
            <summary>
              Gets Profile.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.RankName">
            <summary>
              Gets RankName.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.Signature">
            <summary>
              Gets Signature.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.ThemeFile">
            <summary>
              Gets ThemeFile.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.TimeZone">
            <summary>
              Gets TimeZone.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.UserID">
            <summary>
              Gets UserID.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.UserName">
            <summary>
              Gets UserName.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.MembershipUser">
            <summary>
              Gets or sets the membership user.
            </summary>
        </member>
        <member name="P:YAF.Core.CombinedUserDataHelper.RowConvert">
            <summary>
              Gets RowConvert.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.DigestSendForumModule">
            <summary>
            The mail sending module.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.DigestSendForumModule._keyName">
            <summary>
              The _key name.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.DigestSendForumModule.Init">
            <summary>
            The init.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.DigestSendForumModule.Current_AfterInit(System.Object,System.EventArgs)">
            <summary>
            The current_ after init.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:YAF.Core.Tasks.CleanUpTask">
            <summary>
            Automatically cleans up the tasks if they are no longer running...
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.CleanUpTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Tasks.CleanUpTask"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.CleanUpTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.CleanUpTask.TaskManager">
            <summary>
            Gets or sets TaskManager.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafBuddy">
            <summary>
            Yaf buddies service
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafBuddy._dbBroker">
            <summary>
            The _db broker.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.#ctor(YAF.Types.Interfaces.IServiceLocator,YAF.Types.Interfaces.IDBBroker)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafBuddy"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="dbBroker">
            The db broker.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.AddRequest(System.Int32)">
            <summary>
            Adds a buddy request.
            </summary>
            <param name="toUserID">
            the to user id.
            </param>
            <returns>
            The name of the second user + whether this request is approved or not. (This request
              is approved without the target user's approval if the target user has sent a buddy request
              to current user too or if the current user is already in the target user's buddy list.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.ApproveAllRequests(System.Boolean)">
            <summary>
            Approves all buddy requests for the current user.
            </summary>
            <param name="mutual">
            should the users be added to current user's buddy list too?
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.ApproveRequest(System.Int32,System.Boolean)">
            <summary>
            Approves a buddy request.
            </summary>
            <param name="toUserID">
            the to user id.
            </param>
            <param name="mutual">
            should the second user be added to current user's buddy list too?
            </param>
            <returns>
            The name of the second user.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.All">
            <summary>
            Gets all the buddies of the current user.
            </summary>
            <returns>
            A <see cref="T:System.Data.DataTable"/> of all buddies.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.ClearCache(System.Int32)">
            <summary>
            Clears the buddies cache for the current user.
            </summary>
            <param name="userID">
            The User ID.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.DenyAllRequests">
            <summary>
            Denies all buddy requests for the current user.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.DenyRequest(System.Int32)">
            <summary>
            Denies a buddy request.
            </summary>
            <param name="toUserID">
            The to user id.
            </param>
            <returns>
            the name of the second user.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.GetForUser(System.Int32)">
            <summary>
            Gets all the buddies for the specified user.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            a <see cref="T:System.Data.DataTable"/> of all buddies.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.IsBuddy(System.Int32,System.Boolean)">
            <summary>
            determines if the "<paramref name="buddyUserID"/>" and current user are buddies.
            </summary>
            <param name="buddyUserID">
            The Buddy User ID.
            </param>
            <param name="approved">
            Just look into approved buddies?
            </param>
            <returns>
            true if they are buddies, <see langword="false"/> if not.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafBuddy.Remove(System.Int32)">
            <summary>
            Removes the "<paramref name="toUserID"/>" from current user's buddy list.
            </summary>
            <param name="toUserID">
            The to user id.
            </param>
            <returns>
            The name of the second user.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.YafBuddy.ServiceLocator">
            <summary>
            Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.StartupCheckBannedIps">
            <summary>
            The yaf check banned ips.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.StartupCheckBannedIps._initVarName">
            <summary>
              The _init var name.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.StartupCheckBannedIps.#ctor(YAF.Types.Interfaces.IDataCache,System.Web.HttpResponseBase,System.Web.HttpRequestBase,YAF.Types.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.StartupCheckBannedIps"/> class.
            </summary>
            <param name="dataCache">
            The data cache.
            </param>
            <param name="httpResponseBase">
            The http response base.
            </param>
            <param name="httpRequestBase">
            The http request base.
            </param>
            <param name="logger">
            The logger.
            </param>
        </member>
        <member name="M:YAF.Core.Services.StartupCheckBannedIps.RunService">
            <summary>
            The run service.
            </summary>
            <returns>
            The run service.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.StartupCheckBannedIps.DataCache">
            <summary>
              Gets or sets DataCache.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.StartupCheckBannedIps.HttpRequestBase">
            <summary>
              Gets or sets HttpRequestBase.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.StartupCheckBannedIps.HttpResponseBase">
            <summary>
              Gets or sets HttpResponseBase.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.StartupCheckBannedIps.Logger">
            <summary>
            Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.StartupCheckBannedIps.InitVarName">
            <summary>
              Gets InitVarName.
            </summary>
        </member>
        <member name="T:YAF.Core.ScriptFunctionContextExtensions">
            <summary>
            The script function extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ScriptFunctionContextExtensions.Func(YAF.Types.Interfaces.IScriptFunctionContext,System.Action{YAF.Types.Interfaces.IScriptStatementContext})">
            <summary>
            Defines the function inner statement.
            </summary>
            <param name="scriptFunction">
            The script function.
            </param>
            <param name="innerFuncStatment">
            The inner Func Statment.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptFunctionContextExtensions.Name(YAF.Types.Interfaces.IScriptFunctionContext,System.String)">
            <summary>
            The function Name (optional).
            </summary>
            <param name="scriptFunction">
            The script function.
            </param>
            <param name="Name">
            The name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptFunctionContextExtensions.WithParams(YAF.Types.Interfaces.IScriptFunctionContext,System.String[])">
            <summary>
            The function parameters.
            </summary>
            <param name="scriptFunction">
            The script function.
            </param>
            <param name="args">
            The args.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.Services.PanelSessionState">
            <summary>
            The panel session state.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.PanelSessionState.TogglePanelState(System.String,YAF.Types.Constants.CollapsiblePanelState)">
            <summary>
            The toggle panel state.
            </summary>
            <param name="panelID">
            The panel id.
            </param>
            <param name="defaultState">
            The default state.
            </param>
        </member>
        <member name="P:YAF.Core.Services.PanelSessionState.Item(System.String)">
            <summary>
              Gets panel session state.
            </summary>
            <param name = "panelID">panelID</param>
            <returns></returns>
        </member>
        <member name="T:YAF.Core.Services.LoadMessage">
            <summary>
            The load message.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.LoadMessage._loadStringList">
            <summary>
              The _load string list.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.Services.LoadMessage"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.CleanJsString(System.String)">
            <summary>
            The clean js string.
            </summary>
            <param name="jsString">
            The js string.
            </param>
            <returns>
            The clean js string.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.Add(System.String)">
            <summary>
            AddLoadMessage creates a message that will be returned on the next page load.
            </summary>
            <param name="message">
            The message you wish to display.
            </param>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.AddSession(System.String)">
            <summary>
            AddLoadMessageSession creates a message that will be returned on the next page.
            </summary>
            <param name="message">
            The message you wish to display.
            </param>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.Clear">
            <summary>
            Clear the Load String (error) List
            </summary>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.LoadStringDelimited(System.String)">
            <summary>
            The load string delimited.
            </summary>
            <param name="delimiter">
            The delimiter.
            </param>
            <returns>
            The load string delimited.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.LoadMessage.Current_Unload(System.Object,System.EventArgs)">
            <summary>
            The current_ unload.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="P:YAF.Core.Services.LoadMessage.LoadString">
            <summary>
              Gets LoadString.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.LoadMessage.LoadStringList">
            <summary>
              Gets LoadStringList.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.LoadMessage.StringJavascript">
            <summary>
              Gets StringJavascript.
            </summary>
        </member>
        <member name="T:YAF.Core.ThemeProvider">
            <summary>
            The theme handler.
            </summary>
        </member>
        <member name="F:YAF.Core.ThemeProvider._initTheme">
            <summary>
              The _init theme.
            </summary>
        </member>
        <member name="F:YAF.Core.ThemeProvider._theme">
            <summary>
              The _theme.
            </summary>
        </member>
        <member name="M:YAF.Core.ThemeProvider.InitTheme">
            <summary>
            Sets the theme class up for usage
            </summary>
            <exception cref="T:YAF.Core.CantLoadThemeException"><c>CantLoadThemeException</c>.</exception>
        </member>
        <member name="E:YAF.Core.ThemeProvider.AfterInit">
            <summary>
              The after init.
            </summary>
        </member>
        <member name="E:YAF.Core.ThemeProvider.BeforeInit">
            <summary>
              The before init.
            </summary>
        </member>
        <member name="P:YAF.Core.ThemeProvider.Theme">
            <summary>
              Gets or sets Theme.
            </summary>
        </member>
        <member name="T:YAF.Core.CurrentBoardSettings">
            <summary>
            The current board settings.
            </summary>
        </member>
        <member name="F:YAF.Core.CurrentBoardSettings._applicationStateBase">
            <summary>
              The _application state base.
            </summary>
        </member>
        <member name="F:YAF.Core.CurrentBoardSettings._haveBoardId">
            <summary>
              The _have board id.
            </summary>
        </member>
        <member name="F:YAF.Core.CurrentBoardSettings._injectServices">
            <summary>
              The _inject services.
            </summary>
        </member>
        <member name="F:YAF.Core.CurrentBoardSettings._treatCacheKey">
            <summary>
            The _treat cache key.
            </summary>
        </member>
        <member name="M:YAF.Core.CurrentBoardSettings.#ctor(System.Web.HttpApplicationStateBase,YAF.Types.Interfaces.IInjectServices,YAF.Types.Interfaces.IHaveBoardId,YAF.Types.Interfaces.ITreatCacheKey)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.CurrentBoardSettings"/> class.
            </summary>
            <param name="applicationStateBase">
            The application state base.
            </param>
            <param name="injectServices">
            The inject services.
            </param>
            <param name="haveBoardId">
            The have board id.
            </param>
            <param name="treatCacheKey">
            </param>
        </member>
        <member name="P:YAF.Core.CurrentBoardSettings.Instance">
            <summary>
              Gets or sets Object.
            </summary>
        </member>
        <member name="T:YAF.Core.IDateTimeExtensions">
            <summary>
            The yaf date time extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.Format(YAF.Types.Interfaces.IDateTime,YAF.Types.Constants.DateTimeFormat,System.Object)">
            <summary>
            Format objectDateTime according to the format enum. "[error]" if the value is invalid.
            </summary>
            <param name="dateTimeInstance">
            The yaf date time.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="objectDateTime">
            The object date time.
            </param>
            <returns>
            Formatted datetime or "[error]" if invalid.
            </returns>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.FormatDateLong(YAF.Types.Interfaces.IDateTime,System.Object)">
            <summary>
            Format a date long -- using an object conversion.
            </summary>
            <param name="dateTimeInstance">
            </param>
            <param name="objectDateTime">
            </param>
            <returns>
            The format date long.
            </returns>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.FormatDateShort(YAF.Types.Interfaces.IDateTime,System.Object)">
            <summary>
            The format date short.
            </summary>
            <param name="dateTimeInstance">
            The yaf date time.
            </param>
            <param name="objectDateTime">
            The object date time.
            </param>
            <returns>
            The format date short.
            </returns>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.FormatDateTime(YAF.Types.Interfaces.IDateTime,System.Object)">
            <summary>
            The format date time.
            </summary>
            <param name="dateTimeInstance">
            The yaf date time.
            </param>
            <param name="objectDateTime">
            The object date time.
            </param>
            <returns>
            The format date time.
            </returns>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.FormatDateTimeShort(YAF.Types.Interfaces.IDateTime,System.Object)">
            <summary>
            The format date time short.
            </summary>
            <param name="dateTimeInstance">
            The yaf date time.
            </param>
            <param name="objectDateTime">
            The object date time.
            </param>
            <returns>
            The format date time short.
            </returns>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.FormatDateTimeTopic(YAF.Types.Interfaces.IDateTime,System.Object)">
            <summary>
            The format date time topic.
            </summary>
            <param name="dateTimeInstance">
            The yaf date time.
            </param>
            <param name="objectDateTime">
            The object date time.
            </param>
            <returns>
            The format date time topic.
            </returns>
        </member>
        <member name="M:YAF.Core.IDateTimeExtensions.FormatTime(YAF.Types.Interfaces.IDateTime,System.Object)">
            <summary>
            The format time.
            </summary>
            <param name="dateTimeInstance">
            The yaf date time.
            </param>
            <param name="objectDateTime">
            The object date time.
            </param>
            <returns>
            The format time.
            </returns>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceBlocksCollection">
            <summary>
            Handles the collection of replacement tags and can also pull the HTML out of the text making a new replacement tag
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceBlocksCollection._replacementDictionary">
            <summary>
              The _replacement dictionary.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceBlocksCollection._currentIndex">
            <summary>
              The _current index.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceBlocksCollection._randomInstance">
            <summary>
              The _random instance.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceBlocksCollection._replaceFormat">
            <summary>
             REPLACEMENT UNIQUE VALUE -- USED TO CREATE A UNIQUE VALUE TO REPLACE -- IT IS NOT SUPPOSED TO BE HUMAN READABLE.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceBlocksCollection.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceBlocksCollection"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceBlocksCollection.Add(System.String)">
            <summary>
            The add replacement.
            </summary>
            <param name="newItem">
            The new item.
            </param>
            <returns>
            The add replacement.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceBlocksCollection.Get(System.Int32)">
            <summary>
            The get replace value.
            </summary>
            <param name="index">
            The index.
            </param>
            <returns>
            The get replace value.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceBlocksCollection.RandomizeInstance">
            <summary>
            get a random number for the instance
              so it's harder to guess the replacement format
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceBlocksCollection.Reconstruct(System.String@)">
            <summary>
            Reconstructs the text from the collection elements...
            </summary>
            <param name="text">
            </param>
        </member>
        <member name="P:YAF.Core.BBCode.ReplaceBlocksCollection.ReplacementDictionary">
            <summary>
              Gets ReplacementDictionary.
            </summary>
        </member>
        <member name="T:YAF.Core.StartStopWatch">
            <summary>
            Stop watch start/stop
            </summary>
        </member>
        <member name="F:YAF.Core.StartStopWatch._stopWatch">
            <summary>
            The _stop watch.
            </summary>
        </member>
        <member name="M:YAF.Core.StartStopWatch.#ctor(YAF.Types.Interfaces.IStopWatch)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.StartStopWatch"/> class.
            </summary>
            <param name="stopWatch">
            The stop watch.
            </param>
        </member>
        <member name="M:YAF.Core.StartStopWatch.Handle(YAF.Types.EventProxies.ForumPageInitEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="M:YAF.Core.StartStopWatch.Handle(YAF.Types.EventProxies.ForumPageUnloadEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.StartStopWatch.Order">
            <summary>
            Gets Order.
            </summary>
        </member>
        <member name="T:YAF.Core.StaticLockObject">
            <summary>
            The static lock object.
            </summary>
        </member>
        <member name="F:YAF.Core.StaticLockObject.LockObjectCount">
            <summary>
            The lock object count.
            </summary>
        </member>
        <member name="F:YAF.Core.StaticLockObject.LockCacheItems">
            <summary>
            The lock cache items.
            </summary>
        </member>
        <member name="M:YAF.Core.StaticLockObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.StaticLockObject"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.StaticLockObject.Get(System.String)">
            <summary>
            The get.
            </summary>
            <param name="originalKey">
            The key.
            </param>
            <returns>
            The get.
            </returns>
        </member>
        <member name="T:YAF.Core.UserHelper">
            <summary>
            The user helper.
            </summary>
        </member>
        <member name="M:YAF.Core.UserHelper.GetUserLanguageFile(System.Int32)">
            <summary>
            The get user language file.
            </summary>
            <param name="userId">
            </param>
            <returns>
            language file name. If null -- use default language
            </returns>
        </member>
        <member name="M:YAF.Core.UserHelper.GetUserThemeFile(System.Int32)">
            <summary>
            </summary>
            <param name="userId">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.RoleMembershipHelper">
            <summary>
            The role membership helper.
            </summary>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.AddUserToRole(System.String,System.String)">
            <summary>
            The add user to role.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="role">
            The role.
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.CreateForumUser(System.Web.Security.MembershipUser,System.Int32)">
            <summary>
            Creates the user in the YAF DB from the ASP.NET Membership user information.
              Also copies the Roles as groups into YAF DB for the current user
            </summary>
            <param name="user">
            Current Membership User
            </param>
            <param name="pageBoardID">
            Current BoardID
            </param>
            <returns>
            Returns the UserID of the user if everything was successful. Otherwise, null.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.CreateForumUser(System.Web.Security.MembershipUser,System.String,System.Int32)">
            <summary>
            Creates the user in the YAF DB from the ASP.NET Membership user information.
              Also copies the Roles as groups into YAF DB for the current user
            </summary>
            <param name="user">
            Current Membership User
            </param>
            <param name="displayName">
            The display Name.
            </param>
            <param name="pageBoardID">
            Current BoardID
            </param>
            <returns>
            Returns the UserID of the user if everything was successful. Otherwise, null.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.CreateRole(System.String)">
            <summary>
            The create role.
            </summary>
            <param name="roleName">
            The role name.
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.DeleteRole(System.String,System.Boolean)">
            <summary>
            The delete role.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <param name="throwOnPopulatedRole">
            The throw on populated role.
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.DidCreateForumUser(System.Web.Security.MembershipUser,System.Int32)">
            <summary>
            The did create forum user.
            </summary>
            <param name="user">
            </param>
            <param name="pageBoardID">
            </param>
            <returns>
            The did create forum user.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.GetAllRoles">
            <summary>
            The get all roles.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.GetRolesForUser(System.String)">
            <summary>
            The get roles for user.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.GroupInGroupTable(System.String,System.Data.DataTable)">
            <summary>
            The group in group table.
            </summary>
            <param name="groupName">
            The group name.
            </param>
            <param name="groupTable">
            The group table.
            </param>
            <returns>
            The group in group table.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.IsUserInRole(System.String,System.String)">
            <summary>
            The is user in role.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="role">
            The role.
            </param>
            <returns>
            The is user in role.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.RemoveUserFromRole(System.String,System.String)">
            <summary>
            The remove user from role.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="role">
            The role.
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.RoleExists(System.String)">
            <summary>
            The role exists.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <returns>
            The role exists.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.RoleInRoleArray(System.String,System.String[])">
            <summary>
            The role in role array.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <param name="roleArray">
            The role array.
            </param>
            <returns>
            The role in role array.
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.SetupUserRoles(System.Int32,System.String)">
            <summary>
            Sets up the user roles from the "start" settings for a given group/role
            </summary>
            <param name="pageBoardID">
            Current BoardID
            </param>
            <param name="userName">
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.SyncAllMembershipUsers(System.Int32)">
            <summary>
            Goes through every membership user and manually "syncs" them to the forum.
              Best for an existing membership structure -- will migrate all users at once 
              rather then one at a time...
            </summary>
            <param name="pageBoardId">
            The page Board Id.
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.SyncRoles(System.Int32)">
            <summary>
            Syncs the ASP.NET roles with YAF group based on YAF (not bi-directional)
            </summary>
            <param name="pageBoardID">
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.SyncUsers(System.Int32)">
            <summary>
            Takes all YAF users and creates them in the Membership Provider
            </summary>
            <param name="pageBoardID">
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.UpdateForumUser(System.Web.Security.MembershipUser,System.Int32)">
            <summary>
            Updates the information in the YAF DB from the ASP.NET Membership user information.
              Called once per session for a user to sync up the data
            </summary>
            <param name="user">
            Current Membership User
            </param>
            <param name="pageBoardID">
            Current BoardID
            </param>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.MigrateCreateUser(System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipUser@)">
            <summary>
            The migrate create user.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="question">
            The question.
            </param>
            <param name="answer">
            The answer.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="user">
            The user.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.RoleMembershipHelper.MigrateUsersFromDataTable(System.Int32,System.Boolean,System.Data.DataTable)">
            <summary>
            The migrate users from <paramref name="dataTable"/>.
            </summary>
            <param name="pageBoardID">
            The page board id.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="dataTable">
            The dataTable.
            </param>
        </member>
        <member name="T:YAF.Core.Tasks.MigrateUsersTask">
            <summary>
            Run when we want to do migration of users in the background...
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.MigrateUsersTask._taskName">
            <summary>
              The _task name.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.MigrateUsersTask.Start(System.Int32)">
            <summary>
            The start.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <returns>
            The start.
            </returns>
        </member>
        <member name="M:YAF.Core.Tasks.MigrateUsersTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.MigrateUsersTask.TaskName">
            <summary>
              Gets TaskName.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.MailSendTask">
            <summary>
            Sends Email in the background.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.MailSendTask.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.Tasks.MailSendTask"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.MailSendTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.MailSendTask.SendMailThreaded">
            <summary>
              The _send mail threaded.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.ICriticalStartupService">
            <summary>
            The i critical startup service.
            </summary>
        </member>
        <member name="T:YAF.Core.Syndication.SyndicationItemExtensions">
            <summary>
            The syndication item extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.Syndication.SyndicationItemExtensions.AddSyndicationItem(System.Collections.Generic.List{System.ServiceModel.Syndication.SyndicationItem},System.String,System.String,System.String,System.String,System.String,System.DateTime,YAF.Core.Syndication.YafSyndicationFeed,System.Collections.Generic.List{System.ServiceModel.Syndication.SyndicationLink})">
            <summary>
            The add syndication item.
            </summary>
            <param name="currentList">
            The current list.
            </param>
            <param name="title">
            The title.
            </param>
            <param name="content">
            The content.
            </param>
            <param name="summary">
            The summary.
            </param>
            <param name="link">
            The alternate link.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="posted">
            The posted.
            </param>
        </member>
        <member name="M:YAF.Core.Syndication.SyndicationItemExtensions.AddSyndicationItem(System.Collections.Generic.List{System.ServiceModel.Syndication.SyndicationItem},System.String,System.String,System.String,System.String,System.String,System.DateTime,YAF.Core.Syndication.YafSyndicationFeed)">
            <summary>
            The add syndication item.
            </summary>
            <param name="currentList">
            The current list.
            </param>
            <param name="title">
            The title.
            </param>
            <param name="content">
            The content.
            </param>
            <param name="summary">
            The summary.
            </param>
            <param name="link">
            The alternate link.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="posted">
            The posted.
            </param>
        </member>
        <member name="M:YAF.Core.Syndication.SyndicationItemExtensions.NewSyndicationPerson(System.String,System.Int64)">
            <summary>
            Add a new syndication person.
            </summary>
            <param name="userEmail">The email.</param>
            <param name="userId">The user Id.</param>
            <returns>The SyndicationPerson.</returns>
        </member>
        <member name="M:YAF.Core.Syndication.SyndicationItemExtensions.AddSyndicationItem(System.Collections.Generic.List{System.ServiceModel.Syndication.SyndicationItem},System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            The add syndication item.
            </summary>
            <param name="currentList">
            The current list.
            </param>
            <param name="title">
            The title.
            </param>
            <param name="content">
            The content.
            </param>
            <param name="link">
            The link.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="posted">
            The posted.
            </param>
        </member>
        <member name="T:YAF.Core.CurrentTaskModuleProvider">
            <summary>
            The current task module provider.
            </summary>
        </member>
        <member name="F:YAF.Core.CurrentTaskModuleProvider._httpApplicationState">
            <summary>
            The _http application state.
            </summary>
        </member>
        <member name="M:YAF.Core.CurrentTaskModuleProvider.#ctor(System.Web.HttpApplicationStateBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.CurrentTaskModuleProvider"/> class.
            </summary>
            <param name="httpApplicationState">
            The http application state.
            </param>
        </member>
        <member name="P:YAF.Core.CurrentTaskModuleProvider.Instance">
            <summary>
              The create.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.FireEvent`1">
            <summary>
            The event converter.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:YAF.Core.FireEvent`1.Handle(`0)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="E:YAF.Core.FireEvent`1.HandleEvent">
            <summary>
            Handle the event with this delegate
            </summary>
        </member>
        <member name="P:YAF.Core.FireEvent`1.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="T:YAF.Core.YafLoadBoardSettings">
            <summary>
            The yaf load board settings.
            </summary>
        </member>
        <member name="M:YAF.Core.YafLoadBoardSettings.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafLoadBoardSettings"/> class.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <exception cref="T:System.Exception">
            </exception>
            <exception cref="T:YAF.Core.EmptyBoardSettingException"><c>EmptyBoardSettingException</c>.</exception>
        </member>
        <member name="M:YAF.Core.YafLoadBoardSettings.SaveRegistry">
            <summary>
            Saves the whole setting registry to the database.
            </summary>
        </member>
        <member name="M:YAF.Core.YafLoadBoardSettings.LoadBoardSettingsFromDB">
            <summary>
            The load board settings from db.
            </summary>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Core.YafLoadBoardSettings.SetupLegacyBoardSettings(System.Data.DataRow)">
            <summary>
            The setup legacy board settings.
            </summary>
            <param name="board">
            The board.
            </param>
        </member>
        <member name="T:YAF.Core.BBCode.ProcessReplaceRulesProvider">
            <summary>
            Gets an instance of replace rules and uses
              caching if possible.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ProcessReplaceRulesProvider._injectServices">
            <summary>
              The _inject services.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ProcessReplaceRulesProvider._objectStore">
            <summary>
            The _object store.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ProcessReplaceRulesProvider._uniqueFlags">
            <summary>
              The _unique flags.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ProcessReplaceRulesProvider.#ctor(YAF.Types.Interfaces.IObjectStore,YAF.Types.Interfaces.IServiceLocator,YAF.Types.Interfaces.IInjectServices,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ProcessReplaceRulesProvider"/> class.
            </summary>
            <param name="objectStore">
            </param>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="injectServices">
            The inject services.
            </param>
            <param name="uniqueFlags">
            The unique Flags.
            </param>
        </member>
        <member name="P:YAF.Core.BBCode.ProcessReplaceRulesProvider.Instance">
            <summary>
              The Instance of this provider.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Core.BBCode.ProcessReplaceRulesProvider.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.HighLighter">
            <summary>
            The high lighter.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.HighLighter.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.BBCode.HighLighter"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.HighLighter.ColorText(System.String,System.String,System.String)">
            <summary>
            Colors the text.
            </summary>
            <param name="tmpCode">The tmp code.</param>
            <param name="language">The language.</param>
            <param name="highlight">The highlight.</param>
            <returns>
            The color text.
            </returns>
        </member>
        <member name="P:YAF.Core.BBCode.HighLighter.ReplaceEnter">
            <summary>
              Gets or sets a value indicating whether ReplaceEnter.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.Twitter.OAuthBase">
            <summary>
            Oauth implementation by shannon whitley
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.HMACSHA1SignatureType">
            <summary>
            The hmacsh a 1 signature type.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthCallbackKey">
            <summary>
            The o auth callback key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthConsumerKeyKey">
            <summary>
            The o auth consumer key key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthNonceKey">
            <summary>
            The o auth nonce key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthParameterPrefix">
            <summary>
            The o auth parameter prefix.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthSignatureKey">
            <summary>
            The o auth signature key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthSignatureMethodKey">
            <summary>
            The o auth signature method key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthTimestampKey">
            <summary>
            The o auth timestamp key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthTokenKey">
            <summary>
            The o auth token key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthTokenSecretKey">
            <summary>
            The o auth token secret key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthVerifierKey">
            <summary>
            The o auth verifier key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthVersion">
            <summary>
            The o auth version.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.OAuthVersionKey">
            <summary>
            The o auth version key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.PlainTextSignatureType">
            <summary>
            The plain text signature type.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.RSASHA1SignatureType">
            <summary>
            The rsash a 1 signature type.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.UnreservedChars">
            <summary>
            The unreserved chars.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.random">
            <summary>
            The random.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GenerateNonce">
            <summary>
            Generate a nonce
            </summary>
            <returns>
            The generate nonce.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            Generates a signature using the HMAC-SHA1 algorithm
            </summary>
            <param name="url">
            The full url that needs to be signed including its non OAuth url parameters
            </param>
            <param name="consumerKey">
            The consumer key
            </param>
            <param name="consumerSecret">
            The consumer seceret
            </param>
            <param name="token">
            The token, if available. If not available pass null or an empty string
            </param>
            <param name="tokenSecret">
            The token secret, if available. If not available pass null or an empty string
            </param>
            <param name="callBackUrl">
            The call Back Url.
            </param>
            <param name="httpMethod">
            The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)
            </param>
            <param name="timeStamp">
            The time Stamp.
            </param>
            <param name="nonce">
            The nonce.
            </param>
            <param name="pin">
            The PIN.
            </param>
            <param name="normalizedUrl">
            The normalized Url.
            </param>
            <param name="normalizedRequestParameters">
            The normalized Request Parameters.
            </param>
            <returns>
            A base64 string of the hash value
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,YAF.Core.Services.Twitter.OAuthBase.SignatureTypes,System.String@,System.String@)">
            <summary>
            Generates a signature using the specified signatureType
            </summary>
            <param name="url">
            The full url that needs to be signed including its non OAuth url parameters
            </param>
            <param name="consumerKey">
            The consumer key
            </param>
            <param name="consumerSecret">
            The consumer seceret
            </param>
            <param name="token">
            The token, if available. If not available pass null or an empty string
            </param>
            <param name="tokenSecret">
            The token secret, if available. If not available pass null or an empty string
            </param>
            <param name="callBackUrl">
            The call Back Url.
            </param>
            <param name="httpMethod">
            The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)
            </param>
            <param name="timeStamp">
            The time Stamp.
            </param>
            <param name="nonce">
            The nonce.
            </param>
            <param name="pin">
            The PIN.
            </param>
            <param name="signatureType">
            The type of signature to use
            </param>
            <param name="normalizedUrl">
            The normalized Url.
            </param>
            <param name="normalizedRequestParameters">
            The normalized Request Parameters.
            </param>
            <returns>
            A base64 string of the hash value
            </returns>
            <exception cref="T:System.ArgumentException">Unknown signature type</exception>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GenerateSignatureBase(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            Generate the signature base that is used to produce the signature
            </summary>
            <param name="url">
            The full url that needs to be signed including its non OAuth url parameters
            </param>
            <param name="consumerKey">
            The consumer key
            </param>
            <param name="token">
            The token, if available. If not available pass null or an empty string
            </param>
            <param name="tokenSecret">
            The token secret, if available. If not available pass null or an empty string
            </param>
            <param name="callBackUrl">
            The call Back Url.
            </param>
            <param name="httpMethod">
            The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)
            </param>
            <param name="timeStamp">
            The time Stamp.
            </param>
            <param name="nonce">
            The nonce.
            </param>
            <param name="pin">
            The PIN.
            </param>
            <param name="signatureType">
            The signature type. To use the default values use <see cref="T:YAF.Core.Services.Twitter.OAuthBase.SignatureTypes">OAuthBase.SignatureTypes</see>.
            </param>
            <param name="normalizedUrl">
            The normalized Url.
            </param>
            <param name="normalizedRequestParameters">
            The normalized Request Parameters.
            </param>
            <returns>
            The signature base
            </returns>
            <exception cref="T:System.ArgumentNullException">ConsumerKey Not found</exception>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GenerateSignatureUsingHash(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Generate the signature value based on the given signature base and hash algorithm
            </summary>
            <param name="signatureBase">
            The signature based as produced by the GenerateSignatureBase method or by any other means
            </param>
            <param name="hash">
            The hash algorithm used to perform the hashing. If the hashing algorithm requires initialization or a key it should be set prior to calling this method
            </param>
            <returns>
            A base64 string of the hash value
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GenerateTimeStamp">
            <summary>
            Generates timestamp for the signature
            </summary>
            <returns>
            The generate time stamp.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.NormalizeRequestParameters(System.Collections.Generic.IList{YAF.Core.Services.Twitter.OAuthBase.QueryParameter})">
            <summary>
            Normalizes the request parameters according to the spec
            </summary>
            <param name="parameters">
            The list of parameters already sorted
            </param>
            <returns>
            a string representing the normalized parameters
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.UrlEncode(System.String)">
            <summary>
            This is a different Url Encode implementation since the default .NET one outputs the percent encoding in lower case.
              While this is not a problem with the percent encoding spec, it is used in upper case throughout OAuth
            </summary>
            <param name="value">
            The value to Url encode
            </param>
            <returns>
            Returns a Url encoded string
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.ComputeHash(System.Security.Cryptography.HashAlgorithm,System.String)">
            <summary>
            Helper function to compute a hash value
            </summary>
            <param name="hashAlgorithm">
            The hashing algoirhtm used. If that algorithm needs some initialization, like HMAC and its derivatives, they should be initialized prior to passing it to this function
            </param>
            <param name="data">
            The data to hash
            </param>
            <returns>
            a Base64 string of the hash value
            </returns>
            <exception cref="T:System.ArgumentNullException">hash Algorithm</exception>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.GetQueryParameters(System.String)">
            <summary>
            Internal function to cut out all non oauth query string parameters (all parameters not begining with "oauth_")
            </summary>
            <param name="parameters">
            The query string part of the Url
            </param>
            <returns>
            A list of QueryParameter each containing the parameter name and value
            </returns>
        </member>
        <member name="T:YAF.Core.Services.Twitter.OAuthBase.SignatureTypes">
            <summary>
            Provides a predefined set of algorithms that are supported officially by the protocol
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.SignatureTypes.HMACSHA1">
            <summary>
            The hmacsh a 1.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.SignatureTypes.PLAINTEXT">
            <summary>
            The plaintext.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.SignatureTypes.RSASHA1">
            <summary>
            The rsash a 1.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.Twitter.OAuthBase.QueryParameter">
            <summary>
            Provides an internal structure to sort the query parameter
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.QueryParameter.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthBase.QueryParameter.value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.QueryParameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.Twitter.OAuthBase.QueryParameter"/> class.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthBase.QueryParameter.Name">
            <summary>
            Gets Name.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthBase.QueryParameter.Value">
            <summary>
            Gets Value.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.Twitter.OAuthBase.QueryParameterComparer">
            <summary>
            Comparer class used to perform the sorting of the query parameters
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthBase.QueryParameterComparer.Compare(YAF.Core.Services.Twitter.OAuthBase.QueryParameter,YAF.Core.Services.Twitter.OAuthBase.QueryParameter)">
            <summary>
            Compares the specified x.
            </summary>
            <param name="x">
            The x.
            </param>
            <param name="y">
            The y.
            </param>
            <returns>
            The compare.
            </returns>
        </member>
        <member name="T:YAF.Core.Tasks.UserCleanUpTaskForumModule">
            <summary>
            The user clean up task module.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.UserCleanUpTaskForumModule.Init">
            <summary>
            The init.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.UserCleanUpTaskForumModule.Current_AfterInit(System.Object,System.EventArgs)">
            <summary>
            The current_ after init.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:YAF.Core.Tasks.BackgroundTaskExtensions">
            <summary>
            Extensions for the <see cref="T:YAF.Types.Interfaces.IBackgroundTask"/> interface
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.BackgroundTaskExtensions.IsStoppable(YAF.Types.Interfaces.IBackgroundTask)">
            <summary>
            Returns <see langword="true"/> if the background task can be stopped (is non-critical)
            </summary>
            <param name="backgroundTask"></param>
            <returns></returns>
        </member>
        <member name="T:YAF.Core.Services.YafAlbum">
            <summary>
            Album Service for the current user.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafAlbum.Album_Image_Delete(System.Object,System.Object,System.Int32,System.Object)">
            <summary>
            Deletes the specified album/image.
            </summary>
            <param name="upDir">
            The Upload dir.
            </param>
            <param name="albumID">
            The album id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="imageID">
            The image id.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafAlbum.ChangeAlbumTitle(System.Int32,System.String)">
            <summary>
            The change album title.
            </summary>
            <param name="albumID">
            The album id.
            </param>
            <param name="newTitle">
            The New title.
            </param>
            <returns>
            the return object.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafAlbum.ChangeImageCaption(System.Int32,System.String)">
            <summary>
            The change image caption.
            </summary>
            <param name="imageID">
            The Image id.
            </param>
            <param name="newCaption">
            The New caption.
            </param>
            <returns>
            the return object.
            </returns>
        </member>
        <member name="T:YAF.Core.Services.YafAlbum.ReturnClass">
            <summary>
            the HTML elements class.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafAlbum.ReturnClass.Id">
            <summary>
             Gets or sets the Album/Image's Id
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafAlbum.ReturnClass.NewTitle">
            <summary>
              Gets or sets the album/image's new Title/Caption
            </summary>
        </member>
        <member name="T:YAF.Core.Services.Comment">
            <summary>
            The comment.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Comment.ipAddress">
            <summary>
            The ip address.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Comment.serverEnvironmentVariables">
            <summary>
            The server environment variables.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Comment.userAgent">
            <summary>
            The user agent.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Comment.#ctor(System.Net.IPAddress,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.Comment"/> class.
            </summary>
            <param name="authorIpAddress">
            The author ip address.
            </param>
            <param name="authorUserAgent">
            The author user agent.
            </param>
        </member>
        <member name="P:YAF.Core.Services.Comment.Author">
            <summary>
              The name submitted with the comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.AuthorEmail">
            <summary>
              The email submitted with the comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.AuthorUrl">
            <summary>
              The url submitted if provided.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.CommentType">
            <summary>
              May be one of the following: {blank}, "comment", "trackback", "pingback", or a made-up value 
              like "registration".
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.Content">
            <summary>
              Content of the comment
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.IPAddress">
            <summary>
              IPAddress of the submitter
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.Permalink">
            <summary>
              Permanent location of the entry the comment was 
              submitted to.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.Referrer">
            <summary>
              The HTTP_REFERRER header value of the 
              originating comment.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.ServerEnvironmentVariables">
            <summary>
              Optional collection of various server environment variables.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Comment.UserAgent">
            <summary>
              User agent of the requester. (Required)
            </summary>
        </member>
        <member name="T:YAF.Core.LoggingModule">
            <summary>
            The logging module.
            </summary>
        </member>
        <member name="M:YAF.Core.LoggingModule.Configure(Autofac.Core.IComponentRegistry)">
            <summary>
            Apply the module to the component registry.
            </summary>
            <param name="componentRegistry">
            Component registry to apply configuration to.
            </param>
        </member>
        <member name="M:YAF.Core.LoggingModule.Load(Autofac.ContainerBuilder)">
            <summary>
            The load.
            </summary>
            <param name="builder">
            The builder.
            </param>
        </member>
        <member name="M:YAF.Core.LoggingModule.OnComponentPreparing(System.Object,Autofac.Core.PreparingEventArgs)">
            <summary>
            The on component preparing.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="P:YAF.Core.LoggingModule.ComponentRegistry">
            <summary>
              Gets or sets ComponentRegistry.
            </summary>
        </member>
        <member name="T:YAF.Core.PostDataHelperWrapper">
            <summary>
            The post data helper wrapper.
            </summary>
        </member>
        <member name="F:YAF.Core.PostDataHelperWrapper._forumFlags">
            <summary>
            The _forum flags.
            </summary>
        </member>
        <member name="F:YAF.Core.PostDataHelperWrapper._messageFlags">
            <summary>
            The _message flags.
            </summary>
        </member>
        <member name="F:YAF.Core.PostDataHelperWrapper._row">
            <summary>
            The current data row for this post.
            </summary>
        </member>
        <member name="F:YAF.Core.PostDataHelperWrapper._topicFlags">
            <summary>
            The _topic flags.
            </summary>
        </member>
        <member name="F:YAF.Core.PostDataHelperWrapper._userProfile">
            <summary>
            The _user profile.
            </summary>
        </member>
        <member name="M:YAF.Core.PostDataHelperWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.PostDataHelperWrapper"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.PostDataHelperWrapper.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.PostDataHelperWrapper"/> class.
            </summary>
            <param name="dataRow">
            The data row.
            </param>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.DataRow">
            <summary>
            Gets or sets DataRow.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.UserProfile">
            <summary>
            Gets UserProfile.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.UserId">
            <summary>
            Gets UserId.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.MessageId">
            <summary>
            Gets MessageId.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.IsLocked">
            <summary>
            IsLocked flag should only be used for "ghost" posts such as the
            Sponser post that isn't really there.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.IsSponserMessage">
            <summary>
            Gets a value indicating whether IsSponserMessage.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.CanThankPost">
            <summary>
            Gets a value indicating whether CanThankPost.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.CanEditPost">
            <summary>
            Gets a value indicating whether CanEditPost.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.PostLocked">
            <summary>
            Gets a value indicating whether PostLocked.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.PostDeleted">
            <summary>
            Gets a value indicating whether PostDeleted.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.CanAttach">
            <summary>
            Gets a value indicating whether CanAttach.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.CanDeletePost">
            <summary>
            Gets a value indicating whether CanDeletePost.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.CanUnDeletePost">
            <summary>
            Gets a value indicating whether CanUnDeletePost.
            </summary>
        </member>
        <member name="P:YAF.Core.PostDataHelperWrapper.CanReply">
            <summary>
            Gets a value indicating whether CanReply.
            </summary>
        </member>
        <member name="T:YAF.Core.IHaveComponentRegistryExtensions">
            <summary>
            The i have component registry extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.IsNotRegistered``1(YAF.Core.IHaveComponentRegistry)">
            <summary>
            Is not registered in the component registry.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <typeparam name="TRegistered">
            </typeparam>
            <returns>
            The is registered.
            </returns>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.IsNotRegistered(YAF.Core.IHaveComponentRegistry,System.Type)">
            <summary>
            Is not registered in the component registry.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <param name="registeredType"></param>
            <returns>
            The is registered.
            </returns>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.IsRegistered(YAF.Core.IHaveComponentRegistry,System.Type)">
            <summary>
            The is registered.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <param name="registeredType"></param>
            <returns>
            The is registered.
            </returns>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.IsRegistered``1(YAF.Core.IHaveComponentRegistry)">
            <summary>
            The is registered.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <typeparam name="TRegistered">
            </typeparam>
            <returns>
            The is registered.
            </returns>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.IsNotRegistered``1(YAF.Core.IHaveComponentRegistry,System.String)">
            <summary>
            Is not registered in the component registry.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <typeparam name="TRegistered">
            </typeparam>
            <returns>
            The is registered.
            </returns>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.IsRegistered``1(YAF.Core.IHaveComponentRegistry,System.String)">
            <summary>
            The is registered.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <typeparam name="TRegistered">
            </typeparam>
            <returns>
            The is registered.
            </returns>
        </member>
        <member name="M:YAF.Core.IHaveComponentRegistryExtensions.UpdateRegistry(YAF.Core.IHaveComponentRegistry,Autofac.ContainerBuilder)">
            <summary>
            The update.
            </summary>
            <param name="haveComponentRegistry">
            The have component registry.
            </param>
            <param name="containerBuilder">
            The container builder.
            </param>
        </member>
        <member name="T:YAF.Core.HttpApplicationStateBaseExtensions">
            <summary>
            The http application state base extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.HttpApplicationStateBaseExtensions.GetOrSet``1(System.Web.HttpApplicationStateBase,System.String,System.Func{``0})">
            <summary>
            The get or set.
            </summary>
            <param name="httpApplicationState">
            The http application state.
            </param>
            <param name="key">
            The key.
            </param>
            <param name="getValue">
            The get value.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.HttpApplicationStateBaseExtensions.Set``1(System.Web.HttpApplicationStateBase,System.String,``0)">
            <summary>
            The set.
            </summary>
            <param name="httpApplicationState">
            The http application state.
            </param>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule">
            <summary>
            Not regular expression, just a simple replace
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule._find">
            <summary>
              The _find.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule._replace">
            <summary>
              The _replace.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule"/> class.
            </summary>
            <param name="find">
            The find.
            </param>
            <param name="replace">
            The replace.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
        </member>
        <member name="P:YAF.Core.BBCode.ReplaceRules.SimpleReplaceRule.RuleDescription">
            <summary>
              Gets RuleDescription.
            </summary>
        </member>
        <member name="T:YAF.Core.LoadPageFromDatabase">
            <summary>
            The load page from database.
            </summary>
        </member>
        <member name="M:YAF.Core.LoadPageFromDatabase.#ctor(YAF.Types.Interfaces.IServiceLocator,YAF.Types.Interfaces.ILogger,YAF.Types.Interfaces.IDataCache)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.LoadPageFromDatabase"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="legacyDb">
            The legacy db.
            </param>
        </member>
        <member name="M:YAF.Core.LoadPageFromDatabase.Handle(YAF.Types.EventProxies.InitPageLoadEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
            <exception cref="T:System.ApplicationException">Failed to find guest user.</exception>
        </member>
        <member name="P:YAF.Core.LoadPageFromDatabase.DataCache">
            <summary>
            Gets or sets DataCache.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageFromDatabase.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageFromDatabase.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.YafModuleScanner">
            <summary>
            The module scanner
            </summary>
        </member>
        <member name="M:YAF.Core.YafModuleScanner.GetModules(System.String)">
            <summary>
            The get modules.
            </summary>
            <param name="pattern">
            The pattern.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.YafModuleScanner.CleanPath(System.String)">
            <summary>
            The clean path.
            </summary>
            <param name="path">
            The path.
            </param>
            <returns>
            The clean path.
            </returns>
        </member>
        <member name="M:YAF.Core.YafModuleScanner.GetAppBaseDirectory">
            <summary>
            The get app base directory.
            </summary>
            <returns>
            The get app base directory.
            </returns>
        </member>
        <member name="M:YAF.Core.YafModuleScanner.GetMatchingFiles(System.String)">
            <summary>
            The get matching files.
            </summary>
            <param name="pattern">
            The pattern.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.YafModuleScanner.GetValidateAssemblies(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The load and validate assemblies.
            </summary>
            <param name="filenames">
            The filenames.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.Tasks.ForumDeleteTask">
            <summary>
            The forum delete task.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.ForumDeleteTask._TaskName">
            <summary>
            The _task name.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.ForumDeleteTask.Start(System.Int32,System.Int32)">
            <summary>
            Creates the Forum Delete Task
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <param name="forumId">
            The forum id.
            </param>
            <returns>
            Returns if Task was Successfull
            </returns>
        </member>
        <member name="M:YAF.Core.Tasks.ForumDeleteTask.Start(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the Forum Delete Task and moves the Messages to a new Forum
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <param name="forumOldId">
            The forum Old Id.
            </param>
            <param name="forumNewId">
            The Forum New Id.
            </param>
            <returns>
            Returns if Task was Successfull
            </returns>
        </member>
        <member name="M:YAF.Core.Tasks.ForumDeleteTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.ForumDeleteTask.TaskName">
            <summary>
            Gets TaskName.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.ForumDeleteTask.ForumId">
            <summary>
            Gets or sets ForumId.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.ForumDeleteTask.ForumNewId">
            <summary>
            Gets or sets Forum New Id.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.MIMEPart">
            <summary>
            The mime part.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.binaryData">
            <summary>
            The binary data.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.boundary">
            <summary>
            The boundary.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.charset">
            <summary>
            The charset.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.contentTransferEncoding">
            <summary>
            The content transfer encoding.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.contentType">
            <summary>
            The content type.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.embeddedPartList">
            <summary>
            The embedded part list.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.filename">
            <summary>
            The filename.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.MIMEPart.text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.BinaryData">
            <summary>
            Gets or sets BinaryData.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.Boundary">
            <summary>
            Gets or sets Boundary.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.ContentType">
            <summary>
            Gets or sets ContentType.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.ContentTransferEncoding">
            <summary>
            Gets or sets ContentTransferEncoding.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.Charset">
            <summary>
            Gets or sets Charset.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.Filename">
            <summary>
            Gets or sets Filename.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.Text">
            <summary>
            Gets or sets Text.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.MIMEPart.EmbeddedPartList">
            <summary>
            Gets or sets EmbeddedPartList.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.ArticleHeader">
            <summary>
            The article header.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._date">
            <summary>
            The _date.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._timeZoneOffset">
            <summary>
            The _timeZoneOffset to hold an article timezone offset to UTC in minutes.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._from">
            <summary>
            The _from.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._lineCount">
            <summary>
            The _line count.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._postingHost">
            <summary>
            The _posting host.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._referenceIds">
            <summary>
            The _reference ids.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._sender">
            <summary>
            The _sender.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleHeader._subject">
            <summary>
            The _subject.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.ReferenceIds">
            <summary>
            Gets or sets ReferenceIds.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.TimeZoneOffset">
            <summary>
            Gets or sets an Article Time Zone offset to UTC.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.Subject">
            <summary>
            Gets or sets Subject.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.Date">
            <summary>
            Gets or sets Date.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.From">
            <summary>
            Gets or sets From.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.Sender">
            <summary>
            Gets or sets Sender.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.PostingHost">
            <summary>
            Gets or sets PostingHost.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleHeader.LineCount">
            <summary>
            Gets or sets LineCount.
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.SyntaxHighlightedCodeRegexReplaceRule">
            <summary>
            Syntax Highlighted code block regular express replace
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ReplaceRules.SyntaxHighlightedCodeRegexReplaceRule._syntaxHighlighter">
            <summary>
              The _syntax highlighter.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SyntaxHighlightedCodeRegexReplaceRule.#ctor(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.SyntaxHighlightedCodeRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SyntaxHighlightedCodeRegexReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SyntaxHighlightedCodeRegexReplaceRule.GetInnerValue(System.String)">
            <summary>
            This just overrides how the inner value is handled
            </summary>
            <param name="innerValue">The inner value.</param>
            <returns>
            The get inner value.
            </returns>
        </member>
        <member name="T:YAF.Core.ForumPageRegistered">
            <summary>
            Summary description for ForumPageRegistered.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPageRegistered.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ForumPageRegistered"/> class. 
            Creates the Administration page.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumPageRegistered.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ForumPageRegistered"/> class.
            </summary>
            <param name="transPage">
            The trans page.
            </param>
        </member>
        <member name="T:YAF.Core.DefaultUserDisplayName">
            <summary>
            The default user display name.
            </summary>
        </member>
        <member name="M:YAF.Core.DefaultUserDisplayName.#ctor(YAF.Types.Interfaces.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.DefaultUserDisplayName"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.DefaultUserDisplayName.Clear(System.Int32)">
            <summary>
            Remove the item from collection
            </summary>
            <param name="userId">
            </param>
        </member>
        <member name="M:YAF.Core.DefaultUserDisplayName.Clear">
            <summary>
            Remove all the items from the collection
            </summary>
        </member>
        <member name="M:YAF.Core.DefaultUserDisplayName.Find(System.String)">
            <summary>
            The find.
            </summary>
            <param name="contains">
            The contains.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.DefaultUserDisplayName.GetId(System.String)">
            <summary>
            The get id.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.DefaultUserDisplayName.GetName(System.Int32)">
            <summary>
            The get.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <returns>
            The get.
            </returns>
        </member>
        <member name="P:YAF.Core.DefaultUserDisplayName.UserDisplayNameCollection">
            <summary>
              Gets UserDisplayNameCollection.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafStopWatch">
            <summary>
            The yaf stop watch.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.YafStopWatch._stopWatch">
            <summary>
            The _stop watch.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafStopWatch.Start">
            <summary>
            The start.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafStopWatch.Stop">
            <summary>
            The stop.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafStopWatch.Reset">
            <summary>
            The reset.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafStopWatch.Watch">
            <summary>
            Gets Watch.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafStopWatch.Duration">
            <summary>
            Gets Duration.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.CheckForSpam.IBlogSpamNet">
            <summary>
            The BlogSpamNet Interface
            </summary>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.IBlogSpamNet.classifyComment(YAF.Core.Services.CheckForSpam.TrainComment)">
            <summary>
            The classify comment.
            </summary>
            <param name="commentToTrain">
            The comment to train.
            </param>
            <returns>
            The classify comment.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.IBlogSpamNet.getStats(System.String)">
            <summary>
            The get stats.
            </summary>
            <param name="siteUrl">
            The site url.
            </param>
            <returns>
            Returns the Stats
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.IBlogSpamNet.testComment(YAF.Core.Services.CheckForSpam.BlogSpamComment)">
            <summary>
            The test comment.
            </summary>
            <param name="comment">
            The comment.
            </param>
            <returns>
            The test comment.
            </returns>
        </member>
        <member name="T:YAF.Core.CaptchaHelper">
            <summary>
            The captcha helper.
            </summary>
        </member>
        <member name="M:YAF.Core.CaptchaHelper.GetCaptchaString">
            <summary>
            Gets the CaptchaString using the BoardSettings
            </summary>
            <returns>
            The get captcha string.
            </returns>
        </member>
        <member name="M:YAF.Core.CaptchaHelper.GetCaptchaText(System.Web.HttpSessionStateBase,System.Web.Caching.Cache,System.Boolean)">
            <summary>
            The get captcha text.
            </summary>
            <param name="session">
            </param>
            <param name="cache">
            The cache.
            </param>
            <param name="forceNew">
            The force New.
            </param>
            <returns>
            The get captcha text.
            </returns>
        </member>
        <member name="M:YAF.Core.CaptchaHelper.IsValid(System.String)">
            <summary>
            The is valid.
            </summary>
            <param name="captchaText">
            The captcha text.
            </param>
            <returns>
            The is valid.
            </returns>
        </member>
        <member name="T:YAF.Core.ResourcesExtensions">
            <summary>
            The resources extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ResourcesExtensions.GetHoursOffset(YAF.Types.LanuageResourcesPageResource)">
            <summary>
            The get hours offset.
            </summary>
            <param name="lanuageResource">
            The resource.
            </param>
            <returns>
            The get hours offset.
            </returns>
        </member>
        <member name="T:YAF.Core.IReplaceBlocksExtensions">
            <summary>
            The i replace blocks extensions.
            </summary>
        </member>
        <member name="F:YAF.Core.IReplaceBlocksExtensions._options">
            <summary>
            The _options.
            </summary>
        </member>
        <member name="F:YAF.Core.IReplaceBlocksExtensions._regExHtml">
            <summary>
            The _reg ex html.
            </summary>
        </member>
        <member name="M:YAF.Core.IReplaceBlocksExtensions.ReplaceHtmlFromText(YAF.Types.Interfaces.IReplaceBlocks,System.String@)">
            <summary>
            Pull replacement blocks from the text
            </summary>
            <param name="replaceBlocks">
            The replace Blocks.
            </param>
            <param name="strText">
            The str Text.
            </param>
        </member>
        <member name="M:YAF.Core.IReplaceBlocksExtensions.ReplaceHtmlFromText(YAF.Types.Interfaces.IReplaceBlocks,System.Text.StringBuilder@)">
            <summary>
            The get replacements from text.
            </summary>
            <param name="replaceBlocks">
            The replace Blocks.
            </param>
            <param name="sb">
            The sb.
            </param>
        </member>
        <member name="T:YAF.Core.ITaskModuleManagerExtensions">
            <summary>
            The i task module manager extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ITaskModuleManagerExtensions.Start``1(YAF.Types.Interfaces.ITaskModuleManager,System.Func{``0})">
            <summary>
            The start.
            </summary>
            <param name="taskModuleManager">
            The task module manager.
            </param>
            <param name="createTask">
            The create task.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The start.
            </returns>
        </member>
        <member name="M:YAF.Core.ITaskModuleManagerExtensions.Start``1(YAF.Types.Interfaces.ITaskModuleManager,System.Object)">
            <summary>
            The start.
            </summary>
            <param name="taskModuleManager">
            The task module manager.
            </param>
            <param name="data">
            The data.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The start.
            </returns>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.PostTopicRegexReplaceRule">
            <summary>
            For the font size with replace
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.PostTopicRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.PostTopicRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.PostTopicRegexReplaceRule.ManageVariableValue(System.String,System.String,System.String)">
            <summary>
            The manage variable value.
            </summary>
            <param name="variableName">
            The variable name.
            </param>
            <param name="variableValue">
            The variable value.
            </param>
            <param name="handlingValue">
            The handling value.
            </param>
            <returns>
            The manage variable value.
            </returns>
        </member>
        <member name="T:YAF.Core.BBCode.ProcessReplaceRules">
            <summary>
            Provides a way to handle layers of replacements rules
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ProcessReplaceRules._rulesList">
            <summary>
              The _rules list.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ProcessReplaceRules._rulesLock">
            <summary>
              The _rules lock.
            </summary>
        </member>
        <member name="F:YAF.Core.BBCode.ProcessReplaceRules._needSort">
            <summary>
              The _need sort.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ProcessReplaceRules.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ProcessReplaceRules"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ProcessReplaceRules.Clone">
            <summary>
            This clone method is a Deep Clone -- including all data.
            </summary>
            <returns>
            The clone.
            </returns>
        </member>
        <member name="M:YAF.Core.BBCode.ProcessReplaceRules.AddRule(YAF.Types.Interfaces.IReplaceRule)">
            <summary>
            The add rule.
            </summary>
            <param name="newRule">
            The new rule.
            </param>
            <exception cref="T:System.ArgumentNullException">
            </exception>
        </member>
        <member name="M:YAF.Core.BBCode.ProcessReplaceRules.Process(System.String@)">
            <summary>
            The process.
            </summary>
            <param name="text">
            The text.
            </param>
        </member>
        <member name="P:YAF.Core.BBCode.ProcessReplaceRules.HasRules">
            <summary>
              Gets a value indicating whether any rules have been added.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.Twitter.OAuthTwitter">
            <summary>
            Twitter Oauth implementation by shannon whitley
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter.ACCESSTOKEN">
            <summary>
            The acces s_ token.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter.AUTHORIZE">
            <summary>
            The authorize.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter.REQUESTTOKEN">
            <summary>
            The reques t_ token.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._callBackUrl">
            <summary>
            The _call back url.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._consumerKey">
            <summary>
            The _consumer key.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._consumerSecret">
            <summary>
            The _consumer secret.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._oauthToken">
            <summary>
            The _oauth token.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._pin">
            <summary>
            The _pin.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._token">
            <summary>
            The _token.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter._tokenSecret">
            <summary>
            The _token secret.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthTwitter.AccessTokenGet(System.String,System.String)">
            <summary>
            Exchange the request token for an access token.
            </summary>
            <param name="authToken">
            The oauth_token is supplied by Twitter's authorization page following the callback.
            </param>
            <param name="pin">
            The PIN.
            </param>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthTwitter.AuthorizationLinkGet">
            <summary>
            Get the link to Twitter's authorization page for this application.
            </summary>
            <returns>
            The url with a valid request token, or a null string.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthTwitter.Reset">
            <summary>
            Resets the state of the oAuthTwitter object.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthTwitter.WebRequest(YAF.Core.Services.Twitter.OAuthTwitter.Method,System.String,System.String)">
            <summary>
            Web Request Wrapper
            </summary>
            <param name="method">
            Http Method
            </param>
            <param name="url">
            Full url to the web resource
            </param>
            <param name="postData">
            Data to post in querystring format
            </param>
            <returns>
            The web server response.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthTwitter.WebResponseGet(System.Net.HttpWebRequest)">
            <summary>
            Process the web response.
            </summary>
            <param name="webRequest">
            The request object.
            </param>
            <returns>
            The response data.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.OAuthTwitter.OAuthWebRequest(YAF.Core.Services.Twitter.OAuthTwitter.Method,System.String,System.String)">
            <summary>
            Submit a web request using oAuth.
            </summary>
            <param name="method">
            GET or POST
            </param>
            <param name="url">
            The full url, including the querystring.
            </param>
            <param name="postData">
            Data to post (querystring format)
            </param>
            <returns>
            The web server response.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.CallBackUrl">
            <summary>
              Gets or sets the call back URL.
            </summary>
            <value>
              The call back URL.
            </value>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.ConsumerKey">
            <summary>
              Gets or sets the Consumer Key
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.ConsumerSecret">
            <summary>
              Gets or sets the Consumer Secret Key
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.OAuthToken">
            <summary>
            Gets or sets OAuthToken.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.PIN">
            <summary>
            Gets or sets PIN.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.Token">
            <summary>
            Gets or sets Token.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.Twitter.OAuthTwitter.TokenSecret">
            <summary>
            Gets or sets TokenSecret.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.Twitter.OAuthTwitter.Method">
            <summary>
            The Http method.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter.Method.GET">
            <summary>
            The get.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.OAuthTwitter.Method.POST">
            <summary>
            The post.
            </summary>
        </member>
        <member name="T:YAF.Core.LoadPageRequestInformation">
            <summary>
            The load page request information.
            </summary>
        </member>
        <member name="M:YAF.Core.LoadPageRequestInformation.#ctor(YAF.Types.Interfaces.IServiceLocator,System.Web.HttpRequestBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.LoadPageRequestInformation"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="httpRequestBase">
            The http request base.
            </param>
        </member>
        <member name="M:YAF.Core.LoadPageRequestInformation.Handle(YAF.Types.EventProxies.InitPageLoadEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.LoadPageRequestInformation.HttpRequestBase">
            <summary>
            Gets or sets HttpRequestBase.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageRequestInformation.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageRequestInformation.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.UserCleanUpTask">
            <summary>
            Does some user clean up tasks such as unsuspending users...
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.UserCleanUpTask._taskName">
            <summary>
            The _task name.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.UserCleanUpTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Tasks.UserCleanUpTask"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.UserCleanUpTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.UserCleanUpTask.TaskName">
            <summary>
            Gets TaskName.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.MailSendingForumModule">
            <summary>
            The mail sending module.
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.MailSendingForumModule._keyName">
            <summary>
              The _key name.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.MailSendingForumModule.Init">
            <summary>
            The init.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.MailSendingForumModule.Current_AfterInit(System.Object,System.EventArgs)">
            <summary>
            The current_ after init.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:YAF.Core.Services.YafSession">
            <summary>
            All references to session should go into this class
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSession.#ctor(System.Web.HttpSessionStateBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.YafSession"/> class.
            </summary>
            <param name="sessionState">
            The session state.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSession.GetForumRead(System.Int32)">
            <summary>
            Gets the last time the forum was read.
            </summary>
            <param name="forumID">
            This is the ID of the forum you wish to get the last read date from.
            </param>
            <returns>
            A DateTime object of when the forum was last read.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafSession.GetTopicRead(System.Int32)">
            <summary>
            Returns the last time that the topicID was read.
            </summary>
            <param name="topicID">
            The topicID you wish to find the DateTime object for.
            </param>
            <returns>
            The DateTime object from the topicID.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafSession.SetForumRead(System.Int32,System.DateTime)">
            <summary>
            Sets the time that the forum was read.
            </summary>
            <param name="forumID">
            The forum ID that was read.
            </param>
            <param name="date">
            The DateTime you wish to set the read to.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSession.SetTopicRead(System.Int32,System.DateTime)">
            <summary>
            Sets the time that the <paramref name="topicID"/> was read.
            </summary>
            <param name="topicID">
            The topic ID that was read.
            </param>
            <param name="date">
            The DateTime you wish to set the read to.
            </param>
        </member>
        <member name="P:YAF.Core.Services.YafSession.UserTopicSince">
            <summary>
              Gets or sets UserTopicSince.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.TwitterToken">
            <summary>
            Gets or sets Twitter Token.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.TwitterTokenSecret">
            <summary>
            Gets or sets Twitter Token Secret.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.MultiQuoteIds">
            <summary>
            Gets or sets the multi quote ids.
            </summary>
            <value>
            The multi quote ids.
            </value>
        </member>
        <member name="P:YAF.Core.Services.YafSession.UnreadTopicSince">
            <summary>
              Gets or sets UnreadTopicSince.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.ActiveTopicSince">
            <summary>
              Gets or sets ActiveTopicSince.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.UnansweredTopicSince">
            <summary>
              Gets or sets UnansweredTopicSince.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.FavoriteTopicSince">
            <summary>
              Gets or sets FavoriteTopicSince.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.ForumRead">
            <summary>
              Gets or sets ForumRead.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.LastPendingBuddies">
            <summary>
              Gets or sets LastPm.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.LastPm">
            <summary>
              Gets or sets LastPm.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.LastPost">
            <summary>
              Gets or sets LastPost.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.LastVisit">
            <summary>
              Gets or sets LastVisit.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.PanelState">
            <summary>
              Gets PanelState.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.SearchData">
            <summary>
              Gets or sets SearchData.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.SessionState">
            <summary>
            Gets or sets SessionState.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.ShowList">
            <summary>
              Gets or sets ShowList.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.TopicRead">
            <summary>
              Gets or sets TopicRead.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.UnreadTopics">
            <summary>
            Gets or sets UnreadTopics.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.YafSession.UseMobileTheme">
            <summary>
              Gets or sets if the user wants to use the mobile theme.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.AkismetSpamClient">
            <summary>
            The akismet spam client.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.AkismetSpamClient.#ctor(System.String,System.Uri,YAF.Core.Services.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.AkismetSpamClient"/> class.
            </summary>
            <param name="apiKey">
            The api key.
            </param>
            <param name="blogUrl">
            The blog url.
            </param>
            <param name="httpClient">
            The http client.
            </param>
        </member>
        <member name="M:YAF.Core.Services.AkismetSpamClient.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.AkismetSpamClient"/> class.
            </summary>
            <param name="apiKey">
            The api key.
            </param>
            <param name="rootUrl">
            The root url.
            </param>
        </member>
        <member name="P:YAF.Core.Services.AkismetSpamClient.CheckUrlFormat">
            <summary>
            Gets CheckUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.AkismetSpamClient.SubmitHamUrlFormat">
            <summary>
            Gets SubmitHamUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.AkismetSpamClient.SubmitSpamUrlFormat">
            <summary>
            Gets SubmitSpamUrlFormat.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.AkismetSpamClient.SubmitVerifyKeyFormat">
            <summary>
            Gets SubmitVerifyKeyFormat.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.CurrentBoardId">
            <summary>
            The current board id.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.CurrentBoardId.BoardId">
            <summary>
              Gets BoardId.
            </summary>
        </member>
        <member name="T:YAF.Core.CurrentMembershipProvider">
            <summary>
            The current membership provider.
            </summary>
        </member>
        <member name="P:YAF.Core.CurrentMembershipProvider.Instance">
            <summary>
              The instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.IBBCodeExtensions">
            <summary>
            The ibb code extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.IBBCodeExtensions.AddSmiles(YAF.Types.Interfaces.IBBCode,System.String)">
            <summary>
            For backwards compatibility
            </summary>
            <param name="bbCode">
            The bb Code.
            </param>
            <param name="message">
            the message to add smiles to.
            </param>
            <returns>
            The add smiles.
            </returns>
        </member>
        <member name="M:YAF.Core.IBBCodeExtensions.CreateBBCodeRules(YAF.Types.Interfaces.IBBCode,YAF.Types.Interfaces.IProcessReplaceRules,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates the rules that convert <see cref="T:YAF.Core.BBCode.YafBBCode"/> to HTML
            </summary>
            <param name="ruleEngine">
            The rule Engine.
            </param>
            <param name="doFormatting">
            The do Formatting.
            </param>
            <param name="targetBlankOverride">
            The target Blank Override.
            </param>
            <param name="useNoFollow">
            The use No Follow.
            </param>
        </member>
        <member name="T:YAF.Core.Services.YafSingleSignOnUser">
            <summary>
            Single Sign On User Class to handle Twitter and Facebook Logins
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.GenerateTwitterLoginUrl(System.Boolean)">
            <summary>
            Generates the twitter login URL.
            </summary>
            <param name="generatePopUpUrl">if set to <c>true</c> [generate pop up URL].</param>
            <returns>
            Returns the login Url
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.LoginTwitterUser(System.Web.HttpRequest,System.String@)">
            <summary>
            Logins/Registers the twitter user.
            </summary>
            <param name="request">
            The page request.
            </param>
            <param name="message">
            The message.
            </param>
            <returns>
            Returns if the login was successfully or not.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.LoginFacebookUser(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            SSO Login From Facebook
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="first_name">
            The first name.
            </param>
            <param name="last_name">
            The last name.
            </param>
            <param name="link">
            The link.
            </param>
            <param name="username">
            The user name.
            </param>
            <param name="birthday">
            The birthday.
            </param>
            <param name="hometown">
            The hometown.
            </param>
            <param name="gender">
            The gender.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="timezone">
            The timezone.
            </param>
            <param name="locale">
            The locale.
            </param>
            <param name="remember">
            The remember.
            </param>
            <returns>
            Returns the Login Status
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.LoginTwitterSuccess(System.Boolean,YAF.Core.Services.Twitter.OAuthTwitter,System.Int32,System.Web.Security.MembershipUser)">
            <summary>
            Call the Events when the Twitter Login was Successfully
            </summary>
            <param name="newUser">
            The new user.
            </param>
            <param name="oAuth">
            The twitter oauth.
            </param>
            <param name="userId">
            The user id.
            </param>
            <param name="user">
            The user.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.SendRegistrationMessageToUser(System.Web.Security.MembershipUser,System.String,System.String,System.Int32,YAF.Core.Services.Twitter.OAuthTwitter)">
            <summary>
            Send an Private Message to the Newly Created User with
            his Account Info (Pass, Security Question and Answer)
            </summary>
            <param name="user">
            The user.
            </param>
            <param name="pass">
            The pass.
            </param>
            <param name="securityAnswer">
            The security answer.
            </param>
            <param name="userId">
            The user Id.
            </param>
            <param name="oAuth">
            The o Auth.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.SendRegistrationNotificationEmail(System.Web.Security.MembershipUser)">
            <summary>
            The send registration notification email.
            </summary>
            <param name="user">
            The user.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSingleSignOnUser.SendRegistrationNotificationToUser(System.Web.Security.MembershipUser,System.String,System.String)">
            <summary>
            Send an Email to the Newly Created User with
            his Account Info (Pass, Security Question and Answer)
            </summary>
            <param name="user">
            The user.
            </param>
            <param name="pass">
            The pass.
            </param>
            <param name="securityAnswer">
            The security answer.
            </param>
        </member>
        <member name="T:YAF.Core.MembershipUserExtensions">
            <summary>
            The membership user extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.MembershipUserExtensions.GetUserData(System.Web.Security.MembershipUser)">
            <summary>
            The get user data.
            </summary>
            <param name="membershipUser">
            The membership user.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.ForumEditor">
            <summary>
            Summary description for BaseForumEditor.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumEditor._baseDir">
            <summary>
              The _base dir.
            </summary>
        </member>
        <member name="F:YAF.Core.ForumEditor._options">
            <summary>
              The _options.
            </summary>
        </member>
        <member name="M:YAF.Core.ForumEditor.ResolveUrl(System.String)">
            <summary>
            The resolve url.
            </summary>
            <param name="relativeUrl">
            The relative url.
            </param>
            <returns>
            The resolve url.
            </returns>
        </member>
        <member name="M:YAF.Core.ForumEditor.AddEditorControl(System.Web.UI.Control)">
            <summary>
            The add editor control.
            </summary>
            <param name="editor">
            The editor.
            </param>
        </member>
        <member name="M:YAF.Core.ForumEditor.Replace(System.String,System.String,System.String)">
            <summary>
            The replace.
            </summary>
            <param name="txt">
            The txt.
            </param>
            <param name="match">
            The match.
            </param>
            <param name="replacement">
            The replacement.
            </param>
            <returns>
            The replace.
            </returns>
        </member>
        <member name="P:YAF.Core.ForumEditor.Active">
            <summary>
              Gets a value indicating whether Active.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.BaseDir">
            <summary>
              Sets BaseDir.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.Description">
            <summary>
              Gets Description.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.ModuleId">
            <summary>
              Gets ModuleId.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.StyleSheet">
            <summary>
              Gets or sets StyleSheet.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.Text">
            <summary>
              Gets or sets Text.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.UsesBBCode">
            <summary>
              Gets a value indicating whether UsesBBCode.
            </summary>
        </member>
        <member name="P:YAF.Core.ForumEditor.UsesHTML">
            <summary>
              Gets a value indicating whether UsesHTML.
            </summary>
        </member>
        <member name="T:YAF.Core.BaseUserControl">
            <summary>
            The base user control.
            </summary>
        </member>
        <member name="F:YAF.Core.BaseUserControl._localization">
            <summary>
            The _localization.
            </summary>
        </member>
        <member name="F:YAF.Core.BaseUserControl._logger">
            <summary>
            The _logger.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseUserControl.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Core.BaseUserControl"/> class. 
            </summary>
        </member>
        <member name="M:YAF.Core.BaseUserControl.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaiseInit">
            <summary>
            The raise init.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseUserControl.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaiseLoad">
            <summary>
            The raise load.
            </summary>
        </member>
        <member name="M:YAF.Core.BaseUserControl.YAF#Types#Interfaces#IRaiseControlLifeCycles#RaisePreRender">
            <summary>
            The raise pre render.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseUserControl.Localization">
            <summary>
            Gets Localization.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseUserControl.Logger">
            <summary>
              Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseUserControl.PageContext">
            <summary>
              Gets PageContext.
            </summary>
        </member>
        <member name="P:YAF.Core.BaseUserControl.ServiceLocator">
            <summary>
              Gets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.UserMembershipHelper">
            <summary>
            This is a stop-gap class to help with syncing operations
            with users/membership.
            </summary>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.ApproveAll">
            <summary>
            For the admin fuction: approve all users. Approves all
            users waiting for approval 
            </summary>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.ApproveUser(System.Int32)">
            <summary>
            The approve user.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            The approve user.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.ClearCacheForUserId(System.Int64)">
            <summary>
            Verifies that the the user no longer has a cache...
            </summary>
            <param name="userId">
            </param>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.DeleteAllUnapproved(System.DateTime)">
            <summary>
            The delete all unapproved.
            </summary>
            <param name="createdCutoff">
            The created cutoff.
            </param>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.DeleteUser(System.Int32)">
            <summary>
            The delete user.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            The delete user.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.FindUsersByEmail(System.String)">
            <summary>
            The find users by email.
            </summary>
            <param name="email">
            The email.
            </param>
            <returns>
            Returns the Collection of founded Users
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.FindUsersByName(System.String)">
            <summary>
            The find users by name.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            Returns the Collection of founded Users
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetAllUsers(System.Int32,System.Int32@,System.Int32)">
            <summary>
            The get all users.
            </summary>
            <param name="pageCount">
            The page count.
            </param>
            <param name="exitCount">
            The exit count.
            </param>
            <param name="userNumber">
            The user number.
            </param>
            <returns>
            Returns Collection of All Users
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetAllUsers">
            <summary>
            The get all users.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetMembershipUserById(System.Nullable{System.Int64})">
            <summary>
            The get membership user by id.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetMembershipUserById(System.Int64)">
            <summary>
            get the membership user from the userID
            </summary>
            <param name="userID">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetMembershipUserByKey(System.Object)">
            <summary>
            get the membership user from the providerUserKey
            </summary>
            <param name="providerUserKey">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetMembershipUserByName(System.String)">
            <summary>
            get the membership user from the userName
            </summary>
            <param name="userName">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetProviderUserKeyFromID(System.Int64)">
            <summary>
            Gets the user provider key from the UserID for a user
            </summary>
            <param name="userID">
            </param>
            <returns>
            The get provider user key from id.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUser">
            <summary>
            Method returns MembershipUser 
            </summary>
            <returns>
            Returns MembershipUser 
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUser(System.String)">
            <summary>
            Method returns MembershipUser
            </summary>
            <param name="username">
            </param>
            <returns>
            Returns MembershipUser
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUser(System.String,System.Boolean)">
            <summary>
            Method returns MembershipUser
            </summary>
            <param name="username">
            </param>
            <param name="updateOnlineStatus">
            </param>
            <returns>
            Returns MembershipUser
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUser(System.Object)">
            <summary>
            Method returns MembershipUser
            </summary>
            <param name="providerKey">
            </param>
            <returns>
            Returns MembershipUser
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.ApplicationName">
            <summary>
            Method returns Application Name 
            </summary>
            <returns>
            Returns Application Name 
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUser(System.Object,System.Boolean)">
            <summary>
            Method returns MembershipUser 
            </summary>
            <param name="providerKey">
            </param>
            <param name="updateOnlineStatus">
            </param>
            <returns>
            Returns MembershipUser
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUser(System.Boolean)">
            <summary>
            Method which returns MembershipUser
            </summary>
            <param name="updateOnlineStatus">
            </param>
            <returns>
            Returns MembershipUser
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUserIDFromProviderUserKey(System.Object)">
            <summary>
            Get the UserID from the ProviderUserKey
            </summary>
            <param name="providerUserKey">
            </param>
            <returns>
            The get user id from provider user key.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUserNameFromID(System.Int64)">
            <summary>
            Gets the user name from the UesrID
            </summary>
            <param name="userID">
            </param>
            <returns>
            The get user name from id.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetDisplayNameFromID(System.Int64)">
            <summary>
            Gets the user name from the UesrID
            </summary>
            <param name="userID">
            </param>
            <returns>
            The get user name from id.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUserRowForID(System.Int64,System.Boolean)">
            <summary>
            Helper function that gets user data from the DB (or cache)
            </summary>
            <param name="userID">
            </param>
            <param name="allowCached">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUserRowForID(System.Int32,System.Boolean)">
            <summary>
            The get user row for id.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="allowCached">
            The allow cached.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUserRowForID(System.Int64)">
            <summary>
            Default allows the user row to be cached (mostly used for Provider key and UserID which never change)
            </summary>
            <param name="userID">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.GetUserRowForID(System.Int32)">
            <summary>
            The get user row for id.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.IsGuestUser(System.Object)">
            <summary>
            Simply tells you if the userID passed is the Guest user
            for the current board
            </summary>
            <param name="userID">
            ID of user to lookup
            </param>
            <returns>
            true if the userid is a guest user
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.IsGuestUser(System.Int32)">
            <summary>
            Simply tells you if the userID passed is the Guest user
            for the current board
            </summary>
            <param name="userID">
            ID of user to lookup
            </param>
            <returns>
            true if the userid is a guest user
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.UpdateEmail(System.Int32,System.String)">
            <summary>
            Helper function to update a user's email address.
            Syncs with both the YAF DB and Membership Provider.
            </summary>
            <param name="userID">
            </param>
            <param name="newEmail">
            </param>
            <returns>
            The update email.
            </returns>
        </member>
        <member name="M:YAF.Core.UserMembershipHelper.UserExists(System.String,System.String)">
            <summary>
            Checks Membership Provider to see if a user
            with the username and email passed exists.
            </summary>
            <param name="userName">
            </param>
            <param name="email">
            </param>
            <returns>
            true if they exist
            </returns>
        </member>
        <member name="P:YAF.Core.UserMembershipHelper.GuestUserId">
            <summary>
            Gets the guest user id for the current board.
            </summary>
            <exception cref="T:YAF.Core.NoValidGuestUserForBoardException"><c>NoValidGuestUserForBoardException</c>.</exception>
        </member>
        <member name="P:YAF.Core.UserMembershipHelper.GuestUserName">
            <summary>
            Gets the Username of the Guest user for the current board.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafSendMail">
            <summary>
            Functions to send email via SMTP
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafSendMail.SendAll(System.Collections.Generic.IEnumerable{System.Net.Mail.MailMessage})">
            <summary>
            Sends all MailMessages via the SmtpClient. Doesn't handle any exceptions.
            </summary>
            <param name="messages">
            The messages.
            </param>
        </member>
        <member name="M:YAF.Core.Services.YafSendMail.SendAllIsolated(System.Collections.Generic.IEnumerable{System.Net.Mail.MailMessage},System.Action{System.Net.Mail.MailMessage,System.Exception})">
            <summary>
            The send all isolated.
            </summary>
            <param name="messages">
            The messages.
            </param>
            <param name="handleExceptionAction">
            The handle exception action.
            </param>
        </member>
        <member name="T:YAF.Core.Nntp.ArticleBody">
            <summary>
            The article body.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleBody._attachments">
            <summary>
            The _attachments.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleBody._isHtml">
            <summary>
            The _is html.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.ArticleBody._text">
            <summary>
            The _text.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleBody.IsHtml">
            <summary>
            Gets or sets a value indicating whether IsHtml.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleBody.Text">
            <summary>
            Gets or sets Text.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.ArticleBody.Attachments">
            <summary>
            Gets or sets Attachments.
            </summary>
        </member>
        <member name="T:YAF.Core.YafDbLogger">
            <summary>
            The yaf db logger.
            </summary>
        </member>
        <member name="M:YAF.Core.YafDbLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafDbLogger"/> class.
            </summary>
            <param name="logType">
            The log type.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Log(System.String,YAF.Types.Constants.EventLogTypes)">
            <summary>
            The log.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="logTypes">
            The log types.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Debug(System.String,System.Object[])">
            <summary>
            The debug.
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            The debug.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Error(System.String,System.Object[])">
            <summary>
            The error.
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            The error.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Fatal(System.String,System.Object[])">
            <summary>
            The fatal.
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Fatal(System.Exception,System.String,System.Object[])">
            <summary>
            The fatal.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Info(System.String,System.Object[])">
            <summary>
            The info.
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Info(System.Exception,System.String,System.Object[])">
            <summary>
            The info.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Trace(System.String,System.Object[])">
            <summary>
            The trace.
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            The trace.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Warn(System.String,System.Object[])">
            <summary>
            The warn.
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLogger.Warn(System.Exception,System.String,System.Object[])">
            <summary>
            The warn.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <param name="format">
            The format.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="P:YAF.Core.YafDbLogger.IsDebugEnabled">
            <summary>
              Gets a value indicating whether IsDebugEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.YafDbLogger.IsErrorEnabled">
            <summary>
              Gets a value indicating whether IsErrorEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.YafDbLogger.IsFatalEnabled">
            <summary>
              Gets a value indicating whether IsFatalEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.YafDbLogger.IsInfoEnabled">
            <summary>
              Gets a value indicating whether IsInfoEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.YafDbLogger.IsTraceEnabled">
            <summary>
              Gets a value indicating whether IsTraceEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.YafDbLogger.IsWarnEnabled">
            <summary>
              Gets a value indicating whether IsWarnEnabled.
            </summary>
        </member>
        <member name="P:YAF.Core.YafDbLogger.Type">
            <summary>
              Gets a value indicating the logging type.
            </summary>
        </member>
        <member name="T:YAF.Core.CantLoadThemeException">
            <summary>
            The cant load theme exception.
            </summary>
        </member>
        <member name="M:YAF.Core.CantLoadThemeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.CantLoadThemeException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="T:YAF.Core.CurrentHttpApplicationStateBaseProvider">
            <summary>
            The current http application provider.
            </summary>
        </member>
        <member name="F:YAF.Core.CurrentHttpApplicationStateBaseProvider._application">
            <summary>
            The _application.
            </summary>
        </member>
        <member name="P:YAF.Core.CurrentHttpApplicationStateBaseProvider.Instance">
            <summary>
              Gets or sets the Instance.
            </summary>
        </member>
        <member name="T:YAF.Core.BBCode.ReplaceRules.SingleRegexReplaceRule">
            <summary>
            For basic regex with no variables
            </summary>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SingleRegexReplaceRule.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.BBCode.ReplaceRules.SingleRegexReplaceRule"/> class.
            </summary>
            <param name="regExSearch">
            The reg ex search.
            </param>
            <param name="regExReplace">
            The reg ex replace.
            </param>
            <param name="regExOptions">
            The reg ex options.
            </param>
        </member>
        <member name="M:YAF.Core.BBCode.ReplaceRules.SingleRegexReplaceRule.Replace(System.String@,YAF.Types.Interfaces.IReplaceBlocks)">
            <summary>
            The replace.
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="replacement">
            The replacement.
            </param>
        </member>
        <member name="T:YAF.Core.RewriteUrlBuilder">
            <summary>
            The rewrite url builder.
            </summary>
        </member>
        <member name="F:YAF.Core.RewriteUrlBuilder._cacheSize">
            <summary>
            The cache size.
            </summary>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.BuildUrl(System.String)">
            <summary>
            The build url.
            </summary>
            <param name="url">
            The url.
            </param>
            <returns>
            The build url.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.HighRange(System.Int32)">
            <summary>
            The high range.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The high range.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.LowRange(System.Int32)">
            <summary>
            The low range.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The low range.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.CleanStringForURL(System.String)">
            <summary>
            The clean string for url.
            </summary>
            <param name="str">
            The str.
            </param>
            <returns>
            The clean string for url.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetCacheName(System.String,System.Int32)">
            <summary>
            The get cache name.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="id">
            The id.
            </param>
            <returns>
            The get cache name.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetCategoryName(System.Int32)">
            <summary>
            The get category name.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The get category name.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetDataRowFromCache(System.String,System.Int32)">
            <summary>
            The get data row from cache.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="id">
            The id.
            </param>
            <returns>
             Cached data Row
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetForumName(System.Int32)">
            <summary>
            The get forum name.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The get forum name.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetProfileName(System.Int32)">
            <summary>
            The get profile name.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The get profile name.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetTopicName(System.Int32)">
            <summary>
            The get topic name.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The get topic name.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.GetTopicNameFromMessage(System.Int32)">
            <summary>
            The get topic name from message.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The get topic name from message.
            </returns>
        </member>
        <member name="M:YAF.Core.RewriteUrlBuilder.SetupDataToCache(System.Data.DataTable@,System.String,System.Int32,System.String)">
            <summary>
            The setup data to cache.
            </summary>
            <param name="list">
            The list.
            </param>
            <param name="type">
            The type.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="primaryKey">
            The primary key.
            </param>
            <returns>
            The Data row
            </returns>
        </member>
        <member name="P:YAF.Core.RewriteUrlBuilder.CacheSize">
            <summary>
            Gets or sets CacheSize.
            </summary>
        </member>
        <member name="T:YAF.Core.Tasks.SyncMembershipUsersTask">
            <summary>
            Run when we want to do migration of users in the background...
            </summary>
        </member>
        <member name="F:YAF.Core.Tasks.SyncMembershipUsersTask._taskName">
            <summary>
              The _task name.
            </summary>
        </member>
        <member name="M:YAF.Core.Tasks.SyncMembershipUsersTask.Start(System.Int32)">
            <summary>
            The start.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <returns>
            The start.
            </returns>
        </member>
        <member name="M:YAF.Core.Tasks.SyncMembershipUsersTask.RunOnce">
            <summary>
            The run once.
            </summary>
        </member>
        <member name="P:YAF.Core.Tasks.SyncMembershipUsersTask.TaskName">
            <summary>
              Gets TaskName.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafThankYou">
            <summary>
            Yaf ThankYou Class to handle Thanks
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafThankYou.GetThanks(System.Int32)">
            <summary>
            This method returns a string containing the HTML code for
              showing the the post footer. the HTML content is the name of users
              who thanked the post and the date they thanked.
            </summary>
            <param name="messageId">
            The msg ID.
            </param>
            <returns>
            The get thanks.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafThankYou.CreateThankYou(System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates an instance of the thank you object from the current information.
            </summary>
            <param name="username">
            The Current Username
            </param>
            <param name="textTag">
            Button Text
            </param>
            <param name="titleTag">
            Button  Title
            </param>
            <param name="messageId">
            The message Id.
            </param>
            <returns>
            Returns ThankYou Info
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafThankYou.ThanksNumber(System.String,System.Int32)">
            <summary>
            This method returns a string which shows how many times users have
              thanked the message with the provided messageID. Returns an empty string.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="messageID">
            The Message ID.
            </param>
            <returns>
            The thanks number.
            </returns>
        </member>
        <member name="T:YAF.Core.Services.ThankYouInfo">
            <summary>
            Thank You Info
            </summary>
        </member>
        <member name="P:YAF.Core.Services.ThankYouInfo.Text">
            <summary>
            Gets or sets Text.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.ThankYouInfo.Title">
            <summary>
            Gets or sets Title.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.ThankYouInfo.MessageID">
            <summary>
            Gets or sets MessageID.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.ThankYouInfo.ThanksInfo">
            <summary>
            Gets or sets ThanksInfo.
            </summary>
        </member>
        <member name="P:YAF.Core.Services.ThankYouInfo.Thanks">
            <summary>
            Gets or sets Thanks.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.YafReputation">
            <summary>
            Class to Generate The Reputation Bar
            </summary>
        </member>
        <member name="M:YAF.Core.Services.YafReputation.CheckIfAllowReputationVoting(System.Object)">
            <summary>
            Checks if allow reputation voting.
            </summary>
            <param name="voteDateToCheck">The last vote date to check.</param>
            <returns>
            Returns if the Users is allowed to Vote
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafReputation.GenerateReputationBar(System.Int32,System.Int32)">
            <summary>
            Generate The Reputation Bar for the user
            </summary>
            <param name="points">
            The points.
            </param>
            <param name="userId">
            The user id.
            </param>
            <returns>
            Returns the Html String
            </returns>
        </member>
        <member name="M:YAF.Core.Services.YafReputation.GetReputationBarText(System.Single)">
            <summary>
            Gets the reputation bar text.
            </summary>
            <param name="percentage">The percentage.</param>
            <returns>Returns the Text for the Current Value</returns>
        </member>
        <member name="M:YAF.Core.Services.YafReputation.ConvertPointsToPercentage(System.Int32)">
            <summary>
            Converts the points to percentage.
            </summary>
            <param name="points">The points.</param>
            <returns>Returns the Percentage Value</returns>
        </member>
        <member name="T:YAF.Core.ScriptBuilderExtensions">
            <summary>
            the script builder extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.ScriptBuilderExtensions.CreateFunction(YAF.Types.Interfaces.IScriptBuilder,System.Boolean)">
            <summary>
            Creates a function statement. AddFunction is you want the function statement inserted into the Builder.
            </summary>
            <param name="scriptBuilder">
            The script builder.
            </param>
            <param name="addFunction">
            The add function.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptBuilderExtensions.CreateFunction(YAF.Types.Interfaces.IScriptBuilder)">
            <summary>
            Creates a function statement and adds it to the builder.
            </summary>
            <param name="scriptBuilder">
            The script builder.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptBuilderExtensions.CreateStatement(YAF.Types.Interfaces.IScriptBuilder,System.Boolean)">
            <summary>
            Creates a statement and optionally adds it to the builder.
            </summary>
            <param name="scriptBuilder">
            The script builder.
            </param>
            <param name="addStatement">
            The add statement.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.ScriptBuilderExtensions.CreateStatement(YAF.Types.Interfaces.IScriptBuilder)">
            <summary>
            Creates a statement and adds it to the builder.
            </summary>
            <param name="scriptBuilder">
            The script builder.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.YafDbLoggerProvider">
            <summary>
            The yaf db logger provider.
            </summary>
        </member>
        <member name="M:YAF.Core.YafDbLoggerProvider.#ctor(YAF.Types.Interfaces.IInjectServices)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.YafDbLoggerProvider"/> class.
            </summary>
            <param name="injectServices">
            The inject services.
            </param>
        </member>
        <member name="M:YAF.Core.YafDbLoggerProvider.Create(System.Type)">
            <summary>
            The create.
            </summary>
            <param name="type">
            The type.
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Core.YafDbLoggerProvider.InjectServices">
            <summary>
            Gets or sets InjectServices.
            </summary>
        </member>
        <member name="T:YAF.Core.MailMessageExtensions">
            <summary>
            The mail message extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.MailMessageExtensions.Populate(System.Net.Mail.MailMessage,System.Net.Mail.MailAddress,System.Net.Mail.MailAddress,System.String,System.String,System.String)">
            <summary>
            The populate.
            </summary>
            <param name="mailMessage">
            The mail message.
            </param>
            <param name="fromAddress">
            The from address.
            </param>
            <param name="toAddress">
            The to address.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="bodyText">
            The body text.
            </param>
            <param name="bodyHtml">
            The body html.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Core.MailMessageExtensions.Send(System.Net.Mail.MailMessage)">
            <summary>
            Creates a SmtpClient and sends a MailMessage.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="T:YAF.Core.BBCode.HighLightList">
            <summary>
            SyntaxHighlighter List of Supported Code Languages
            </summary>
        </member>
        <member name="P:YAF.Core.BBCode.HighLightList.BrushName">
            <summary>
              Gets or sets BrushName
            </summary>
        </member>
        <member name="P:YAF.Core.BBCode.HighLightList.BrushAlias">
            <summary>
              Gets or sets BrushAlias (User ID)
            </summary>
        </member>
        <member name="T:YAF.Core.ForumPageRenderedArgs">
            <summary>
            EventArgs class for the PageTitleSet event
            </summary>
        </member>
        <member name="T:YAF.Core.LoadPageLogBadAgent">
            <summary>
            The load page log bad agent.
            </summary>
        </member>
        <member name="M:YAF.Core.LoadPageLogBadAgent.#ctor(YAF.Types.Interfaces.IServiceLocator,YAF.Types.Interfaces.ILogger,System.Web.HttpRequestBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.LoadPageLogBadAgent"/> class.
            </summary>
            <param name="serviceLocator">
            The service locator.
            </param>
            <param name="logger">
            The logger.
            </param>
            <param name="httpRequestBase">
            The http request base.
            </param>
        </member>
        <member name="M:YAF.Core.LoadPageLogBadAgent.Handle(YAF.Types.EventProxies.InitPageLoadEvent)">
            <summary>
            The handle.
            </summary>
            <param name="event">
            The event.
            </param>
        </member>
        <member name="P:YAF.Core.LoadPageLogBadAgent.HttpRequestBase">
            <summary>
            Gets or sets HttpRequestBase.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageLogBadAgent.Logger">
            <summary>
            Gets or sets Logger.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageLogBadAgent.Order">
            <summary>
              Gets Order.
            </summary>
        </member>
        <member name="P:YAF.Core.LoadPageLogBadAgent.ServiceLocator">
            <summary>
              Gets or sets ServiceLocator.
            </summary>
        </member>
        <member name="T:YAF.Core.MobileThemeForumModule">
            <summary>
            The mobile theme module.
            </summary>
        </member>
        <member name="M:YAF.Core.MobileThemeForumModule.#ctor(YAF.Types.Interfaces.IYafSession,System.Web.HttpRequestBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.MobileThemeForumModule"/> class.
            </summary>
            <param name="yafSession">
            The yaf session.
            </param>
            <param name="httpRequestBase">
            The http request base.
            </param>
        </member>
        <member name="M:YAF.Core.MobileThemeForumModule.Init">
            <summary>
            The init.
            </summary>
        </member>
        <member name="M:YAF.Core.MobileThemeForumModule.Current_AfterInit(System.Object,System.EventArgs)">
            <summary>
            The current_ after init.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:YAF.Core.MobileThemeForumModule.UpdateUseMobileThemeFromQueryString">
            <summary>
            Updates the use mobile theme session variable from the query string.
            </summary>
        </member>
        <member name="P:YAF.Core.MobileThemeForumModule.HttpRequestBase">
            <summary>
            Gets or sets HttpRequestBase.
            </summary>
        </member>
        <member name="P:YAF.Core.MobileThemeForumModule.YafSession">
            <summary>
            Gets or sets YafSession.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.StartupInitializeDb">
            <summary>
            The yaf initialize db.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.StartupInitializeDb.RunService">
            <summary>
            The run service.
            </summary>
            <returns>
            The run service.
            </returns>
        </member>
        <member name="P:YAF.Core.Services.StartupInitializeDb.InitVarName">
            <summary>
              Gets InitVarName.
            </summary>
        </member>
        <member name="T:YAF.Core.ScriptFunctionContext">
            <summary>
            The script function context.
            </summary>
        </member>
        <member name="M:YAF.Core.ScriptFunctionContext.#ctor(YAF.Types.Interfaces.IScriptBuilder,YAF.Types.Interfaces.IScriptFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.ScriptFunctionContext"/> class.
            </summary>
            <param name="scriptBuilder">
            The script builder.
            </param>
            <param name="scriptFunction">
            The script function.
            </param>
        </member>
        <member name="P:YAF.Core.ScriptFunctionContext.ScriptBuilder">
            <summary>
            Gets or sets ScriptBuilder.
            </summary>
        </member>
        <member name="P:YAF.Core.ScriptFunctionContext.ScriptFunction">
            <summary>
            Gets or sets ScriptFunction.
            </summary>
        </member>
        <member name="P:YAF.Core.ScriptFunctionContext.ScriptStatement">
            <summary>
            Gets ScriptStatement.
            </summary>
        </member>
        <member name="T:YAF.Core.Services.CheckForSpam.BlogSpamNet">
            <summary>
            The blog spam.
            </summary>
        </member>
        <member name="F:YAF.Core.Services.CheckForSpam.BlogSpamNet._Url">
            <summary>
            The _url.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.CheckForSpam.BlogSpamNet"/> class.
            </summary>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.CheckForSpam.BlogSpamNet"/> class.
            </summary>
            <param name="url">
            The url.
            </param>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.ClassifyComment(System.String,System.Boolean)">
            <summary>
            Classify a Comment as SPAM true or false
            </summary>
            <param name="comment">
            The comment.
            </param>
            <param name="isSpam">
            The is spam.
            </param>
            <returns>
            The classify comment.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.GetStats(System.String)">
            <summary>
            Get stats for an Url
            </summary>
            <param name="siteUrl">
            The site url.
            </param>
            <returns>
            Returns the Stats
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.CommentIsSpam(YAF.Core.Services.CheckForSpam.BlogSpamComment,System.Boolean)">
            <summary>
            Test a Comment for SPAM
            </summary>
            <param name="comment">
            The comment.
            </param>
            <param name="ignoreInternalIp">
            Ignore Internal Ip
            </param>
            <returns>
            Returns if Comment is SPAM
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.TestComment(YAF.Core.Services.CheckForSpam.BlogSpamComment)">
            <summary>
            Test a Comment for SPAM
            </summary>
            <param name="comment">
            The comment.
            </param>
            <returns>
            The test comment.
            </returns>
        </member>
        <member name="M:YAF.Core.Services.CheckForSpam.BlogSpamNet.GetProxy">
            <summary>
            The get proxy.
            </summary>
            <returns>
            The Proxy
            </returns>
        </member>
        <member name="P:YAF.Core.Services.CheckForSpam.BlogSpamNet.Url">
            <summary>
            Gets or sets Url.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.OnRequestDelegate">
            <summary>
            The on request delegate.
            </summary>
            <param name="msg">
            The msg.
            </param>
        </member>
        <member name="T:YAF.Core.Nntp.YafNntp">
            <summary>
            The yaf nntp.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.YafNntp._applicationStateBase">
            <summary>
            The _application state base.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.YafNntp.#ctor(YAF.Types.Interfaces.ILogger,System.Web.HttpApplicationStateBase)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.YafNntp"/> class.
            </summary>
            <param name="logger">
            The logger.
            </param>
            <param name="applicationStateBase">
            The application state base.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.YafNntp.ReadArticles(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The read articles.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="lastUpdate">
            The n last update.
            </param>
            <param name="timeToRun">
            The n time to run.
            </param>
            <param name="createUsers">
            The b create users.
            </param>
            <returns>
            The read articles.
            </returns>
            <exception cref="T:YAF.Core.Nntp.NntpException"><c>NntpException</c>.</exception>
        </member>
        <member name="M:YAF.Core.Nntp.YafNntp.ReplaceBody(System.String)">
            <summary>
            The replace body.
            </summary>
            <param name="body">
            The body.
            </param>
            <returns>
            The replace body.
            </returns>
        </member>
        <member name="P:YAF.Core.Nntp.YafNntp.Logger">
            <summary>
            Gets or sets Logger.
            </summary>
        </member>
        <member name="T:YAF.Core.Nntp.NntpException">
            <summary>
            The nntp exception.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpException._errorCode">
            <summary>
            The _error code.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpException._message">
            <summary>
            The _message.
            </summary>
        </member>
        <member name="F:YAF.Core.Nntp.NntpException._request">
            <summary>
            The _request.
            </summary>
        </member>
        <member name="M:YAF.Core.Nntp.NntpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.NntpException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.NntpException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.NntpException"/> class.
            </summary>
            <param name="errorCode">
            The error code.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.NntpException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.NntpException"/> class.
            </summary>
            <param name="errorCode">
            The error code.
            </param>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.NntpException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Nntp.NntpException"/> class.
            </summary>
            <param name="response">
            The response.
            </param>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.NntpException.BuildNntpException(System.Int32,System.String)">
            <summary>
            The build nntp exception.
            </summary>
            <param name="errorCode">
            The error code.
            </param>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="M:YAF.Core.Nntp.NntpException.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The to string.
            </returns>
        </member>
        <member name="P:YAF.Core.Nntp.NntpException.ErrorCode">
            <summary>
            Gets ErrorCode.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpException.Request">
            <summary>
            Gets Request.
            </summary>
        </member>
        <member name="P:YAF.Core.Nntp.NntpException.Message">
            <summary>
            Gets Message.
            </summary>
        </member>
        <member name="T:YAF.Core.AssemblyExtensions">
            <summary>
            The assembly extensions.
            </summary>
        </member>
        <member name="M:YAF.Core.AssemblyExtensions.GetAssemblySortOrder(System.Reflection.Assembly)">
            <summary>
            The get assembly sort order.
            </summary>
            <param name="assembly">
            The assembly.
            </param>
            <returns>
            The get assembly sort order.
            </returns>
        </member>
        <member name="M:YAF.Core.AssemblyExtensions.FindModules(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.String,System.String)">
            <summary>
            The find modules.
            </summary>
            <param name="assemblies">
            The assemblies.
            </param>
            <param name="namespaceName">
            The module namespace.
            </param>
            <param name="implementedInterfaceName">
            The module base interface.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Core.Services.Twitter.TweetAPI">
            <summary>
            Twitter Class to publish, delete, retrieve tweets and Send Direct Messages via twitter.com
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.TweetAPI.oAuth">
            <summary>
            The authorized and authenticated oAuth token
            </summary>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.#ctor(YAF.Core.Services.Twitter.OAuthTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Core.Services.Twitter.TweetAPI"/> class. 
            Create, Update, retrieve, delete tweets(status messages) using this class
            </summary>
            <param name="_oauth">
            An authorized and authenticated oAuth token
            </param>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.ShowByID(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Returns a single status, specified by the id parameter below. The status's author will be returned inline.
            This does not require authentication as long as the status is not protected
            This is a rate limited call
            </summary>
            <param name="response_format">The format in which you want twitter to respond</param>
            <param name="statusid">The numerical ID of the desired status.</param>
            <param name="optionalparameters">Any other optional parameters.Use an empty string if you dont want to pass any optional parameters</param>
            <returns>Response string from twitter in user selected format</returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.UpdateStatus(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Updates the authenticating user's status. A status update with text identical 
            to the authenticating user's current status will be ignored to prevent duplicates.
            Authentication is required and this call is not rate limited
            </summary>
            <param name="reponse_format">
            The format in which you want twitter to respond
            </param>
            <param name="tweet_message">
            The text of your status update, up to 140 characters.
            </param>
            <param name="optionalparameters">
            Any optional paramters you want to pass
            </param>
            <returns>
            Response string from twitter in user selected format 
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.SendDirectMessage(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Send a Direct Message to the Specifc User Screen Name
            </summary>
            <param name="reponse_format">
            The format in which you want twitter to respond
            </param>
            <param name="screen_name">
            The user_id of the user to send the Message to.
            </param>
            <param name="message">
            The text of your message, up to 140 characters.
            </param>
            <returns>
            Response string from twitter in user selected format 
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.SendDirectMessage(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.Int32,System.String)">
            <summary>
            Send a Direct Message to the Specifc User Name
            </summary>
            <param name="reponse_format">
            The format in which you want twitter to respond
            </param>
            <param name="user_id">
            The user_id of the user to send the Message to.
            </param>
            <param name="message">
            The text of your message, up to 140 characters.
            </param>
            <returns>
            Response string from twitter in user selected format 
            </returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.DestroyById(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Destroys the status specified by the required ID parameter.In other words deletes the specified tweet
            Requires authentication, and rate limited is false
            </summary>
            <param name="response_format">The format in which you want twitter to respond</param>
            <param name="statusid">The numerical ID of the desired status.</param>
            <param name="optionalparameters">Any other optional parameters.Use an empty string if you dont want to pass any optional parameters</param>
            <returns>Response string from twitter in user selected format</returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.RetweetById(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Retweets a tweet. Returns the original tweet with retweet details embedded.
            Does not require authentication, and rate limited is false
            </summary>
            <param name="response_format">The format in which you want twitter to respond</param>
            <param name="statusid">The numerical ID of the desired status.</param>
            <param name="optionalparameters">Any other optional parameters.Use an empty string if you dont want to pass any optional parameters</param>
            <returns>Response string from twitter in user selected format</returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.ShowRetweetsById(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Returns up to 100 of the first retweets of a given tweet.
            Does not require authentication, and rate limited is false
            </summary>
            <param name="response_format">The format in which you want twitter to respond</param>
            <param name="statusid">The numerical ID of the desired status.</param>
            <param name="optionalparameters">Any other optional parameters.Use an empty string if you dont want to pass any optional parameters</param>
            <returns>Response string from twitter in user selected format</returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.ShowRetweetedbyById(YAF.Core.Services.Twitter.TweetAPI.ResponseFormat,System.String,System.String)">
            <summary>
            Show user objects of up to 100 members who retweeted the status.
            Requires authentication, and rate limited
            </summary>
            <param name="response_format">The format in which you want twitter to respond</param>
            <param name="statusid">The numerical ID of the desired status.</param>
            <param name="optionalparameters">Any other optional parameters.Use an empty string if you dont want to pass any optional parameters</param>
            <returns>Response string from twitter in user selected format</returns>
        </member>
        <member name="M:YAF.Core.Services.Twitter.TweetAPI.GetUser">
            <summary>
            Get The Twitter User Profile of the Current User
            </summary>
            <returns>
            Returns the TwitterUser Profile
            </returns>
        </member>
        <member name="T:YAF.Core.Services.Twitter.TweetAPI.ResponseFormat">
            <summary>
            The Response Forumat for the oAuth Request
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.TweetAPI.ResponseFormat.json">
            <summary>
            json Format Type
            </summary>
        </member>
        <member name="F:YAF.Core.Services.Twitter.TweetAPI.ResponseFormat.xml">
            <summary>
            xml Format Type
            </summary>
        </member>
    </members>
</doc>
